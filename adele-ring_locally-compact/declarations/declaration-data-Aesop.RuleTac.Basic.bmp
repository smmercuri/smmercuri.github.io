{"name":"Aesop.RuleTac.Basic","instances":[{"typeNames":["Aesop.RuleTacInput"],"name":"Aesop.instInhabitedRuleTacInput","className":"Inhabited"},{"typeNames":["Aesop.RuleTacOutput"],"name":"Aesop.instInhabitedRuleTacOutput","className":"Inhabited"},{"typeNames":["Aesop.RuleTac"],"name":"Aesop.instInhabitedRuleTac","className":"Inhabited"},{"typeNames":["Aesop.CasesTarget"],"name":"Aesop.instInhabitedCasesTarget","className":"Inhabited"},{"typeNames":["Aesop.RuleTacDescr"],"name":"Aesop.instInhabitedRuleTacDescr","className":"Inhabited"}],"imports":["Init","Aesop.Index.Basic","Aesop.Options","Aesop.Percent","Aesop.Script","Std.Lean.Meta.SavedState"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L147-L147","name":"Aesop.instInhabitedRuleTacDescr","line":147,"kind":"instance","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacDescr\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacDescr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L146-L146","name":"Aesop.RuleTacDescr.preprocess","line":146,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.preprocess","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.preprocess\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">preprocess</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L145-L145","name":"Aesop.RuleTacDescr.tacticStx","line":145,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacticStx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacticStx\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">tacticStx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L144-L144","name":"Aesop.RuleTacDescr.singleRuleTac","line":144,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.singleRuleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.singleRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">singleRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L143-L143","name":"Aesop.RuleTacDescr.tacGen","line":143,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacGen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacGen\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">tacGen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L142-L142","name":"Aesop.RuleTacDescr.ruleTac","line":142,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.ruleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.ruleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">ruleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L141-L141","name":"Aesop.RuleTacDescr.tacticM","line":141,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacticM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.tacticM\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">tacticM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L139-L140","name":"Aesop.RuleTacDescr.cases","line":139,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.cases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.cases\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isRecursiveType : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L136-L138","name":"Aesop.RuleTacDescr.forwardTerm","line":136,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.forwardTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.forwardTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">forwardTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(term : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pat? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isDestruct : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L133-L135","name":"Aesop.RuleTacDescr.forwardConst","line":133,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.forwardConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.forwardConst\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">forwardConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pat? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(immediate : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isDestruct : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L132-L132","name":"Aesop.RuleTacDescr.constructors","line":132,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.constructors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.constructors\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">constructors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(constructorNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L131-L131","name":"Aesop.RuleTacDescr.applyTerm","line":131,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.applyTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.applyTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">applyTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(term : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pat? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L130-L130","name":"Aesop.RuleTacDescr.applyConst","line":130,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.applyConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr.applyConst\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span>.<span class=\"name\">applyConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pat? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L129-L147","name":"Aesop.RuleTacDescr","line":129,"kind":"inductive","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacDescr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L127-L127","name":"Aesop.instInhabitedCasesTarget","line":127,"kind":"instance","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCasesTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L126-L126","name":"Aesop.CasesTarget.patterns","line":126,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.patterns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.patterns\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">patterns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(patterns : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">Aesop.CasesPattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L125-L125","name":"Aesop.CasesTarget.decl","line":125,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.decl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.decl\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">decl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">Aesop.CasesTarget</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L124-L127","name":"Aesop.CasesTarget","line":124,"kind":"inductive","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L121-L122","name":"Aesop.CasesPattern","line":121,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L117-L117","name":"Aesop.TacGen","line":117,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.TacGen","doc":"A tactic generator is a special sort of rule tactic, intended for use with\ngenerative machine learning methods. It generates zero or more tactics\n(represented as strings) that could be applied to the goal, plus a success\nprobability for each tactic. When Aesop executes a tactic generator, it executes\neach of the tactics and, if the tactic succeeds, adds a rule application for it.\nThe tactic's success probability (which must be between 0 and 1, inclusive)\nbecomes the success probability of the rule application. A `TacGen` rule\nsucceeds if at least one of its suggested tactics succeeds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.TacGen\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacGen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L105-L105","name":"Aesop.RuleTac.ofSingleRuleTac","line":105,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofSingleRuleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofSingleRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">ofSingleRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\">Aesop.SingleRuleTac</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L99-L102","name":"Aesop.SingleRuleTac.toRuleTac","line":99,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac.toRuleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac.toRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">SingleRuleTac</span>.<span class=\"name\">toRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\">Aesop.SingleRuleTac</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L95-L96","name":"Aesop.SingleRuleTac","line":95,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac","doc":"A `RuleTac` which generates only a single `RuleApplication`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">SingleRuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L89-L90","name":"Aesop.instInhabitedRuleTac","line":89,"kind":"instance","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L87-L87","name":"Aesop.RuleTac","line":87,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTac","doc":"A `RuleTac` is the tactic that is run when a rule is applied to a goal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L82-L82","name":"Aesop.instInhabitedRuleTacOutput","line":82,"kind":"instance","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacOutput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">Aesop.RuleTacOutput</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L81-L81","name":"Aesop.RuleTacOutput.applications","line":81,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.applications","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.applications\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span>.<span class=\"name\">applications</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">Aesop.RuleTacOutput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L80-L80","name":"Aesop.RuleTacOutput.mk","line":80,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(applications : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">Aesop.RuleTacOutput</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L80-L82","name":"Aesop.RuleTacOutput","line":80,"kind":"structure","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput","doc":"The result of a rule tactic is a list of rule applications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L68-L73","name":"Aesop.RuleApplication.check","line":68,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.check","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.check\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L64-L64","name":"Aesop.RuleApplication.successProbability?","line":64,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.successProbability?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.successProbability?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">successProbability?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Percent.html#Aesop.Percent\">Aesop.Percent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L63-L63","name":"Aesop.RuleApplication.scriptBuilder?","line":63,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.scriptBuilder?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.scriptBuilder?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">scriptBuilder?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script.html#Aesop.RuleTacScriptBuilder\">Aesop.RuleTacScriptBuilder</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L62-L62","name":"Aesop.RuleApplication.postState","line":62,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.postState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.postState\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">postState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L61-L61","name":"Aesop.RuleApplication.goals","line":61,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.goals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.goals\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">goals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L60-L60","name":"Aesop.RuleApplication.mk","line":60,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(scriptBuilder? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script.html#Aesop.RuleTacScriptBuilder\">Aesop.RuleTacScriptBuilder</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(successProbability? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Percent.html#Aesop.Percent\">Aesop.Percent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L60-L64","name":"Aesop.RuleApplication","line":60,"kind":"structure","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication","doc":"A single rule application, representing the application of a tactic to the input\ngoal. Must accurately report the following information:\n\n- `goals`: the goals generated by the tactic.\n- `postState`: the `MetaM` state after the tactic was run.\n- `scriptBuilder?`: script builder for the tactic. If\n  `input.options.generateScript = false` (where `input` is the `RuleTacInput`),\n  this field is ignored, so you can use `none`. If the tactic does not support\n  script generation, also use `none`.\n- `successProbability`: The success probability of this rule application. If\n  `none`, we use the success probability of the applied rule.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L45-L45","name":"Aesop.instInhabitedRuleTacInput","line":45,"kind":"instance","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacInput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L44-L44","name":"Aesop.RuleTacInput.options","line":44,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L43-L43","name":"Aesop.RuleTacInput.patternInstantiations","line":43,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.patternInstantiations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.patternInstantiations\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">patternInstantiations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePatternInstantiation\">Aesop.RulePatternInstantiation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L42-L42","name":"Aesop.RuleTacInput.indexMatchLocations","line":42,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.indexMatchLocations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.indexMatchLocations\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">indexMatchLocations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">Aesop.IndexMatchLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L41-L41","name":"Aesop.RuleTacInput.mvars","line":41,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mvars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mvars\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">mvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L40-L40","name":"Aesop.RuleTacInput.goal","line":40,"kind":"def","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.goal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.goal\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">goal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L39-L39","name":"Aesop.RuleTacInput.mk","line":39,"kind":"ctor","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvars : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexMatchLocations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">Aesop.IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(patternInstantiations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePatternInstantiation\">Aesop.RulePatternInstantiation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">Aesop.RuleTacInput</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/RuleTac/Basic.lean#L39-L45","name":"Aesop.RuleTacInput","line":39,"kind":"structure","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput","doc":"Input for a rule tactic. Contains:\n\n- `goal`: the goal on which the rule is run.\n- `mvars`: the set of mvars which occur in `goal`.\n- `indexMatchLocations`: if the rule is indexed, the locations (e.g. hyps or the\n  target) matched by the rule's index entries. Otherwise an empty set.\n- `patternInstantiations`: if the rule has a pattern, the pattern instantiations\n  that were found in the goal. Each instantiation is a list of expressions which\n  were found by matching the pattern against expressions in the goal. For\n  example, if `h : max a b = max a c` appears in the goal and the rule has\n  pattern `max x y`, there will be two pattern instantiations `[a, b]`\n  (representing the substitution `{x ↦ a, y ↦ b}`) and `[a, c]`. If the rule\n  does not have a pattern, `patternInstantiations` is empty; otherwise it's\n  guaranteed to be non-empty.\n- `options`: the options given to Aesop.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}