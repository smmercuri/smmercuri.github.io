{"name":"Aesop.Script.Main","instances":[],"imports":["Init","Aesop.Options","Aesop.Script.Check","Aesop.Script.StructureDynamic","Aesop.Script.StructureStatic","Aesop.Script.OptimizeSyntax"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/Main.lean#L36-L53","name":"Aesop.checkAndTraceScript","line":36,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.checkAndTraceScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.checkAndTraceScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkAndTraceScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sscript? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectCompleteProof : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/Main.lean#L18-L30","name":"Aesop.Script.UScript.optimize","line":18,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">UScript</span>.<span class=\"name\">optimize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>)</span></span></div></div>"}]}