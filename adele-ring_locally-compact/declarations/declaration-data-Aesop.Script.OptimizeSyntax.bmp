{"name":"Aesop.Script.OptimizeSyntax","instances":[{"typeNames":["Aesop.SyntaxMap.Key"],"name":"Aesop.SyntaxMap.instInhabitedKey","className":"Inhabited"},{"typeNames":["Aesop.SyntaxMap.Key"],"name":"Aesop.SyntaxMap.instBEqKey","className":"BEq"},{"typeNames":["Aesop.SyntaxMap.Key"],"name":"Aesop.SyntaxMap.instHashableKey","className":"Hashable"},{"typeNames":["Aesop.SyntaxMap.Key"],"name":"Aesop.SyntaxMap.Key.instToString","className":"ToString"},{"typeNames":["Aesop.SyntaxMap"],"name":"Aesop.instInhabitedSyntaxMap","className":"Inhabited"},{"typeNames":["Aesop.SyntaxRewrite"],"name":"Aesop.instInhabitedSyntaxRewrite","className":"Inhabited"},{"typeNames":["Aesop.SyntaxMap"],"name":"Aesop.SyntaxMap.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Lean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L118-L121","name":"Aesop.optimizeSyntax","line":118,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntax\"><span class=\"name\">Aesop</span>.<span class=\"name\">optimizeSyntax</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKinds\">Lean.SyntaxNodeKinds</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">kind</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">kind</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L102-L116","name":"Aesop.SyntaxRewrite.focusRenameI","line":102,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.focusRenameI","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.focusRenameI\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewrite</span>.<span class=\"name\">focusRenameI</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L92-L100","name":"Aesop.optimizeSyntaxWith.optimizeHead","line":92,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith.optimizeHead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith.optimizeHead\"><span class=\"name\">Aesop</span>.<span class=\"name\">optimizeSyntaxWith</span>.<span class=\"name\">optimizeHead</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rws : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\">Aesop.SyntaxRewriteMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L84-L90","name":"Aesop.optimizeSyntaxWith.go","line":84,"kind":"opaque","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">optimizeSyntaxWith</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rws : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\">Aesop.SyntaxRewriteMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L80-L100","name":"Aesop.optimizeSyntaxWith","line":80,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.optimizeSyntaxWith\"><span class=\"name\">Aesop</span>.<span class=\"name\">optimizeSyntaxWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rws : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\">Aesop.SyntaxRewriteMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L75-L76","name":"Aesop.SyntaxRewriteMap.insert","line":75,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap.insert\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewriteMap</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rw : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\">Aesop.SyntaxRewriteMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\">Aesop.SyntaxRewriteMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L71-L71","name":"Aesop.SyntaxRewriteMap","line":71,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewriteMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewriteMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L64-L67","name":"Aesop.SyntaxMap.insertWith","line":64,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.insertWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.insertWith\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">insertWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(key : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L60-L61","name":"Aesop.SyntaxMap.insert","line":60,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.insert\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(key : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L57-L58","name":"Aesop.SyntaxMap.findStx?","line":57,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.findStx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.findStx?\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">findStx?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L54-L55","name":"Aesop.SyntaxMap.find?","line":54,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.find?\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(key : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L51-L52","name":"Aesop.SyntaxMap.instEmptyCollection","line":51,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L48-L49","name":"Aesop.SyntaxMap.empty","line":48,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L44-L44","name":"Aesop.instInhabitedSyntaxRewrite","line":44,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.instInhabitedSyntaxRewrite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.instInhabitedSyntaxRewrite\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSyntaxRewrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L43-L43","name":"Aesop.SyntaxRewrite.run","line":43,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewrite</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L42-L42","name":"Aesop.SyntaxRewrite.keys","line":42,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.keys","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.keys\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewrite</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L41-L41","name":"Aesop.SyntaxRewrite.mk","line":41,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewrite</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(keys : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(run : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\">Aesop.SyntaxRewrite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L41-L44","name":"Aesop.SyntaxRewrite","line":41,"kind":"structure","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxRewrite\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxRewrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L39-L39","name":"Aesop.instInhabitedSyntaxMap","line":39,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.instInhabitedSyntaxMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.instInhabitedSyntaxMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSyntaxMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a> u_1} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L38-L38","name":"Aesop.SyntaxMap.toPHashMap","line":38,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.toPHashMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.toPHashMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">toPHashMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L37-L37","name":"Aesop.SyntaxMap.mk","line":37,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toPHashMap : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\">Aesop.SyntaxMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L37-L39","name":"Aesop.SyntaxMap","line":37,"kind":"structure","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L29-L33","name":"Aesop.SyntaxMap.Key.ofSyntax","line":29,"kind":"def","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.ofSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.ofSyntax\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">ofSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L22-L27","name":"Aesop.SyntaxMap.Key.instToString","line":22,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.instToString\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L18-L18","name":"Aesop.SyntaxMap.instHashableKey","line":18,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instHashableKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instHashableKey\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">instHashableKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L18-L18","name":"Aesop.SyntaxMap.instBEqKey","line":18,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instBEqKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instBEqKey\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">instBEqKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L18-L18","name":"Aesop.SyntaxMap.instInhabitedKey","line":18,"kind":"instance","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instInhabitedKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.instInhabitedKey\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">instInhabitedKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L17-L17","name":"Aesop.SyntaxMap.Key.ident","line":17,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.ident","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.ident\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">ident</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L16-L16","name":"Aesop.SyntaxMap.Key.atom","line":16,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.atom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.atom\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">atom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L15-L15","name":"Aesop.SyntaxMap.Key.node","line":15,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.node","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.node\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">node</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L14-L14","name":"Aesop.SyntaxMap.Key.missing","line":14,"kind":"ctor","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.missing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key.missing\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span>.<span class=\"name\">missing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\">Aesop.SyntaxMap.Key</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Script/OptimizeSyntax.lean#L13-L18","name":"Aesop.SyntaxMap.Key","line":13,"kind":"inductive","docLink":"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/OptimizeSyntax.html#Aesop.SyntaxMap.Key\"><span class=\"name\">Aesop</span>.<span class=\"name\">SyntaxMap</span>.<span class=\"name\">Key</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}