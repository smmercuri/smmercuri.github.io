{"name":"Aesop.Search.Expansion","instances":[],"imports":["Init","Aesop.Search.Expansion.Norm"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L258-L259","name":"Aesop.expandGoal.fmtUnsafe","line":258,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtUnsafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(result : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L254-L256","name":"Aesop.expandGoal.fmtSafe","line":254,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtSafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtSafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtSafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(result : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L246-L252","name":"Aesop.expandGoal.fmtNorm","line":246,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtNorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtNorm\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(result : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L241-L244","name":"Aesop.expandGoal.doUnsafe","line":241,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.doUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.doUnsafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">doUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(gref : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postponedSafeRules : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">Aesop.PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L222-L259","name":"Aesop.expandGoal","line":222,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(gref : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L209-L220","name":"Aesop.runFirstUnsafeRule.loop","line":209,"kind":"opaque","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule.loop\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstUnsafeRule</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(queue : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.UnsafeQueue\">Aesop.UnsafeQueue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.UnsafeQueue\">Aesop.UnsafeQueue</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L198-L220","name":"Aesop.runFirstUnsafeRule","line":198,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstUnsafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(postponedSafeRules : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">Aesop.PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L193-L196","name":"Aesop.applyPostponedSafeRule","line":193,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.applyPostponedSafeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.applyPostponedSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">applyPostponedSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">Aesop.PostponedSafeRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L175-L191","name":"Aesop.runFirstSafeRule","line":175,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstSafeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(gref : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L169-L173","name":"Aesop.SafeRulesResult.toEmoji","line":169,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.toEmoji","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L167-L167","name":"Aesop.SafeRulesResult.skipped","line":167,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.skipped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.skipped\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">skipped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L166-L166","name":"Aesop.SafeRulesResult.failed","line":166,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.failed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.failed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">failed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(postponed : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">Aesop.PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L165-L165","name":"Aesop.SafeRulesResult.succeeded","line":165,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.succeeded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.succeeded\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">succeeded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newRapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L164-L164","name":"Aesop.SafeRulesResult.proved","line":164,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.proved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.proved\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">proved</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newRapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">Aesop.SafeRulesResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L163-L167","name":"Aesop.SafeRulesResult","line":163,"kind":"inductive","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L152-L161","name":"Aesop.runUnsafeRule","line":152,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runUnsafeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runUnsafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runUnsafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchResult : <span class=\"fn\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">Aesop.UnsafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L128-L150","name":"Aesop.runSafeRule","line":128,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runSafeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchResult : <span class=\"fn\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRule\">Aesop.SafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">Aesop.SafeRuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L110-L126","name":"Aesop.runRegularRuleCore","line":110,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runRegularRuleCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runRegularRuleCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">runRegularRuleCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rule : <a href=\"./Aesop/Rule.html#Aesop.RegularRule\">Aesop.RegularRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexMatchLocations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">Aesop.IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(patternInstantiations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePatternInstantiation\">Aesop.RulePatternInstantiation</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">Aesop.RuleTacOutput</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L106-L108","name":"Aesop.withRuleTraceNode.fmt","line":106,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode.fmt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode.fmt\"><span class=\"name\">Aesop</span>.<span class=\"name\">withRuleTraceNode</span>.<span class=\"name\">fmt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ruleName : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toEmoji : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suffix : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L102-L108","name":"Aesop.withRuleTraceNode","line":102,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode\"><span class=\"name\">Aesop</span>.<span class=\"name\">withRuleTraceNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ruleName : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toEmoji : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suffix : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L64-L95","name":"Aesop.addRapps","line":64,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.addRapps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.addRapps\"><span class=\"name\">Aesop</span>.<span class=\"name\">addRapps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parentRef : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rule : <a href=\"./Aesop/Rule.html#Aesop.RegularRule\">Aesop.RegularRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">Aesop.RuleApplication</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L50-L62","name":"Aesop.runRegularRuleTac","line":50,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.runRegularRuleTac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runRegularRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">runRegularRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">Aesop.RuleTac</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ruleName : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexMatchLocations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">Aesop.IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(patternInstantiations : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePatternInstantiation\">Aesop.RulePatternInstantiation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Init/Core.html#Sum\">âŠ•</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">Aesop.RuleTacOutput</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L44-L46","name":"Aesop.SafeRuleResult.isSuccessfulOrPostponed","line":44,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.isSuccessfulOrPostponed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.isSuccessfulOrPostponed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">isSuccessfulOrPostponed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">Aesop.SafeRuleResult</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L40-L42","name":"Aesop.SafeRuleResult.toEmoji","line":40,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.toEmoji","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">Aesop.SafeRuleResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L36-L36","name":"Aesop.SafeRuleResult.postponed","line":36,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.postponed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.postponed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">postponed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(result : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">Aesop.PostponedSafeRule</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">Aesop.SafeRuleResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L35-L35","name":"Aesop.SafeRuleResult.regular","line":35,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.regular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.regular\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">regular</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(result : <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">Aesop.SafeRuleResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L34-L36","name":"Aesop.SafeRuleResult","line":34,"kind":"inductive","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L28-L30","name":"Aesop.RuleResult.isSuccessful","line":28,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.isSuccessful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.isSuccessful\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">isSuccessful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L23-L26","name":"Aesop.RuleResult.toEmoji","line":23,"kind":"def","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.toEmoji","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L19-L19","name":"Aesop.RuleResult.failed","line":19,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.failed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.failed\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">failed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L18-L18","name":"Aesop.RuleResult.succeeded","line":18,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.succeeded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.succeeded\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">succeeded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newRapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L17-L17","name":"Aesop.RuleResult.proved","line":17,"kind":"ctor","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.proved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.proved\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">proved</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newRapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/79fb157c6a5061190d169535f8e5cb007914a82e/Aesop/Search/Expansion.lean#L16-L19","name":"Aesop.RuleResult","line":16,"kind":"inductive","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}