{"name":"Batteries.Data.Int.Order","instances":[],"imports":["Init","Batteries.Tactic.Alias"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/e7897807913fafdab31b01b9f627550bcc96cff2/Batteries/Data/Int/Order.lean#L10-L10","name":"Int.ofNat_natAbs_eq_of_nonneg","line":10,"kind":"theorem","docLink":"./Batteries/Data/Int/Order.html#Int.ofNat_natAbs_eq_of_nonneg","doc":"**Alias** of `Int.natAbs_of_nonneg`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/Int/Order.html#Int.ofNat_natAbs_eq_of_nonneg\"><span class=\"name\">Int</span>.<span class=\"name\">ofNat_natAbs_eq_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.natAbs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"}]}