{"name":"Init.Data.Nat.Power2","instances":[],"imports":["Init.Data.Nat.Linear"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L48-L52","name":"Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go","line":48,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo.isPowerOfTwo_go\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_nextPowerOfTwo</span>.<span class=\"name\">isPowerOfTwo_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(power : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">power</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go\">Nat.nextPowerOfTwo.go</a> <span class=\"fn\">n</span> <span class=\"fn\">power</span> <span class=\"fn\">h₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L44-L54","name":"Nat.isPowerOfTwo_nextPowerOfTwo","line":44,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo_nextPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo_nextPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo\">Nat.nextPowerOfTwo</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L38-L42","name":"Nat.pos_of_isPowerOfTwo","line":38,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.pos_of_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.pos_of_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_isPowerOfTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L34-L36","name":"Nat.mul2_isPowerOfTwo_of_isPowerOfTwo","line":34,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.mul2_isPowerOfTwo_of_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.mul2_isPowerOfTwo_of_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">mul2_isPowerOfTwo_of_isPowerOfTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L31-L32","name":"Nat.one_isPowerOfTwo","line":31,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.one_isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.one_isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">one_isPowerOfTwo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\">Nat.isPowerOfTwo</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L29-L29","name":"Nat.isPowerOfTwo","line":29,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.isPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">isPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L21-L25","name":"Nat.nextPowerOfTwo.go","line":21,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo.go\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(power : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L18-L27","name":"Nat.nextPowerOfTwo","line":18,"kind":"def","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L13-L16","name":"Nat.nextPowerOfTwo_dec","line":13,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo_dec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.nextPowerOfTwo_dec\"><span class=\"name\">Nat</span>.<span class=\"name\">nextPowerOfTwo_dec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{power : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">power</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">power</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/Data/Nat/Power2.lean#L11-L11","name":"Nat.two_pow_pos","line":11,"kind":"theorem","docLink":"./Init/Data/Nat/Power2.html#Nat.two_pow_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Power2.html#Nat.two_pow_pos\"><span class=\"name\">Nat</span>.<span class=\"name\">two_pow_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">w</span></span></span></div></div>"}]}