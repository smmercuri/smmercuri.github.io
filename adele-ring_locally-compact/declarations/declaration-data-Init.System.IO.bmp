{"name":"Init.System.IO","instances":[{"typeNames":["EIO"],"name":"instMonadEIO","className":"Monad"},{"typeNames":["EIO"],"name":"instMonadFinallyEIO","className":"MonadFinally"},{"typeNames":["EIO"],"name":"instMonadExceptOfEIO","className":"MonadExceptOf"},{"typeNames":["EIO"],"name":"instOrElseEIO","className":"OrElse"},{"typeNames":["EIO"],"name":"instInhabitedEIO","className":"Inhabited"},{"typeNames":["BaseIO"],"name":"instMonadBaseIO","className":"Monad"},{"typeNames":["BaseIO"],"name":"instMonadFinallyBaseIO","className":"MonadFinally"},{"typeNames":["BaseIO","EIO"],"name":"instMonadLiftBaseIOEIO","className":"MonadLift"},{"typeNames":["IO.TaskState"],"name":"IO.instInhabitedTaskState","className":"Inhabited"},{"typeNames":["IO.TaskState"],"name":"IO.instReprTaskState","className":"Repr"},{"typeNames":["Eq"],"name":"IO.instDecidableEqTaskState","className":"Decidable"},{"typeNames":["IO.TaskState"],"name":"IO.instOrdTaskState","className":"Ord"},{"typeNames":["IO.TaskState"],"name":"IO.instLTTaskState","className":"LT"},{"typeNames":["IO.TaskState"],"name":"IO.instLETaskState","className":"LE"},{"typeNames":["IO.TaskState"],"name":"IO.instMinTaskState","className":"Min"},{"typeNames":["IO.TaskState"],"name":"IO.instMaxTaskState","className":"Max"},{"typeNames":["IO.TaskState"],"name":"IO.instToStringTaskState","className":"ToString"},{"typeNames":["IO.FS.Stream"],"name":"IO.FS.instInhabitedStream","className":"Inhabited"},{"typeNames":["IO.FS.DirEntry"],"name":"IO.FS.instReprDirEntry","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instReprFileType","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instBEqFileType","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instReprSystemTime","className":"Repr"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instBEqSystemTime","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instOrdSystemTime","className":"Ord"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instInhabitedSystemTime","className":"Inhabited"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLTSystemTime","className":"LT"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLESystemTime","className":"LE"},{"typeNames":["IO.FS.Metadata"],"name":"IO.FS.instReprMetadata","className":"Repr"},{"typeNames":["ST","BaseIO"],"name":"IO.instMonadLiftSTRealWorldBaseIO","className":"MonadLift"},{"typeNames":[],"name":"Lean.instEval","className":"Lean.Eval"},{"typeNames":[],"name":"Lean.instEvalOfRepr","className":"Lean.Eval"},{"typeNames":["Unit"],"name":"Lean.instEvalUnit","className":"Lean.Eval"},{"typeNames":["IO"],"name":"Lean.instEvalIO","className":"Lean.Eval"},{"typeNames":["BaseIO"],"name":"Lean.instEvalBaseIO","className":"Lean.Eval"}],"imports":["Init.Control.Reader","Init.Data.String","Init.Data.ByteArray","Init.System.IOError","Init.System.FilePath","Init.System.ST","Init.Data.ToString.Macro","Init.Data.Ord"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L915-L915","name":"termPrintln!__","line":915,"kind":"def","docLink":"./Init/System/IO.html#termPrintln!__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#termPrintln!__\"><span class=\"name\">termPrintln!__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L910-L911","name":"Lean.runEval","line":910,"kind":"def","docLink":"./Init/System/IO.html#Lean.runEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.runEval\"><span class=\"name\">Lean</span>.<span class=\"name\">runEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L905-L908","name":"Lean.instEvalBaseIO","line":905,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalBaseIO\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L900-L903","name":"Lean.instEvalIO","line":900,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalIO\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L897-L898","name":"Lean.instEvalUnit","line":897,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalUnit\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L894-L895","name":"Lean.instEvalOfRepr","line":894,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalOfRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalOfRepr\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalOfRepr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L891-L892","name":"Lean.instEval","line":891,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEval\"><span class=\"name\">Lean</span>.<span class=\"name\">instEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L889-L889","name":"Lean.Eval.eval","line":889,"kind":"def","docLink":"./Init/System/IO.html#Lean.Eval.eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval.eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span>.<span class=\"name\">eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L885-L885","name":"Lean.Eval.mk","line":885,"kind":"ctor","docLink":"./Init/System/IO.html#Lean.Eval.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(eval : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L885-L889","name":"Lean.Eval","line":885,"kind":"class","docLink":"./Init/System/IO.html#Lean.Eval","doc":"Typeclass used for presenting the output of an `#eval` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L865-L875","name":"IO.FS.withIsolatedStreams","line":865,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withIsolatedStreams","doc":"Run action with `stdin` emptied and `stdout+stderr` captured into a `String`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withIsolatedStreams\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withIsolatedStreams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isolateStderr : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L839-L860","name":"IO.FS.Stream.ofBuffer","line":839,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofBuffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofBuffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofBuffer</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L837-L837","name":"IO.FS.Stream.Buffer.pos","line":837,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.pos\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L836-L836","name":"IO.FS.Stream.Buffer.data","line":836,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.data","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.data\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L835-L835","name":"IO.FS.Stream.Buffer.mk","line":835,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L835-L837","name":"IO.FS.Stream.Buffer","line":835,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L827-L833","name":"IO.FS.Stream.ofHandle","line":827,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofHandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofHandle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofHandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L814-L815","name":"IO.CancelToken.isSet","line":814,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.isSet","doc":"Checks whether the cancellation token has been activated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.isSet\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">isSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L810-L811","name":"IO.CancelToken.set","line":810,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.set","doc":"Activates a cancellation token. Idempotent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.set\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">set</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L806-L807","name":"IO.CancelToken.new","line":806,"kind":"def","docLink":"./Init/System/IO.html#IO.CancelToken.new","doc":"Creates a new cancellation token. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.new\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">new</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L800-L800","name":"IO.CancelToken.mk","line":800,"kind":"ctor","docLink":"./Init/System/IO.html#IO.CancelToken.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken.mk\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L800-L801","name":"IO.CancelToken","line":800,"kind":"structure","docLink":"./Init/System/IO.html#IO.CancelToken","doc":"Mutable cell that can be passed around for purposes of cooperative task cancellation: request\ncancellation with `CancelToken.set` and check for it with `CancelToken.isSet`.\n\nThis is a more flexible alternative to `Task.cancel` as the token can be shared between multiple\ntasks.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.CancelToken\"><span class=\"name\">IO</span>.<span class=\"name\">CancelToken</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L790-L791","name":"IO.mkRef","line":790,"kind":"def","docLink":"./Init/System/IO.html#IO.mkRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mkRef\"><span class=\"name\">IO</span>.<span class=\"name\">mkRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L788-L788","name":"IO.instMonadLiftSTRealWorldBaseIO","line":788,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO\"><span class=\"name\">IO</span>.<span class=\"name\">instMonadLiftSTRealWorldBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a></span>)</span> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L786-L786","name":"IO.Ref","line":786,"kind":"def","docLink":"./Init/System/IO.html#IO.Ref","doc":"References "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Ref\"><span class=\"name\">IO</span>.<span class=\"name\">Ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L782-L783","name":"IO.setAccessRights","line":782,"kind":"def","docLink":"./Init/System/IO.html#IO.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L780-L780","name":"IO.Prim.setAccessRights","line":780,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Prim.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Prim.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">Prim</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L774-L778","name":"IO.FileRight.flags","line":774,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L772-L772","name":"IO.FileRight.other","line":772,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.other\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L771-L771","name":"IO.FileRight.group","line":771,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.group","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.group\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L770-L770","name":"IO.FileRight.user","line":770,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.user","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.user\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">user</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L769-L769","name":"IO.FileRight.mk","line":769,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FileRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(user : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(group : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(other : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L769-L772","name":"IO.FileRight","line":769,"kind":"structure","docLink":"./Init/System/IO.html#IO.FileRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L763-L767","name":"IO.AccessRight.flags","line":763,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L761-L761","name":"IO.AccessRight.execution","line":761,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.execution","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.execution\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">execution</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L760-L760","name":"IO.AccessRight.write","line":760,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.write\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L759-L759","name":"IO.AccessRight.read","line":759,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.read\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L758-L758","name":"IO.AccessRight.mk","line":758,"kind":"ctor","docLink":"./Init/System/IO.html#IO.AccessRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(read : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(execution : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L758-L761","name":"IO.AccessRight","line":758,"kind":"structure","docLink":"./Init/System/IO.html#IO.AccessRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L754-L754","name":"IO.Process.exit","line":754,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.exit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.exit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">exit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L748-L752","name":"IO.Process.run","line":748,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.run","doc":"Run process to completion and return stdout on success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.run\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L739-L745","name":"IO.Process.output","line":739,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.output","doc":"Run process to completion and capture output.\nThe process does not inherit the standard input of the caller.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">output</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L733-L733","name":"IO.Process.Output.stderr","line":733,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L732-L732","name":"IO.Process.Output.stdout","line":732,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L731-L731","name":"IO.Process.Output.exitCode","line":731,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.exitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.exitCode\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">exitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L730-L730","name":"IO.Process.Output.mk","line":730,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Output.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exitCode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L730-L733","name":"IO.Process.Output","line":730,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Output","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L727-L728","name":"IO.Process.Child.takeStdin","line":727,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.takeStdin","doc":"Extract the `stdin` field from a `Child` object, allowing them to be freed independently.\nThis operation is necessary for closing the child process' stdin while still holding on to a process handle,\ne.g. for `Child.wait`. A file handle is closed when all references to it are dropped, which without this\noperation includes the `Child` object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.takeStdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">takeStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> →\n  <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span> <a href=\"./Init/Prelude.html#Prod\">×</a>       <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">{ <span class=\"fn\">stdin</span> := <a href=\"./Init/System/IO.html#IO.Process.Stdio.null\">IO.Process.Stdio.null</a>, <span class=\"fn\">stdout</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>, <span class=\"fn\">stderr</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span> }</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L719-L719","name":"IO.Process.Child.kill","line":719,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.kill","doc":"Terminates the child process using the SIGTERM signal or a platform analogue.\nIf the process was started using `SpawnArgs.setsid`, terminates the entire process group instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.kill\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">kill</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L715-L715","name":"IO.Process.Child.wait","line":715,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.wait","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.wait\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L713-L713","name":"IO.Process.spawn","line":713,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.spawn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.spawn\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">spawn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\"><span class=\"fn\">args</span>.toStdioConfig</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L711-L711","name":"IO.Process.Child.stderr","line":711,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L710-L710","name":"IO.Process.Child.stdout","line":710,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L709-L709","name":"IO.Process.Child.stdin","line":709,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L708-L708","name":"IO.Process.Child.mk","line":708,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Child.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span>.toHandleType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L708-L711","name":"IO.Process.Child","line":708,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Child","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L705-L705","name":"IO.Process.SpawnArgs.setsid","line":705,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.setsid","doc":"Start process in new session and process group using `setsid`. Currently a no-op on non-POSIX platforms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.setsid\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">setsid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L703-L703","name":"IO.Process.SpawnArgs.env","line":703,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.env","doc":"Add or remove environment variables for the process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.env\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L701-L701","name":"IO.Process.SpawnArgs.cwd","line":701,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cwd","doc":"Working directory for the process. Inherit from current process if `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cwd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cwd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L699-L699","name":"IO.Process.SpawnArgs.args","line":699,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.args","doc":"Arguments for the process "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.args\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L697-L697","name":"IO.Process.SpawnArgs.cmd","line":697,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cmd","doc":"Command name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cmd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L695-L695","name":"IO.Process.SpawnArgs.mk","line":695,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toStdioConfig : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cwd : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(setsid : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L695-L705","name":"IO.Process.SpawnArgs","line":695,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L693-L693","name":"IO.Process.StdioConfig.stderr","line":693,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stderr","doc":"Configuration for the process' stderr handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L691-L691","name":"IO.Process.StdioConfig.stdout","line":691,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdout","doc":"Configuration for the process' stdout handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L689-L689","name":"IO.Process.StdioConfig.stdin","line":689,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdin","doc":"Configuration for the process' stdin handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L687-L687","name":"IO.Process.StdioConfig.mk","line":687,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L687-L693","name":"IO.Process.StdioConfig","line":687,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.StdioConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L682-L685","name":"IO.Process.Stdio.toHandleType","line":682,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Stdio.toHandleType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">toHandleType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L680-L680","name":"IO.Process.Stdio.null","line":680,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.null\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">null</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L679-L679","name":"IO.Process.Stdio.inherit","line":679,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.inherit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.inherit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">inherit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L678-L678","name":"IO.Process.Stdio.piped","line":678,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.piped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.piped\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">piped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L677-L680","name":"IO.Process.Stdio","line":677,"kind":"inductive","docLink":"./Init/System/IO.html#IO.Process.Stdio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L675-L675","name":"IO.Process.getPID","line":675,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.getPID","doc":"Returns the process ID of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.getPID\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">getPID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L672-L672","name":"IO.Process.setCurrentDir","line":672,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.setCurrentDir","doc":"Sets the current working directory of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.setCurrentDir\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">setCurrentDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L669-L669","name":"IO.Process.getCurrentDir","line":669,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.getCurrentDir","doc":"Returns the current working directory of the calling process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.getCurrentDir\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">getCurrentDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L658-L664","name":"IO.FS.removeDirAll","line":658,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDirAll","doc":"Fully remove given directory by deleting all contained files and directories in an unspecified order.\nFails if any contained entry cannot be deleted or was newly created during execution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L641-L653","name":"IO.FS.createDirAll","line":641,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDirAll","doc":"Create given path and all missing parents as directories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L634-L638","name":"IO.appDir","line":634,"kind":"def","docLink":"./Init/System/IO.html#IO.appDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appDir\"><span class=\"name\">IO</span>.<span class=\"name\">appDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L623-L624","name":"IO.eprintln","line":623,"kind":"def","docLink":"./Init/System/IO.html#IO.eprintln","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprintln\"><span class=\"name\">IO</span>.<span class=\"name\">eprintln</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L619-L621","name":"IO.eprint","line":619,"kind":"def","docLink":"./Init/System/IO.html#IO.eprint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprint\"><span class=\"name\">IO</span>.<span class=\"name\">eprint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L616-L617","name":"IO.println","line":616,"kind":"def","docLink":"./Init/System/IO.html#IO.println","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.println\"><span class=\"name\">IO</span>.<span class=\"name\">println</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L612-L614","name":"IO.print","line":612,"kind":"def","docLink":"./Init/System/IO.html#IO.print","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.print\"><span class=\"name\">IO</span>.<span class=\"name\">print</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L608-L610","name":"IO.withStderr","line":608,"kind":"def","docLink":"./Init/System/IO.html#IO.withStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStderr\"><span class=\"name\">IO</span>.<span class=\"name\">withStderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L601-L606","name":"IO.withStdout","line":601,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdout\"><span class=\"name\">IO</span>.<span class=\"name\">withStdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L597-L599","name":"IO.withStdin","line":597,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdin\"><span class=\"name\">IO</span>.<span class=\"name\">withStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L575-L591","name":"System.FilePath.walkDir.go","line":575,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.walkDir.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir.go\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L572-L591","name":"System.FilePath.walkDir","line":572,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.walkDir","doc":"Return all filesystem entries of a preorder traversal of all directories satisfying `enter`, starting at `p`.\nSymbolic links are visited as well by default. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L566-L567","name":"System.FilePath.pathExists","line":566,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.pathExists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.pathExists\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">pathExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L561-L564","name":"System.FilePath.isDir","line":561,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.isDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.isDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">isDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L559-L559","name":"System.FilePath.metadata","line":559,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.metadata\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L556-L556","name":"System.FilePath.readDir","line":556,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.readDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.readDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">readDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L547-L547","name":"IO.FS.instReprMetadata","line":547,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprMetadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L546-L546","name":"IO.FS.Metadata.type","line":546,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.type\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L545-L545","name":"IO.FS.Metadata.byteSize","line":545,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.byteSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.byteSize\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">byteSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L544-L544","name":"IO.FS.Metadata.modified","line":544,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.modified\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L543-L543","name":"IO.FS.Metadata.accessed","line":543,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.accessed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.accessed\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">accessed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L541-L541","name":"IO.FS.Metadata.mk","line":541,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Metadata.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessed : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modified : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(byteSize : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L541-L547","name":"IO.FS.Metadata","line":541,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L539-L539","name":"IO.FS.instLESystemTime","line":539,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLESystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLESystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLESystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L538-L538","name":"IO.FS.instLTSystemTime","line":538,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLTSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLTSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLTSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L536-L536","name":"IO.FS.instInhabitedSystemTime","line":536,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L536-L536","name":"IO.FS.instOrdSystemTime","line":536,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instOrdSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instOrdSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instOrdSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L536-L536","name":"IO.FS.instBEqSystemTime","line":536,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L536-L536","name":"IO.FS.instReprSystemTime","line":536,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L535-L535","name":"IO.FS.SystemTime.nsec","line":535,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.nsec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.nsec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">nsec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L534-L534","name":"IO.FS.SystemTime.sec","line":534,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.sec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.sec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">sec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L533-L533","name":"IO.FS.SystemTime.mk","line":533,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.SystemTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sec : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nsec : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L533-L536","name":"IO.FS.SystemTime","line":533,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.SystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L531-L531","name":"IO.FS.instBEqFileType","line":531,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L531-L531","name":"IO.FS.instReprFileType","line":531,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L530-L530","name":"IO.FS.FileType.other","line":530,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.other\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L529-L529","name":"IO.FS.FileType.symlink","line":529,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.symlink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.symlink\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">symlink</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L528-L528","name":"IO.FS.FileType.file","line":528,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.file","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.file\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">file</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L527-L527","name":"IO.FS.FileType.dir","line":527,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.dir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.dir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">dir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L526-L531","name":"IO.FS.FileType","line":526,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.FileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L523-L524","name":"IO.FS.DirEntry.path","line":523,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.path\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(entry : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L521-L521","name":"IO.FS.instReprDirEntry","line":521,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprDirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprDirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprDirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L520-L520","name":"IO.FS.DirEntry.fileName","line":520,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.fileName\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L519-L519","name":"IO.FS.DirEntry.root","line":519,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.root\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L518-L518","name":"IO.FS.DirEntry.mk","line":518,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.DirEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(root : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L518-L521","name":"IO.FS.DirEntry","line":518,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.DirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L515-L516","name":"IO.FS.Stream.putStrLn","line":515,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(strm : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L511-L513","name":"IO.FS.writeFile","line":511,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L507-L509","name":"IO.FS.writeBinFile","line":507,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L495-L504","name":"IO.FS.lines.read","line":495,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.lines.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lines : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L493-L505","name":"IO.FS.lines","line":493,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.lines","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L489-L491","name":"IO.FS.readFile","line":489,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L485-L487","name":"IO.FS.readBinFile","line":485,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L477-L482","name":"IO.FS.Handle.readToEnd.loop","line":477,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readToEnd.loop\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readToEnd</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L476-L483","name":"IO.FS.Handle.readToEnd","line":476,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L468-L473","name":"IO.FS.Handle.readBinToEnd.loop","line":468,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEnd.loop\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEnd</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L467-L474","name":"IO.FS.Handle.readBinToEnd","line":467,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L464-L465","name":"IO.FS.Handle.putStrLn","line":464,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L461-L462","name":"IO.FS.withFile","line":461,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L456-L456","name":"IO.currentDir","line":456,"kind":"opaque","docLink":"./Init/System/IO.html#IO.currentDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.currentDir\"><span class=\"name\">IO</span>.<span class=\"name\">currentDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L455-L455","name":"IO.appPath","line":455,"kind":"opaque","docLink":"./Init/System/IO.html#IO.appPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appPath\"><span class=\"name\">IO</span>.<span class=\"name\">appPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L454-L454","name":"IO.getEnv","line":454,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getEnv\"><span class=\"name\">IO</span>.<span class=\"name\">getEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(var : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L450-L450","name":"IO.FS.rename","line":450,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.rename","doc":"Moves a file or directory `old` to the new location `new`.\n\nThis function coincides with the [POSIX `rename` function](https://pubs.opengroup.org/onlinepubs/9699919799/functions/rename.html),\nsee there for more information.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.rename\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">rename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(old : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(new : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L442-L442","name":"IO.FS.createDir","line":442,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L441-L441","name":"IO.FS.removeDir","line":441,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDir","doc":"Remove given directory. Fails if not empty; see also `IO.FS.removeDirAll`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L439-L439","name":"IO.FS.removeFile","line":439,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L438-L438","name":"IO.FS.realPath","line":438,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.realPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.realPath\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">realPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L434-L434","name":"IO.FS.Handle.putStr","line":434,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L433-L433","name":"IO.FS.Handle.getLine","line":433,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.getLine","doc":"Read text up to (including) the next line break from the handle.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L426-L426","name":"IO.FS.Handle.write","line":426,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(buffer : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L425-L425","name":"IO.FS.Handle.read","line":425,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.read","doc":"Read up to the given number of bytes from the handle.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L419-L419","name":"IO.FS.Handle.truncate","line":419,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.truncate","doc":"Truncates the handle to the read/write cursor.\n\nDoes not automatically flush. Usually this is fine because the read/write\ncursor includes buffered writes. However, the combination of buffered writes,\nthen `rewind`, then `truncate`, then close may lead to a file with content.\nIf unsure, flush before truncating.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.truncate\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">truncate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L410-L410","name":"IO.FS.Handle.rewind","line":410,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.rewind","doc":"Rewinds the read/write cursor to the beginning of the handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.rewind\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">rewind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L408-L408","name":"IO.FS.Handle.flush","line":408,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L406-L406","name":"IO.FS.Handle.isTty","line":406,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.isTty","doc":"Returns true if a handle refers to a Windows console or Unix terminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.isTty\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">isTty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L403-L403","name":"IO.FS.Handle.unlock","line":403,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.unlock","doc":"Releases any previously acquired lock on the handle.\nWill succeed even if no lock has been acquired.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.unlock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">unlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L398-L398","name":"IO.FS.Handle.tryLock","line":398,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.tryLock","doc":"Tries to acquire an exclusive or shared lock on the handle.\nWill NOT block for the lock, but instead return `false`.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.tryLock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">tryLock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L390-L390","name":"IO.FS.Handle.lock","line":390,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.lock","doc":"Acquires an exclusive or shared lock on the handle.\nWill block to wait for the lock if necessary.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.lock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">lock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L381-L381","name":"IO.FS.Handle.mk","line":381,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L371-L375","name":"IO.iterate","line":371,"kind":"opaque","docLink":"./Init/System/IO.html#IO.iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.iterate\"><span class=\"name\">IO</span>.<span class=\"name\">iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L369-L369","name":"IO.setStderr","line":369,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStderr","doc":"Replaces the stderr stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStderr\"><span class=\"name\">IO</span>.<span class=\"name\">setStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L367-L367","name":"IO.setStdout","line":367,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdout","doc":"Replaces the stdout stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdout\"><span class=\"name\">IO</span>.<span class=\"name\">setStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L365-L365","name":"IO.setStdin","line":365,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdin","doc":"Replaces the stdin stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdin\"><span class=\"name\">IO</span>.<span class=\"name\">setStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L362-L362","name":"IO.getStderr","line":362,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStderr\"><span class=\"name\">IO</span>.<span class=\"name\">getStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L361-L361","name":"IO.getStdout","line":361,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdout\"><span class=\"name\">IO</span>.<span class=\"name\">getStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L360-L360","name":"IO.getStdin","line":360,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdin\"><span class=\"name\">IO</span>.<span class=\"name\">getStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L356-L356","name":"IO.FS.instInhabitedStream","line":356,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedStream","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedStream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedStream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L355-L355","name":"IO.FS.Stream.isTty","line":355,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.isTty","doc":"Returns true if a stream refers to a Windows console or Unix terminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.isTty\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">isTty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L353-L353","name":"IO.FS.Stream.putStr","line":353,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L352-L352","name":"IO.FS.Stream.getLine","line":352,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.getLine","doc":"Read text up to (including) the next line break from the stream.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L346-L346","name":"IO.FS.Stream.write","line":346,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L345-L345","name":"IO.FS.Stream.read","line":345,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.read","doc":"Read up to the given number of bytes from the stream.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L339-L339","name":"IO.FS.Stream.flush","line":339,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L338-L338","name":"IO.FS.Stream.mk","line":338,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(flush : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(read : <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getLine : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(putStr : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isTty : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L338-L356","name":"IO.FS.Stream","line":338,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream","doc":"A pure-Lean abstraction of POSIX streams. We use `Stream`s for the standard streams stdin/stdout/stderr so we can\ncapture output of `#eval` commands into memory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L333-L333","name":"IO.FS.Handle","line":333,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L323-L331","name":"IO.FS.Mode.append","line":323,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.append","doc":"File opened for writing.\nOn open, create a new file if it does not exist.\nThe stream is positioned at the end of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_APPEND`\n* `fdopen` mode: `a`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.append\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L314-L322","name":"IO.FS.Mode.readWrite","line":314,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.readWrite","doc":"File opened for reading and writing.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDWR`\n* `fdopen` mode: `r+`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.readWrite\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">readWrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L305-L313","name":"IO.FS.Mode.writeNew","line":305,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.writeNew","doc":"New file opened for writing.\nOn open, create a new file with the stream positioned at the start.\nErrors if the file already exists.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC | O_EXCL`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.writeNew\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">writeNew</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L296-L304","name":"IO.FS.Mode.write","line":296,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.write","doc":"File opened for writing.\nOn open, truncate an existing file to zero length or create a new file.\nThe stream is positioned at the beginning of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L287-L295","name":"IO.FS.Mode.read","line":287,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.read","doc":"File opened for reading.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDONLY`\n* `fdopen` mode: `r`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L286-L331","name":"IO.FS.Mode","line":286,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.Mode","doc":"The mode of a file handle (i.e., a set of `open` flags and an `fdopen` mode).\n\nAll modes do not translate line endings (i.e., `O_BINARY` on Windows) and\nare not inherited across process creation (i.e., `O_NOINHERIT` on Windows,\n`O_CLOEXEC` elsewhere).\n\n**References:**\n* Windows:\n  [`_open`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/open-wopen?view=msvc-170),\n  [`_fdopen`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fdopen-wfdopen?view=msvc-170)\n* Linux:\n  [`open`](https://linux.die.net/man/2/open),\n  [`fdopen`](https://linux.die.net/man/3/fdopen)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L269-L269","name":"IO.addHeartbeats","line":269,"kind":"opaque","docLink":"./Init/System/IO.html#IO.addHeartbeats","doc":"Adjusts the heartbeat counter of the current thread by the given amount. This can be useful to give\nallocation-avoiding code additional \"weight\" and is also used to adjust the counter after resuming\nfrom a snapshot.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.addHeartbeats\"><span class=\"name\">IO</span>.<span class=\"name\">addHeartbeats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(count : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L262-L262","name":"IO.getNumHeartbeats","line":262,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getNumHeartbeats","doc":"Helper method for implementing \"deterministic\" timeouts. It is the number of \"small\" memory allocations performed by the current execution thread. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getNumHeartbeats\"><span class=\"name\">IO</span>.<span class=\"name\">getNumHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L257-L259","name":"IO.waitAny","line":257,"kind":"opaque","docLink":"./Init/System/IO.html#IO.waitAny","doc":"Wait until any of the tasks in the given list has finished, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.waitAny\"><span class=\"name\">IO</span>.<span class=\"name\">waitAny</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">tasks</span>.length</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/System/IO.html#_auto._@.Init.System.IO._hyg.1716\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L253-L254","name":"IO.wait","line":253,"kind":"opaque","docLink":"./Init/System/IO.html#IO.wait","doc":"Wait for the task to finish, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.wait\"><span class=\"name\">IO</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L249-L250","name":"IO.hasFinished","line":249,"kind":"def","docLink":"./Init/System/IO.html#IO.hasFinished","doc":"Check if the task has finished execution, at which point calling `Task.get` will return immediately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.hasFinished\"><span class=\"name\">IO</span>.<span class=\"name\">hasFinished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(task : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L246-L246","name":"IO.getTaskState","line":246,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getTaskState","doc":"Returns current state of the `Task` in the Lean runtime's task manager. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">getTaskState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L243-L243","name":"IO.instToStringTaskState","line":243,"kind":"instance","docLink":"./Init/System/IO.html#IO.instToStringTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instToStringTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instToStringTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L238-L241","name":"IO.TaskState.toString","line":238,"kind":"def","docLink":"./Init/System/IO.html#IO.TaskState.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.toString\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L236-L236","name":"IO.instMaxTaskState","line":236,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMaxTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMaxTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instMaxTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Max\">Max</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L235-L235","name":"IO.instMinTaskState","line":235,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMinTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMinTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instMinTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L234-L234","name":"IO.instLETaskState","line":234,"kind":"instance","docLink":"./Init/System/IO.html#IO.instLETaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instLETaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instLETaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L233-L233","name":"IO.instLTTaskState","line":233,"kind":"instance","docLink":"./Init/System/IO.html#IO.instLTTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instLTTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instLTTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L231-L231","name":"IO.instOrdTaskState","line":231,"kind":"instance","docLink":"./Init/System/IO.html#IO.instOrdTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instOrdTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instOrdTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L231-L231","name":"IO.instDecidableEqTaskState","line":231,"kind":"instance","docLink":"./Init/System/IO.html#IO.instDecidableEqTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instDecidableEqTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instDecidableEqTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L231-L231","name":"IO.instReprTaskState","line":231,"kind":"instance","docLink":"./Init/System/IO.html#IO.instReprTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instReprTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instReprTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L231-L231","name":"IO.instInhabitedTaskState","line":231,"kind":"instance","docLink":"./Init/System/IO.html#IO.instInhabitedTaskState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instInhabitedTaskState\"><span class=\"name\">IO</span>.<span class=\"name\">instInhabitedTaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L226-L230","name":"IO.TaskState.finished","line":226,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.finished","doc":"The `Task` has finished running and its result is available.\nCalling `Task.get` or `IO.wait` on the task will not block.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.finished\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">finished</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L221-L225","name":"IO.TaskState.running","line":221,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.running","doc":"The `Task` is actively running on a thread or,\nin the case of a `Promise`, waiting for a call to `IO.Promise.resolve`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.running\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">running</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L215-L220","name":"IO.TaskState.waiting","line":215,"kind":"ctor","docLink":"./Init/System/IO.html#IO.TaskState.waiting","doc":"The `Task` is waiting to be run.\nIt can be waiting for dependencies to complete or\nsitting in the task manager queue waiting for a thread to run on.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState.waiting\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span>.<span class=\"name\">waiting</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.TaskState\">IO.TaskState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L214-L231","name":"IO.TaskState","line":214,"kind":"inductive","docLink":"./Init/System/IO.html#IO.TaskState","doc":"The current state of a `Task` in the Lean runtime's task manager. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.TaskState\"><span class=\"name\">IO</span>.<span class=\"name\">TaskState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L211-L211","name":"IO.cancel","line":211,"kind":"opaque","docLink":"./Init/System/IO.html#IO.cancel","doc":"Request cooperative cancellation of the task. The task must explicitly call `IO.checkCanceled` to react to the cancellation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.cancel\"><span class=\"name\">IO</span>.<span class=\"name\">cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L208-L208","name":"IO.checkCanceled","line":208,"kind":"opaque","docLink":"./Init/System/IO.html#IO.checkCanceled","doc":"Check if the task's cancellation flag has been set by calling `IO.cancel` or dropping the last reference to the task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.checkCanceled\"><span class=\"name\">IO</span>.<span class=\"name\">checkCanceled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L203-L205","name":"IO.mapTasks","line":203,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTasks","doc":"`IO` specialization of `EIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTasks\"><span class=\"name\">IO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L198-L200","name":"IO.bindTask","line":198,"kind":"def","docLink":"./Init/System/IO.html#IO.bindTask","doc":"`IO` specialization of `EIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.bindTask\"><span class=\"name\">IO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L193-L195","name":"IO.mapTask","line":193,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTask","doc":"`IO` specialization of `EIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTask\"><span class=\"name\">IO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L189-L190","name":"IO.asTask","line":189,"kind":"def","docLink":"./Init/System/IO.html#IO.asTask","doc":"`IO` specialization of `EIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.asTask\"><span class=\"name\">IO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L184-L186","name":"IO.sleep","line":184,"kind":"def","docLink":"./Init/System/IO.html#IO.sleep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.sleep\"><span class=\"name\">IO</span>.<span class=\"name\">sleep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L182-L182","name":"IO.getRandomBytes","line":182,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getRandomBytes","doc":"Read bytes from a system entropy source. Not guaranteed to be cryptographically secure.\nIf `nBytes = 0`, return immediately with an empty buffer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getRandomBytes\"><span class=\"name\">IO</span>.<span class=\"name\">getRandomBytes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nBytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L178-L178","name":"IO.monoNanosNow","line":178,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoNanosNow","doc":"Monotonically increasing time since an unspecified past point in nanoseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoNanosNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoNanosNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L175-L175","name":"IO.monoMsNow","line":175,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoMsNow","doc":"Monotonically increasing time since an unspecified past point in milliseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoMsNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoMsNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L171-L172","name":"IO.lazyPure","line":171,"kind":"def","docLink":"./Init/System/IO.html#IO.lazyPure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.lazyPure\"><span class=\"name\">IO</span>.<span class=\"name\">lazyPure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L166-L169","name":"IO.ofExcept","line":166,"kind":"def","docLink":"./Init/System/IO.html#IO.ofExcept","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.ofExcept\"><span class=\"name\">IO</span>.<span class=\"name\">ofExcept</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L158-L160","name":"EIO.mapTasks","line":158,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTasks","doc":"`EIO` specialization of `BaseIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTasks\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L152-L155","name":"EIO.bindTask","line":152,"kind":"def","docLink":"./Init/System/IO.html#EIO.bindTask","doc":"`EIO` specialization of `BaseIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.bindTask\"><span class=\"name\">EIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L147-L149","name":"EIO.mapTask","line":147,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTask","doc":"`EIO` specialization of `BaseIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTask\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L143-L144","name":"EIO.asTask","line":143,"kind":"def","docLink":"./Init/System/IO.html#EIO.asTask","doc":"`EIO` specialization of `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.asTask\"><span class=\"name\">EIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L133-L136","name":"BaseIO.mapTasks.go","line":133,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks.go\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L129-L136","name":"BaseIO.mapTasks","line":129,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L125-L127","name":"BaseIO.bindTask","line":125,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.bindTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.bindTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L119-L121","name":"BaseIO.mapTask","line":119,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.mapTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L114-L115","name":"BaseIO.asTask","line":114,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.asTask","doc":"Run `act` in a separate `Task`.\nThis is similar to Haskell's [`unsafeInterleaveIO`](http://hackage.haskell.org/package/base-4.14.0.0/docs/System-IO-Unsafe.html#v:unsafeInterleaveIO),\nexcept that the `Task` is started eagerly as usual. Thus pure accesses to the `Task` do not influence the impure `act`\ncomputation.\nUnlike with pure tasks created by `Task.spawn`, tasks created by this function will be run even if the last reference\nto the task is dropped. The `act` should manually check for cancellation via `IO.checkCanceled` if it wants to react\nto that. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.asTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L101-L101","name":"IO.initializing","line":101,"kind":"opaque","docLink":"./Init/System/IO.html#IO.initializing","doc":"Programs can execute IO actions during initialization that occurs before\nthe `main` function is executed. The attribute `[init <action>]` specifies\nwhich IO action is executed to set the value of an opaque constant.\n\nThe action `initializing` returns `true` iff it is invoked during initialization. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.initializing\"><span class=\"name\">IO</span>.<span class=\"name\">initializing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L94-L94","name":"allocprof","line":94,"kind":"opaque","docLink":"./Init/System/IO.html#allocprof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#allocprof\"><span class=\"name\">allocprof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L93-L93","name":"timeit","line":93,"kind":"opaque","docLink":"./Init/System/IO.html#timeit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#timeit\"><span class=\"name\">timeit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L90-L91","name":"unsafeIO","line":90,"kind":"def","docLink":"./Init/System/IO.html#unsafeIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeIO\"><span class=\"name\">unsafeIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L87-L88","name":"unsafeEIO","line":87,"kind":"def","docLink":"./Init/System/IO.html#unsafeEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeEIO\"><span class=\"name\">unsafeEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L83-L85","name":"unsafeBaseIO","line":83,"kind":"def","docLink":"./Init/System/IO.html#unsafeBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeBaseIO\"><span class=\"name\">unsafeBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L76-L77","name":"IO.toEIO","line":76,"kind":"def","docLink":"./Init/System/IO.html#IO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.toEIO\"><span class=\"name\">IO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> → <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L73-L74","name":"EIO.toIO'","line":73,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO'\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L70-L71","name":"EIO.toIO","line":70,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ε</span> → <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L67-L68","name":"BaseIO.toIO","line":67,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L65-L65","name":"IO","line":65,"kind":"def","docLink":"./Init/System/IO.html#IO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO\"><span class=\"name\">IO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L59-L62","name":"EIO.catchExceptions","line":59,"kind":"def","docLink":"./Init/System/IO.html#EIO.catchExceptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.catchExceptions\"><span class=\"name\">EIO</span>.<span class=\"name\">catchExceptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L53-L56","name":"EIO.toBaseIO","line":53,"kind":"def","docLink":"./Init/System/IO.html#EIO.toBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toBaseIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L50-L50","name":"instMonadLiftBaseIOEIO","line":50,"kind":"instance","docLink":"./Init/System/IO.html#instMonadLiftBaseIOEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadLiftBaseIOEIO\"><span class=\"name\">instMonadLiftBaseIOEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L46-L48","name":"BaseIO.toEIO","line":46,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toEIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L43-L43","name":"instMonadFinallyBaseIO","line":43,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyBaseIO\"><span class=\"name\">instMonadFinallyBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L42-L42","name":"instMonadBaseIO","line":42,"kind":"instance","docLink":"./Init/System/IO.html#instMonadBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadBaseIO\"><span class=\"name\">instMonadBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L40-L40","name":"BaseIO","line":40,"kind":"def","docLink":"./Init/System/IO.html#BaseIO","doc":"An `EIO` monad that cannot throw exceptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO\"><span class=\"name\">BaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L37-L37","name":"instInhabitedEIO","line":37,"kind":"instance","docLink":"./Init/System/IO.html#instInhabitedEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instInhabitedEIO\"><span class=\"name\">instInhabitedEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L36-L36","name":"instOrElseEIO","line":36,"kind":"instance","docLink":"./Init/System/IO.html#instOrElseEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instOrElseEIO\"><span class=\"name\">instOrElseEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L35-L35","name":"instMonadExceptOfEIO","line":35,"kind":"instance","docLink":"./Init/System/IO.html#instMonadExceptOfEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadExceptOfEIO\"><span class=\"name\">instMonadExceptOfEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L34-L34","name":"instMonadFinallyEIO","line":34,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyEIO\"><span class=\"name\">instMonadFinallyEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L33-L33","name":"instMonadEIO","line":33,"kind":"instance","docLink":"./Init/System/IO.html#instMonadEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadEIO\"><span class=\"name\">instMonadEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L31-L31","name":"EIO","line":31,"kind":"def","docLink":"./Init/System/IO.html#EIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO\"><span class=\"name\">EIO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Init/System/IO.lean#L22-L22","name":"IO.RealWorld","line":22,"kind":"def","docLink":"./Init/System/IO.html#IO.RealWorld","doc":"Like <https://hackage.haskell.org/package/ghc-Prim-0.5.2.0/docs/GHC-Prim.html#t:RealWorld>.\nMakes sure we never reorder `IO` operations.\n\nTODO: mark opaque "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.RealWorld\"><span class=\"name\">IO</span>.<span class=\"name\">RealWorld</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}