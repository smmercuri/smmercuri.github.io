{"name":"Init.System.IO","instances":[{"typeNames":["EIO"],"name":"instMonadEIO","className":"Monad"},{"typeNames":["EIO"],"name":"instMonadFinallyEIO","className":"MonadFinally"},{"typeNames":["EIO"],"name":"instMonadExceptOfEIO","className":"MonadExceptOf"},{"typeNames":["EIO"],"name":"instOrElseEIO","className":"OrElse"},{"typeNames":["EIO"],"name":"instInhabitedEIO","className":"Inhabited"},{"typeNames":["BaseIO"],"name":"instMonadBaseIO","className":"Monad"},{"typeNames":["BaseIO"],"name":"instMonadFinallyBaseIO","className":"MonadFinally"},{"typeNames":["BaseIO","EIO"],"name":"instMonadLiftBaseIOEIO","className":"MonadLift"},{"typeNames":["IO.FS.Stream"],"name":"IO.FS.instInhabitedStream","className":"Inhabited"},{"typeNames":["IO.FS.DirEntry"],"name":"IO.FS.instReprDirEntry","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instReprFileType","className":"Repr"},{"typeNames":["IO.FS.FileType"],"name":"IO.FS.instBEqFileType","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instReprSystemTime","className":"Repr"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instBEqSystemTime","className":"BEq"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instOrdSystemTime","className":"Ord"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instInhabitedSystemTime","className":"Inhabited"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLTSystemTime","className":"LT"},{"typeNames":["IO.FS.SystemTime"],"name":"IO.FS.instLESystemTime","className":"LE"},{"typeNames":["IO.FS.Metadata"],"name":"IO.FS.instReprMetadata","className":"Repr"},{"typeNames":["ST","BaseIO"],"name":"IO.instMonadLiftSTRealWorldBaseIO","className":"MonadLift"},{"typeNames":[],"name":"Lean.instEval","className":"Lean.Eval"},{"typeNames":[],"name":"Lean.instEval_1","className":"Lean.Eval"},{"typeNames":["Unit"],"name":"Lean.instEvalUnit","className":"Lean.Eval"},{"typeNames":["IO"],"name":"Lean.instEvalIO","className":"Lean.Eval"},{"typeNames":["BaseIO"],"name":"Lean.instEvalBaseIO","className":"Lean.Eval"}],"imports":["Init.Control.EState","Init.Control.Reader","Init.Data.String","Init.Data.ByteArray","Init.System.IOError","Init.System.FilePath","Init.System.ST","Init.Data.ToString.Macro","Init.Data.Ord"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L830-L830","name":"termPrintln!__","line":830,"kind":"def","docLink":"./Init/System/IO.html#termPrintln!__","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#termPrintln!__\"><span class=\"name\">termPrintln!__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L825-L826","name":"Lean.runEval","line":825,"kind":"def","docLink":"./Init/System/IO.html#Lean.runEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.runEval\"><span class=\"name\">Lean</span>.<span class=\"name\">runEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L820-L823","name":"Lean.instEvalBaseIO","line":820,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalBaseIO\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L815-L818","name":"Lean.instEvalIO","line":815,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalIO\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L812-L813","name":"Lean.instEvalUnit","line":812,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEvalUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEvalUnit\"><span class=\"name\">Lean</span>.<span class=\"name\">instEvalUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L809-L810","name":"Lean.instEval_1","line":809,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEval_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEval_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instEval_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L806-L807","name":"Lean.instEval","line":806,"kind":"instance","docLink":"./Init/System/IO.html#Lean.instEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.instEval\"><span class=\"name\">Lean</span>.<span class=\"name\">instEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L804-L804","name":"Lean.Eval.eval","line":804,"kind":"def","docLink":"./Init/System/IO.html#Lean.Eval.eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval.eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span>.<span class=\"name\">eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L800-L800","name":"Lean.Eval.mk","line":800,"kind":"ctor","docLink":"./Init/System/IO.html#Lean.Eval.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(eval : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#Lean.Eval\">Lean.Eval</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L800-L804","name":"Lean.Eval","line":800,"kind":"class","docLink":"./Init/System/IO.html#Lean.Eval","doc":"Typeclass used for presenting the output of an `#eval` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#Lean.Eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L780-L790","name":"IO.FS.withIsolatedStreams","line":780,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withIsolatedStreams","doc":"Run action with `stdin` emptied and `stdout+stderr` captured into a `String`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withIsolatedStreams\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withIsolatedStreams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isolateStderr : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L759-L776","name":"IO.FS.Stream.ofBuffer","line":759,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofBuffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofBuffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofBuffer</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L757-L757","name":"IO.FS.Stream.Buffer.pos","line":757,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.pos\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L756-L756","name":"IO.FS.Stream.Buffer.data","line":756,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.data","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.data\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L755-L755","name":"IO.FS.Stream.Buffer.mk","line":755,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\">IO.FS.Stream.Buffer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L755-L757","name":"IO.FS.Stream.Buffer","line":755,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream.Buffer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.Buffer\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">Buffer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L747-L753","name":"IO.FS.Stream.ofHandle","line":747,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.ofHandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.ofHandle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">ofHandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L740-L741","name":"IO.mkRef","line":740,"kind":"def","docLink":"./Init/System/IO.html#IO.mkRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mkRef\"><span class=\"name\">IO</span>.<span class=\"name\">mkRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L738-L738","name":"IO.instMonadLiftSTRealWorldBaseIO","line":738,"kind":"instance","docLink":"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.instMonadLiftSTRealWorldBaseIO\"><span class=\"name\">IO</span>.<span class=\"name\">instMonadLiftSTRealWorldBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a></span>)</span> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L736-L736","name":"IO.Ref","line":736,"kind":"def","docLink":"./Init/System/IO.html#IO.Ref","doc":"References "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Ref\"><span class=\"name\">IO</span>.<span class=\"name\">Ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L732-L733","name":"IO.setAccessRights","line":732,"kind":"def","docLink":"./Init/System/IO.html#IO.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L730-L730","name":"IO.Prim.setAccessRights","line":730,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Prim.setAccessRights","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Prim.setAccessRights\"><span class=\"name\">IO</span>.<span class=\"name\">Prim</span>.<span class=\"name\">setAccessRights</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(filename : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L724-L728","name":"IO.FileRight.flags","line":724,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L722-L722","name":"IO.FileRight.other","line":722,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.other\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L721-L721","name":"IO.FileRight.group","line":721,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.group","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.group\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L720-L720","name":"IO.FileRight.user","line":720,"kind":"def","docLink":"./Init/System/IO.html#IO.FileRight.user","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.user\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">user</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L719-L719","name":"IO.FileRight.mk","line":719,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FileRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(user : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(group : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(other : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FileRight\">IO.FileRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L719-L722","name":"IO.FileRight","line":719,"kind":"structure","docLink":"./Init/System/IO.html#IO.FileRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FileRight\"><span class=\"name\">IO</span>.<span class=\"name\">FileRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L713-L717","name":"IO.AccessRight.flags","line":713,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.flags","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.flags\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">flags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L711-L711","name":"IO.AccessRight.execution","line":711,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.execution","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.execution\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">execution</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L710-L710","name":"IO.AccessRight.write","line":710,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.write\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L709-L709","name":"IO.AccessRight.read","line":709,"kind":"def","docLink":"./Init/System/IO.html#IO.AccessRight.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.read\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L708-L708","name":"IO.AccessRight.mk","line":708,"kind":"ctor","docLink":"./Init/System/IO.html#IO.AccessRight.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight.mk\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(read : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(execution : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.AccessRight\">IO.AccessRight</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L708-L711","name":"IO.AccessRight","line":708,"kind":"structure","docLink":"./Init/System/IO.html#IO.AccessRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.AccessRight\"><span class=\"name\">IO</span>.<span class=\"name\">AccessRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L704-L704","name":"IO.Process.exit","line":704,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.exit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.exit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">exit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L698-L702","name":"IO.Process.run","line":698,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.run","doc":"Run process to completion and return stdout on success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.run\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L689-L695","name":"IO.Process.output","line":689,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.output","doc":"Run process to completion and capture output.\nThe process does not inherit the standard input of the caller.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">output</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L683-L683","name":"IO.Process.Output.stderr","line":683,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L682-L682","name":"IO.Process.Output.stdout","line":682,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L681-L681","name":"IO.Process.Output.exitCode","line":681,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Output.exitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.exitCode\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">exitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L680-L680","name":"IO.Process.Output.mk","line":680,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Output.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exitCode : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Output\">IO.Process.Output</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L680-L683","name":"IO.Process.Output","line":680,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Output","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Output\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Output</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L677-L678","name":"IO.Process.Child.takeStdin","line":677,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.takeStdin","doc":"Extract the `stdin` field from a `Child` object, allowing them to be freed independently.\nThis operation is necessary for closing the child process' stdin while still holding on to a process handle,\ne.g. for `Child.wait`. A file handle is closed when all references to it are dropped, which without this\noperation includes the `Child` object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.takeStdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">takeStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> →\n  <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a>       <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">{ <span class=\"fn\">stdin</span> := <a href=\"./Init/System/IO.html#IO.Process.Stdio.null\">IO.Process.Stdio.null</a>, <span class=\"fn\">stdout</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span>, <span class=\"fn\">stderr</span> := <span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span> }</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L669-L669","name":"IO.Process.Child.kill","line":669,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.kill","doc":"Terminates the child process using the SIGTERM signal or a platform analogue.\nIf the process was started using `SpawnArgs.setsid`, terminates the entire process group instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.kill\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">kill</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L665-L665","name":"IO.Process.Child.wait","line":665,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.Child.wait","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.wait\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L663-L663","name":"IO.Process.spawn","line":663,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.spawn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.spawn\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">spawn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\"><span class=\"fn\">args</span>.toStdioConfig</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L661-L661","name":"IO.Process.Child.stderr","line":661,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L660-L660","name":"IO.Process.Child.stdout","line":660,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L659-L659","name":"IO.Process.Child.stdin","line":659,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Child.stdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">stdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L658-L658","name":"IO.Process.Child.mk","line":658,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Child.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stdin</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stdout</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\">IO.Process.Stdio.toHandleType</a> <span class=\"fn\"><span class=\"fn\">cfg</span>.stderr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Child\">IO.Process.Child</a> <span class=\"fn\">cfg</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L658-L661","name":"IO.Process.Child","line":658,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.Child","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Child\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Child</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cfg : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L655-L655","name":"IO.Process.SpawnArgs.setsid","line":655,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.setsid","doc":"Start process in new session and process group using `setsid`. Currently a no-op on non-POSIX platforms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.setsid\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">setsid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L653-L653","name":"IO.Process.SpawnArgs.env","line":653,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.env","doc":"Add or remove environment variables for the process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.env\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L651-L651","name":"IO.Process.SpawnArgs.cwd","line":651,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cwd","doc":"Working directory for the process. Inherit from current process if `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cwd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cwd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L649-L649","name":"IO.Process.SpawnArgs.args","line":649,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.args","doc":"Arguments for the process "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.args\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L647-L647","name":"IO.Process.SpawnArgs.cmd","line":647,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.cmd","doc":"Command name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.cmd\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L645-L645","name":"IO.Process.SpawnArgs.mk","line":645,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toStdioConfig : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cwd : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(setsid : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.SpawnArgs\">IO.Process.SpawnArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L645-L655","name":"IO.Process.SpawnArgs","line":645,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.SpawnArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.SpawnArgs\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">SpawnArgs</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L643-L643","name":"IO.Process.StdioConfig.stderr","line":643,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stderr","doc":"Configuration for the process' stderr handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stderr\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stderr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L641-L641","name":"IO.Process.StdioConfig.stdout","line":641,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdout","doc":"Configuration for the process' stdout handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdout\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L639-L639","name":"IO.Process.StdioConfig.stdin","line":639,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.stdin","doc":"Configuration for the process' stdin handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.stdin\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">stdin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L637-L637","name":"IO.Process.StdioConfig.mk","line":637,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.StdioConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig.mk\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stdin : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stdout : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stderr : <a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.StdioConfig\">IO.Process.StdioConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L637-L643","name":"IO.Process.StdioConfig","line":637,"kind":"structure","docLink":"./Init/System/IO.html#IO.Process.StdioConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.StdioConfig\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">StdioConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L632-L635","name":"IO.Process.Stdio.toHandleType","line":632,"kind":"def","docLink":"./Init/System/IO.html#IO.Process.Stdio.toHandleType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.toHandleType\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">toHandleType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L630-L630","name":"IO.Process.Stdio.null","line":630,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.null\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">null</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L629-L629","name":"IO.Process.Stdio.inherit","line":629,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.inherit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.inherit\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">inherit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L628-L628","name":"IO.Process.Stdio.piped","line":628,"kind":"ctor","docLink":"./Init/System/IO.html#IO.Process.Stdio.piped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio.piped\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span>.<span class=\"name\">piped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.Process.Stdio\">IO.Process.Stdio</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L627-L630","name":"IO.Process.Stdio","line":627,"kind":"inductive","docLink":"./Init/System/IO.html#IO.Process.Stdio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.Stdio\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">Stdio</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L625-L625","name":"IO.Process.getPID","line":625,"kind":"opaque","docLink":"./Init/System/IO.html#IO.Process.getPID","doc":"Returns the process ID of the current process. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.Process.getPID\"><span class=\"name\">IO</span>.<span class=\"name\">Process</span>.<span class=\"name\">getPID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L614-L620","name":"IO.FS.removeDirAll","line":614,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDirAll","doc":"Fully remove given directory by deleting all contained files and directories in an unspecified order.\nFails if any contained entry cannot be deleted or was newly created during execution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L597-L609","name":"IO.FS.createDirAll","line":597,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDirAll","doc":"Create given path and all missing parents as directories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDirAll\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDirAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L590-L594","name":"IO.appDir","line":590,"kind":"def","docLink":"./Init/System/IO.html#IO.appDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appDir\"><span class=\"name\">IO</span>.<span class=\"name\">appDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L579-L580","name":"IO.eprintln","line":579,"kind":"def","docLink":"./Init/System/IO.html#IO.eprintln","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprintln\"><span class=\"name\">IO</span>.<span class=\"name\">eprintln</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L575-L577","name":"IO.eprint","line":575,"kind":"def","docLink":"./Init/System/IO.html#IO.eprint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.eprint\"><span class=\"name\">IO</span>.<span class=\"name\">eprint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L572-L573","name":"IO.println","line":572,"kind":"def","docLink":"./Init/System/IO.html#IO.println","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.println\"><span class=\"name\">IO</span>.<span class=\"name\">println</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L568-L570","name":"IO.print","line":568,"kind":"def","docLink":"./Init/System/IO.html#IO.print","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.print\"><span class=\"name\">IO</span>.<span class=\"name\">print</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L564-L566","name":"IO.withStderr","line":564,"kind":"def","docLink":"./Init/System/IO.html#IO.withStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStderr\"><span class=\"name\">IO</span>.<span class=\"name\">withStderr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L557-L562","name":"IO.withStdout","line":557,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdout\"><span class=\"name\">IO</span>.<span class=\"name\">withStdout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L553-L555","name":"IO.withStdin","line":553,"kind":"def","docLink":"./Init/System/IO.html#IO.withStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.withStdin\"><span class=\"name\">IO</span>.<span class=\"name\">withStdin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L531-L547","name":"System.FilePath.walkDir.go","line":531,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.walkDir.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir.go\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L528-L547","name":"System.FilePath.walkDir","line":528,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.walkDir","doc":"Return all filesystem entries of a preorder traversal of all directories satisfying `enter`, starting at `p`.\nSymbolic links are visited as well by default. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.walkDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">walkDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(enter : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L522-L523","name":"System.FilePath.pathExists","line":522,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.pathExists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.pathExists\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">pathExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L517-L520","name":"System.FilePath.isDir","line":517,"kind":"def","docLink":"./Init/System/IO.html#System.FilePath.isDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.isDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">isDir</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L515-L515","name":"System.FilePath.metadata","line":515,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.metadata\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L512-L512","name":"System.FilePath.readDir","line":512,"kind":"opaque","docLink":"./Init/System/IO.html#System.FilePath.readDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#System.FilePath.readDir\"><span class=\"name\">System</span>.<span class=\"name\">FilePath</span>.<span class=\"name\">readDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L503-L503","name":"IO.FS.instReprMetadata","line":503,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprMetadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprMetadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprMetadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L502-L502","name":"IO.FS.Metadata.type","line":502,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.type\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L501-L501","name":"IO.FS.Metadata.byteSize","line":501,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.byteSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.byteSize\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">byteSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L500-L500","name":"IO.FS.Metadata.modified","line":500,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.modified\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L499-L499","name":"IO.FS.Metadata.accessed","line":499,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Metadata.accessed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.accessed\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">accessed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L497-L497","name":"IO.FS.Metadata.mk","line":497,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Metadata.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(accessed : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modified : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(byteSize : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Metadata\">IO.FS.Metadata</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L497-L503","name":"IO.FS.Metadata","line":497,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Metadata","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Metadata\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Metadata</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L495-L495","name":"IO.FS.instLESystemTime","line":495,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLESystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLESystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLESystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L494-L494","name":"IO.FS.instLTSystemTime","line":494,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instLTSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instLTSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instLTSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L492-L492","name":"IO.FS.instInhabitedSystemTime","line":492,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L492-L492","name":"IO.FS.instOrdSystemTime","line":492,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instOrdSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instOrdSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instOrdSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L492-L492","name":"IO.FS.instBEqSystemTime","line":492,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L492-L492","name":"IO.FS.instReprSystemTime","line":492,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprSystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprSystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprSystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L491-L491","name":"IO.FS.SystemTime.nsec","line":491,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.nsec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.nsec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">nsec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L490-L490","name":"IO.FS.SystemTime.sec","line":490,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.SystemTime.sec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.sec\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">sec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L489-L489","name":"IO.FS.SystemTime.mk","line":489,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.SystemTime.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sec : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nsec : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.SystemTime\">IO.FS.SystemTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L489-L492","name":"IO.FS.SystemTime","line":489,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.SystemTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.SystemTime\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">SystemTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L487-L487","name":"IO.FS.instBEqFileType","line":487,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instBEqFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instBEqFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instBEqFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L487-L487","name":"IO.FS.instReprFileType","line":487,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprFileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprFileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprFileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L486-L486","name":"IO.FS.FileType.other","line":486,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.other\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L485-L485","name":"IO.FS.FileType.symlink","line":485,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.symlink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.symlink\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">symlink</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L484-L484","name":"IO.FS.FileType.file","line":484,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.file","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.file\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">file</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L483-L483","name":"IO.FS.FileType.dir","line":483,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.FileType.dir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType.dir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span>.<span class=\"name\">dir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.FileType\">IO.FS.FileType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L482-L487","name":"IO.FS.FileType","line":482,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.FileType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.FileType\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">FileType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L479-L480","name":"IO.FS.DirEntry.path","line":479,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.path\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(entry : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L477-L477","name":"IO.FS.instReprDirEntry","line":477,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instReprDirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instReprDirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instReprDirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L476-L476","name":"IO.FS.DirEntry.fileName","line":476,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.fileName\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L475-L475","name":"IO.FS.DirEntry.root","line":475,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.DirEntry.root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.root\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L474-L474","name":"IO.FS.DirEntry.mk","line":474,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.DirEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(root : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.DirEntry\">IO.FS.DirEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L474-L477","name":"IO.FS.DirEntry","line":474,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.DirEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.DirEntry\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">DirEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L471-L472","name":"IO.FS.Stream.putStrLn","line":471,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(strm : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L467-L469","name":"IO.FS.writeFile","line":467,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L463-L465","name":"IO.FS.writeBinFile","line":463,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.writeBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.writeBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">writeBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(content : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L451-L460","name":"IO.FS.lines.read","line":451,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.lines.read","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lines : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L449-L461","name":"IO.FS.lines","line":449,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.lines","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.lines\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">lines</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L445-L447","name":"IO.FS.readFile","line":445,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L441-L443","name":"IO.FS.readBinFile","line":441,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.readBinFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.readBinFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">readBinFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L433-L438","name":"IO.FS.Handle.readToEnd.loop","line":433,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readToEnd.loop\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readToEnd</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L432-L439","name":"IO.FS.Handle.readToEnd","line":432,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L424-L429","name":"IO.FS.Handle.readBinToEnd.loop","line":424,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEnd.loop\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEnd</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L423-L430","name":"IO.FS.Handle.readBinToEnd","line":423,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.readBinToEnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.readBinToEnd\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">readBinToEnd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L420-L421","name":"IO.FS.Handle.putStrLn","line":420,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Handle.putStrLn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStrLn\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStrLn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L417-L418","name":"IO.FS.withFile","line":417,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.withFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.withFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">withFile</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L412-L412","name":"IO.currentDir","line":412,"kind":"opaque","docLink":"./Init/System/IO.html#IO.currentDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.currentDir\"><span class=\"name\">IO</span>.<span class=\"name\">currentDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L411-L411","name":"IO.appPath","line":411,"kind":"opaque","docLink":"./Init/System/IO.html#IO.appPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.appPath\"><span class=\"name\">IO</span>.<span class=\"name\">appPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L410-L410","name":"IO.getEnv","line":410,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getEnv\"><span class=\"name\">IO</span>.<span class=\"name\">getEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(var : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L406-L406","name":"IO.FS.rename","line":406,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.rename","doc":"Moves a file or directory `old` to the new location `new`.\n\nThis function coincides with the [POSIX `rename` function](https://pubs.opengroup.org/onlinepubs/9699919799/functions/rename.html),\nsee there for more information.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.rename\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">rename</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(old : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(new : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L398-L398","name":"IO.FS.createDir","line":398,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.createDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.createDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">createDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L397-L397","name":"IO.FS.removeDir","line":397,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeDir","doc":"Remove given directory. Fails if not empty; see also `IO.FS.removeDirAll`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeDir\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L395-L395","name":"IO.FS.removeFile","line":395,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.removeFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.removeFile\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">removeFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L394-L394","name":"IO.FS.realPath","line":394,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.realPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.realPath\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">realPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L390-L390","name":"IO.FS.Handle.putStr","line":390,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L389-L389","name":"IO.FS.Handle.getLine","line":389,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.getLine","doc":"Read text up to (including) the next line break from the handle.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L382-L382","name":"IO.FS.Handle.write","line":382,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(buffer : <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L381-L381","name":"IO.FS.Handle.read","line":381,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.read","doc":"Read up to the given number of bytes from the handle.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a handle, so further reads may block and return more data.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L375-L375","name":"IO.FS.Handle.truncate","line":375,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.truncate","doc":"Truncates the handle to the read/write cursor.\n\nDoes not automatically flush. Usually this is fine because the read/write\ncursor includes buffered writes. However, the combination of buffered writes,\nthen `rewind`, then `truncate`, then close may lead to a file with content.\nIf unsure, flush before truncating.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.truncate\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">truncate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L366-L366","name":"IO.FS.Handle.rewind","line":366,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.rewind","doc":"Rewinds the read/write cursor to the beginning of the handle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.rewind\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">rewind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L364-L364","name":"IO.FS.Handle.flush","line":364,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L362-L362","name":"IO.FS.Handle.unlock","line":362,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.unlock","doc":"Releases any previously acquired lock on the handle.\nWill succeed even if no lock has been acquired.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.unlock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">unlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L357-L357","name":"IO.FS.Handle.tryLock","line":357,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.tryLock","doc":"Tries to acquire an exclusive or shared lock on the handle.\nWill NOT block for the lock, but instead return `false`.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.tryLock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">tryLock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L349-L349","name":"IO.FS.Handle.lock","line":349,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.lock","doc":"Acquires an exclusive or shared lock on the handle.\nWill block to wait for the lock if necessary.\n\n**NOTE:** Acquiring a exclusive lock while already possessing a shared lock\nwill NOT reliably succeed (i.e., it works on Unix but not on Windows).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.lock\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">lock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exclusive : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L340-L340","name":"IO.FS.Handle.mk","line":340,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mode : <a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/System/IO.html#IO.FS.Handle\">IO.FS.Handle</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L330-L334","name":"IO.iterate","line":330,"kind":"opaque","docLink":"./Init/System/IO.html#IO.iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.iterate\"><span class=\"name\">IO</span>.<span class=\"name\">iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L328-L328","name":"IO.setStderr","line":328,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStderr","doc":"Replaces the stderr stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStderr\"><span class=\"name\">IO</span>.<span class=\"name\">setStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L326-L326","name":"IO.setStdout","line":326,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdout","doc":"Replaces the stdout stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdout\"><span class=\"name\">IO</span>.<span class=\"name\">setStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L324-L324","name":"IO.setStdin","line":324,"kind":"opaque","docLink":"./Init/System/IO.html#IO.setStdin","doc":"Replaces the stdin stream of the current thread and returns its previous value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.setStdin\"><span class=\"name\">IO</span>.<span class=\"name\">setStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L321-L321","name":"IO.getStderr","line":321,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStderr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStderr\"><span class=\"name\">IO</span>.<span class=\"name\">getStderr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L320-L320","name":"IO.getStdout","line":320,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdout\"><span class=\"name\">IO</span>.<span class=\"name\">getStdout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L319-L319","name":"IO.getStdin","line":319,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getStdin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getStdin\"><span class=\"name\">IO</span>.<span class=\"name\">getStdin</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L315-L315","name":"IO.FS.instInhabitedStream","line":315,"kind":"instance","docLink":"./Init/System/IO.html#IO.FS.instInhabitedStream","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.instInhabitedStream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">instInhabitedStream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L314-L314","name":"IO.FS.Stream.putStr","line":314,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.putStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.putStr\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">putStr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L313-L313","name":"IO.FS.Stream.getLine","line":313,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.getLine","doc":"Read text up to (including) the next line break from the stream.\nIf the returned string is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.getLine\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">getLine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L307-L307","name":"IO.FS.Stream.write","line":307,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L306-L306","name":"IO.FS.Stream.read","line":306,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.read","doc":"Read up to the given number of bytes from the stream.\nIf the returned array is empty, an end-of-file marker has been reached.\nNote that EOF does not actually close a stream, so further reads may block and return more data.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L300-L300","name":"IO.FS.Stream.flush","line":300,"kind":"def","docLink":"./Init/System/IO.html#IO.FS.Stream.flush","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.flush\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">flush</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L299-L299","name":"IO.FS.Stream.mk","line":299,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Stream.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream.mk\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(flush : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(read : <span class=\"fn\"><a href=\"./Init/Prelude.html#USize\">USize</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(write : <span class=\"fn\"><a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getLine : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(putStr : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L299-L315","name":"IO.FS.Stream","line":299,"kind":"structure","docLink":"./Init/System/IO.html#IO.FS.Stream","doc":"A pure-Lean abstraction of POSIX streams. We use `Stream`s for the standard streams stdin/stdout/stderr so we can\ncapture output of `#eval` commands into memory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Stream\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L294-L294","name":"IO.FS.Handle","line":294,"kind":"opaque","docLink":"./Init/System/IO.html#IO.FS.Handle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Handle\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Handle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L284-L292","name":"IO.FS.Mode.append","line":284,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.append","doc":"File opened for writing.\nOn open, create a new file if it does not exist.\nThe stream is positioned at the end of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_APPEND`\n* `fdopen` mode: `a`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.append\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L275-L283","name":"IO.FS.Mode.readWrite","line":275,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.readWrite","doc":"File opened for reading and writing.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDWR`\n* `fdopen` mode: `r+`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.readWrite\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">readWrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L266-L274","name":"IO.FS.Mode.writeNew","line":266,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.writeNew","doc":"New file opened for writing.\nOn open, create a new file with the stream positioned at the start.\nErrors if the file already exists.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC | O_EXCL`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.writeNew\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">writeNew</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L257-L265","name":"IO.FS.Mode.write","line":257,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.write","doc":"File opened for writing.\nOn open, truncate an existing file to zero length or create a new file.\nThe stream is positioned at the beginning of the file.\n\n* `open` flags: `O_WRONLY | O_CREAT | O_TRUNC`\n* `fdopen` mode: `w`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.write\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">write</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L248-L256","name":"IO.FS.Mode.read","line":248,"kind":"ctor","docLink":"./Init/System/IO.html#IO.FS.Mode.read","doc":"File opened for reading.\nOn open, the stream is positioned at the beginning of the file.\nErrors if the file does not exist.\n\n* `open` flags: `O_RDONLY`\n* `fdopen` mode: `r`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode.read\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span>.<span class=\"name\">read</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Mode\">IO.FS.Mode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L247-L292","name":"IO.FS.Mode","line":247,"kind":"inductive","docLink":"./Init/System/IO.html#IO.FS.Mode","doc":"The mode of a file handle (i.e., a set of `open` flags and an `fdopen` mode).\n\nAll modes do not translate line endings (i.e., `O_BINARY` on Windows) and\nare not inherited across process creation (i.e., `O_NOINHERIT` on Windows,\n`O_CLOEXEC` elsewhere).\n\n**References:**\n* Windows:\n  [`_open`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/open-wopen?view=msvc-170),\n  [`_fdopen`](https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fdopen-wfdopen?view=msvc-170)\n* Linux:\n  [`open`](https://linux.die.net/man/2/open),\n  [`fdopen`](https://linux.die.net/man/3/fdopen)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.FS.Mode\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Mode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L230-L230","name":"IO.getNumHeartbeats","line":230,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getNumHeartbeats","doc":"Helper method for implementing \"deterministic\" timeouts. It is the number of \"small\" memory allocations performed by the current execution thread. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getNumHeartbeats\"><span class=\"name\">IO</span>.<span class=\"name\">getNumHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L225-L227","name":"IO.waitAny","line":225,"kind":"opaque","docLink":"./Init/System/IO.html#IO.waitAny","doc":"Wait until any of the tasks in the given list has finished, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.waitAny\"><span class=\"name\">IO</span>.<span class=\"name\">waitAny</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">tasks</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/System/IO.html#_auto._@.Init.System.IO._hyg.1378\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L218-L219","name":"IO.wait","line":218,"kind":"opaque","docLink":"./Init/System/IO.html#IO.wait","doc":"Wait for the task to finish, then return its result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.wait\"><span class=\"name\">IO</span>.<span class=\"name\">wait</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L215-L215","name":"IO.hasFinished","line":215,"kind":"opaque","docLink":"./Init/System/IO.html#IO.hasFinished","doc":"Check if the task has finished execution, at which point calling `Task.get` will return immediately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.hasFinished\"><span class=\"name\">IO</span>.<span class=\"name\">hasFinished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L212-L212","name":"IO.cancel","line":212,"kind":"opaque","docLink":"./Init/System/IO.html#IO.cancel","doc":"Request cooperative cancellation of the task. The task must explicitly call `IO.checkCanceled` to react to the cancellation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.cancel\"><span class=\"name\">IO</span>.<span class=\"name\">cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L209-L209","name":"IO.checkCanceled","line":209,"kind":"opaque","docLink":"./Init/System/IO.html#IO.checkCanceled","doc":"Check if the task's cancellation flag has been set by calling `IO.cancel` or dropping the last reference to the task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.checkCanceled\"><span class=\"name\">IO</span>.<span class=\"name\">checkCanceled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L204-L206","name":"IO.mapTasks","line":204,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTasks","doc":"`IO` specialization of `EIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTasks\"><span class=\"name\">IO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L199-L201","name":"IO.bindTask","line":199,"kind":"def","docLink":"./Init/System/IO.html#IO.bindTask","doc":"`IO` specialization of `EIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.bindTask\"><span class=\"name\">IO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L194-L196","name":"IO.mapTask","line":194,"kind":"def","docLink":"./Init/System/IO.html#IO.mapTask","doc":"`IO` specialization of `EIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.mapTask\"><span class=\"name\">IO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L190-L191","name":"IO.asTask","line":190,"kind":"def","docLink":"./Init/System/IO.html#IO.asTask","doc":"`IO` specialization of `EIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.asTask\"><span class=\"name\">IO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L185-L187","name":"IO.sleep","line":185,"kind":"def","docLink":"./Init/System/IO.html#IO.sleep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.sleep\"><span class=\"name\">IO</span>.<span class=\"name\">sleep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L183-L183","name":"IO.getRandomBytes","line":183,"kind":"opaque","docLink":"./Init/System/IO.html#IO.getRandomBytes","doc":"Read bytes from a system entropy source. Not guaranteed to be cryptographically secure.\nIf `nBytes = 0`, return immediately with an empty buffer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.getRandomBytes\"><span class=\"name\">IO</span>.<span class=\"name\">getRandomBytes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nBytes : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L179-L179","name":"IO.monoNanosNow","line":179,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoNanosNow","doc":"Monotonically increasing time since an unspecified past point in nanoseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoNanosNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoNanosNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L176-L176","name":"IO.monoMsNow","line":176,"kind":"opaque","docLink":"./Init/System/IO.html#IO.monoMsNow","doc":"Monotonically increasing time since an unspecified past point in milliseconds. No relation to wall clock time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.monoMsNow\"><span class=\"name\">IO</span>.<span class=\"name\">monoMsNow</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L172-L173","name":"IO.lazyPure","line":172,"kind":"def","docLink":"./Init/System/IO.html#IO.lazyPure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.lazyPure\"><span class=\"name\">IO</span>.<span class=\"name\">lazyPure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L167-L170","name":"IO.ofExcept","line":167,"kind":"def","docLink":"./Init/System/IO.html#IO.ofExcept","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.ofExcept\"><span class=\"name\">IO</span>.<span class=\"name\">ofExcept</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L159-L161","name":"EIO.mapTasks","line":159,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTasks","doc":"`EIO` specialization of `BaseIO.mapTasks`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTasks\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L153-L156","name":"EIO.bindTask","line":153,"kind":"def","docLink":"./Init/System/IO.html#EIO.bindTask","doc":"`EIO` specialization of `BaseIO.bindTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.bindTask\"><span class=\"name\">EIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L148-L150","name":"EIO.mapTask","line":148,"kind":"def","docLink":"./Init/System/IO.html#EIO.mapTask","doc":"`EIO` specialization of `BaseIO.mapTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.mapTask\"><span class=\"name\">EIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">β</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L144-L145","name":"EIO.asTask","line":144,"kind":"def","docLink":"./Init/System/IO.html#EIO.asTask","doc":"`EIO` specialization of `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.asTask\"><span class=\"name\">EIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L134-L137","name":"BaseIO.mapTasks.go","line":134,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks.go\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L130-L137","name":"BaseIO.mapTasks","line":130,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.mapTasks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTasks\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTasks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tasks : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L126-L128","name":"BaseIO.bindTask","line":126,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.bindTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.bindTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">bindTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L120-L122","name":"BaseIO.mapTask","line":120,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.mapTask","doc":"See `BaseIO.asTask`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.mapTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">mapTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sync : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L115-L116","name":"BaseIO.asTask","line":115,"kind":"opaque","docLink":"./Init/System/IO.html#BaseIO.asTask","doc":"Run `act` in a separate `Task`.\nThis is similar to Haskell's [`unsafeInterleaveIO`](http://hackage.haskell.org/package/base-4.14.0.0/docs/System-IO-Unsafe.html#v:unsafeInterleaveIO),\nexcept that the `Task` is started eagerly as usual. Thus pure accesses to the `Task` do not influence the impure `act`\ncomputation.\nUnlike with pure tasks created by `Task.spawn`, tasks created by this function will be run even if the last reference\nto the task is dropped. The `act` should manually check for cancellation via `IO.checkCanceled` if it wants to react\nto that. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.asTask\"><span class=\"name\">BaseIO</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Core.html#Task.Priority\">Task.Priority</a> <a href=\"./Init/Core.html#Task.Priority.default\">Task.Priority.default</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Task\">Task</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L102-L102","name":"IO.initializing","line":102,"kind":"opaque","docLink":"./Init/System/IO.html#IO.initializing","doc":"Programs can execute IO actions during initialization that occurs before\nthe `main` function is executed. The attribute `[init <action>]` specifies\nwhich IO action is executed to set the value of an opaque constant.\n\nThe action `initializing` returns `true` iff it is invoked during initialization. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.initializing\"><span class=\"name\">IO</span>.<span class=\"name\">initializing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L95-L95","name":"allocprof","line":95,"kind":"opaque","docLink":"./Init/System/IO.html#allocprof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#allocprof\"><span class=\"name\">allocprof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L94-L94","name":"timeit","line":94,"kind":"opaque","docLink":"./Init/System/IO.html#timeit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#timeit\"><span class=\"name\">timeit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L91-L92","name":"unsafeIO","line":91,"kind":"def","docLink":"./Init/System/IO.html#unsafeIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeIO\"><span class=\"name\">unsafeIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L88-L89","name":"unsafeEIO","line":88,"kind":"def","docLink":"./Init/System/IO.html#unsafeEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeEIO\"><span class=\"name\">unsafeEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L84-L86","name":"unsafeBaseIO","line":84,"kind":"def","docLink":"./Init/System/IO.html#unsafeBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#unsafeBaseIO\"><span class=\"name\">unsafeBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L77-L78","name":"IO.toEIO","line":77,"kind":"def","docLink":"./Init/System/IO.html#IO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.toEIO\"><span class=\"name\">IO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> → <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L74-L75","name":"EIO.toIO'","line":74,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO'\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L71-L72","name":"EIO.toIO","line":71,"kind":"def","docLink":"./Init/System/IO.html#EIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ε</span> → <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L68-L69","name":"BaseIO.toIO","line":68,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L66-L66","name":"IO","line":66,"kind":"def","docLink":"./Init/System/IO.html#IO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO\"><span class=\"name\">IO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L60-L63","name":"EIO.catchExceptions","line":60,"kind":"def","docLink":"./Init/System/IO.html#EIO.catchExceptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.catchExceptions\"><span class=\"name\">EIO</span>.<span class=\"name\">catchExceptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">ε</span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L54-L57","name":"EIO.toBaseIO","line":54,"kind":"def","docLink":"./Init/System/IO.html#EIO.toBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO.toBaseIO\"><span class=\"name\">EIO</span>.<span class=\"name\">toBaseIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L51-L51","name":"instMonadLiftBaseIOEIO","line":51,"kind":"instance","docLink":"./Init/System/IO.html#instMonadLiftBaseIOEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadLiftBaseIOEIO\"><span class=\"name\">instMonadLiftBaseIOEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L47-L49","name":"BaseIO.toEIO","line":47,"kind":"def","docLink":"./Init/System/IO.html#BaseIO.toEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO.toEIO\"><span class=\"name\">BaseIO</span>.<span class=\"name\">toEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L44-L44","name":"instMonadFinallyBaseIO","line":44,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyBaseIO\"><span class=\"name\">instMonadFinallyBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L43-L43","name":"instMonadBaseIO","line":43,"kind":"instance","docLink":"./Init/System/IO.html#instMonadBaseIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadBaseIO\"><span class=\"name\">instMonadBaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L41-L41","name":"BaseIO","line":41,"kind":"def","docLink":"./Init/System/IO.html#BaseIO","doc":"An `EIO` monad that cannot throw exceptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#BaseIO\"><span class=\"name\">BaseIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L38-L38","name":"instInhabitedEIO","line":38,"kind":"instance","docLink":"./Init/System/IO.html#instInhabitedEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instInhabitedEIO\"><span class=\"name\">instInhabitedEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">ε</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L37-L37","name":"instOrElseEIO","line":37,"kind":"instance","docLink":"./Init/System/IO.html#instOrElseEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instOrElseEIO\"><span class=\"name\">instOrElseEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L36-L36","name":"instMonadExceptOfEIO","line":36,"kind":"instance","docLink":"./Init/System/IO.html#instMonadExceptOfEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadExceptOfEIO\"><span class=\"name\">instMonadExceptOfEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L35-L35","name":"instMonadFinallyEIO","line":35,"kind":"instance","docLink":"./Init/System/IO.html#instMonadFinallyEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadFinallyEIO\"><span class=\"name\">instMonadFinallyEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#MonadFinally\">MonadFinally</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L34-L34","name":"instMonadEIO","line":34,"kind":"instance","docLink":"./Init/System/IO.html#instMonadEIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#instMonadEIO\"><span class=\"name\">instMonadEIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/System/IO.html#EIO\">EIO</a> <span class=\"fn\">ε</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L32-L32","name":"EIO","line":32,"kind":"def","docLink":"./Init/System/IO.html#EIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#EIO\"><span class=\"name\">EIO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Init/System/IO.lean#L23-L23","name":"IO.RealWorld","line":23,"kind":"def","docLink":"./Init/System/IO.html#IO.RealWorld","doc":"Like <https://hackage.haskell.org/package/ghc-Prim-0.5.2.0/docs/GHC-Prim.html#t:RealWorld>.\nMakes sure we never reorder `IO` operations.\n\nTODO: mark opaque "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/System/IO.html#IO.RealWorld\"><span class=\"name\">IO</span>.<span class=\"name\">RealWorld</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}