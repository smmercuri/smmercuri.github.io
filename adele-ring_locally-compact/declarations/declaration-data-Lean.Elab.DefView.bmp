{"name":"Lean.Elab.DefView","instances":[{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instInhabitedDefKind","className":"Inhabited"},{"typeNames":["Lean.Elab.DefKind"],"name":"Lean.Elab.instBEqDefKind","className":"BEq"},{"typeNames":["Lean.Elab.DefView"],"name":"Lean.Elab.instInhabitedDefView","className":"Inhabited"}],"imports":["Lean.Meta.ForEachExpr","Lean.Elab.Command","Lean.Elab.DeclUtil"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L151-L166","name":"Lean.Elab.Command.mkDefView","line":151,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L142-L149","name":"Lean.Elab.Command.isDefLike","line":142,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.isDefLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.isDefLike\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">isDefLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L134-L140","name":"Lean.Elab.Command.mkDefViewOfExample","line":134,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfExample","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfExample\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfExample</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L121-L132","name":"Lean.Elab.Command.mkDefViewOfOpaque","line":121,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfOpaque","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfOpaque\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfOpaque</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L104-L119","name":"Lean.Elab.Command.mkDefViewOfInstance","line":104,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L78-L102","name":"Lean.Elab.Command.mkInstanceName","line":78,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkInstanceName","doc":"Generate a name for an instance with the given type.\nNote that we elaborate the type twice. Once for producing the name, and another when elaborating the declaration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkInstanceName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkInstanceName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(binders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L69-L73","name":"Lean.Elab.Command.mkFreshInstanceName","line":69,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkFreshInstanceName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkFreshInstanceName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkFreshInstanceName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L63-L67","name":"Lean.Elab.Command.mkDefViewOfTheorem","line":63,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L56-L61","name":"Lean.Elab.Command.mkDefViewOfDef","line":56,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L48-L54","name":"Lean.Elab.Command.mkDefViewOfAbbrev","line":48,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfAbbrev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.Command.mkDefViewOfAbbrev\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">mkDefViewOfAbbrev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L42-L43","name":"Lean.Elab.DefView.isInstance","line":42,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.isInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.isInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">isInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(view : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L40-L40","name":"Lean.Elab.instInhabitedDefView","line":40,"kind":"instance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L39-L39","name":"Lean.Elab.DefView.deriving?","line":39,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.deriving?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.deriving?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">deriving?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L38-L38","name":"Lean.Elab.DefView.value","line":38,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.value\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L37-L37","name":"Lean.Elab.DefView.type?","line":37,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.type?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.type?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L36-L36","name":"Lean.Elab.DefView.binders","line":36,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.binders","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.binders\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">binders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L35-L35","name":"Lean.Elab.DefView.declId","line":35,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.declId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.declId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">declId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L34-L34","name":"Lean.Elab.DefView.modifiers","line":34,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.modifiers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.modifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">modifiers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L33-L33","name":"Lean.Elab.DefView.ref","line":33,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L32-L32","name":"Lean.Elab.DefView.kind","line":32,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L31-L31","name":"Lean.Elab.DefView.mk","line":31,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declId : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(binders : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(deriving? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L31-L40","name":"Lean.Elab.DefView","line":31,"kind":"structure","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L27-L29","name":"Lean.Elab.DefKind.isExample","line":27,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isExample","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isExample\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">isExample</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L21-L25","name":"Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","line":21,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isDefOrAbbrevOrOpaque","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isDefOrAbbrevOrOpaque\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">isDefOrAbbrevOrOpaque</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L17-L19","name":"Lean.Elab.DefKind.isTheorem","line":17,"kind":"def","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.isTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">isTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L15-L15","name":"Lean.Elab.instBEqDefKind","line":15,"kind":"instance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instBEqDefKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.instBEqDefKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instBEqDefKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L15-L15","name":"Lean.Elab.instInhabitedDefKind","line":15,"kind":"instance","docLink":"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.instInhabitedDefKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.DefKind.abbrev","line":14,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.abbrev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.abbrev\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">abbrev</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.DefKind.opaque","line":14,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.opaque","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.opaque\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">opaque</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.DefKind.example","line":14,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.example","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.example\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">example</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.DefKind.theorem","line":14,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.theorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.theorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">theorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L14-L14","name":"Lean.Elab.DefKind.def","line":14,"kind":"ctor","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind.def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind.def\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span>.<span class=\"name\">def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/DefView.lean#L13-L15","name":"Lean.Elab.DefKind","line":13,"kind":"inductive","docLink":"./Lean/Elab/DefView.html#Lean.Elab.DefKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}