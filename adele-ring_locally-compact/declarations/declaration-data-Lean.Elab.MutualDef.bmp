{"name":"Lean.Elab.MutualDef","instances":[{"typeNames":["Lean.Elab.DefViewElabHeader"],"name":"Lean.Elab.instInhabitedDefViewElabHeader","className":"Inhabited"}],"imports":["Lean.Parser.Term","Lean.Meta.Closure","Lean.Meta.Check","Lean.Meta.Transform","Lean.PrettyPrinter.Delaborator.Options","Lean.Elab.Command","Lean.Elab.Match","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition.WF.TerminationHint","Lean.Elab.DeclarationRange"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L950-L990","name":"Lean.Elab.Command.elabMutualDef","line":950,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L938-L945","name":"Lean.Elab.Term.elabMutualDef.processDeriving","line":938,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span>.<span class=\"name\">processDeriving</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(views : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(headers : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L898-L935","name":"Lean.Elab.Term.elabMutualDef.go","line":898,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(views : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L889-L945","name":"Lean.Elab.Term.elabMutualDef","line":889,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(views : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L874-L884","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visit","line":874,"kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">checkForHiddenUnivLevels</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(allUserLevelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sTypes : <a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State\">Lean.CollectLevelParams.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDef : <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Util/MonadCache.html#Lean.MonadCacheT\">Lean.MonadCacheT</a> <a href=\"./Lean/Expr.html#Lean.ExprStructEq\">Lean.ExprStructEq</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a></span>)</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L864-L873","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","line":864,"kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">checkForHiddenUnivLevels</span>.<span class=\"name\">visitLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(allUserLevelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sTypes : <a href=\"./Lean/Util/CollectLevelParams.html#Lean.CollectLevelParams.State\">Lean.CollectLevelParams.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDef : <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L850-L887","name":"Lean.Elab.Term.checkForHiddenUnivLevels","line":850,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">checkForHiddenUnivLevels</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(allUserLevelNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L798-L824","name":"Lean.Elab.Term.MutualClosure.main","line":798,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sectionVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainHeaders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainVals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(letRecsToLift : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">Lean.Elab.Term.LetRecToLift</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L785-L789","name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","line":785,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getModifiersForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mainHeaders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L781-L783","name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","line":781,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getKindForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mainHeaders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L758-L779","name":"Lean.Elab.Term.MutualClosure.pushLetRecs","line":758,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(letRecClosures : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">Lean.Elab.DefKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L738-L756","name":"Lean.Elab.Term.MutualClosure.pushMain","line":738,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushMain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sectionVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainHeaders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainVals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L731-L736","name":"Lean.Elab.Term.MutualClosure.Replacement.apply","line":731,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Lean.Elab.Term.MutualClosure.Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L727-L729","name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","line":727,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Lean.Elab.Term.MutualClosure.Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(letRecClosures : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Lean.Elab.Term.MutualClosure.Replacement</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L722-L724","name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","line":722,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForMainFns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Lean.Elab.Term.MutualClosure.Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sectionVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainHeaders : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Lean.Elab.Term.MutualClosure.Replacement</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L720-L720","name":"Lean.Elab.Term.MutualClosure.Replacement","line":720,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L663-L663","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","line":663,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">toLift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">Lean.Elab.Term.LetRecToLift</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L662-L662","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.closed","line":662,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed","doc":"Expression used to replace occurrences of the let-rec `FVarId`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">closed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L660-L660","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","line":660,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L659-L659","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.ref","line":659,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L658-L658","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.mk","line":658,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(localDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(closed : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toLift : <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.LetRecToLift\">Lean.Elab.Term.LetRecToLift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">Lean.Elab.Term.MutualClosure.LetRecClosure</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L658-L663","name":"Lean.Elab.Term.MutualClosure.LetRecClosure","line":658,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L594-L594","name":"Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","line":594,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">exprArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">Lean.Elab.Term.MutualClosure.ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L593-L593","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","line":593,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLetDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">Lean.Elab.Term.MutualClosure.ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L592-L592","name":"Lean.Elab.Term.MutualClosure.ClosureState.localDecls","line":592,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">Lean.Elab.Term.MutualClosure.ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L591-L591","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","line":591,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLocalDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">Lean.Elab.Term.MutualClosure.ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L590-L590","name":"Lean.Elab.Term.MutualClosure.ClosureState.mk","line":590,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newLocalDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(localDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newLetDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exprArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">Lean.Elab.Term.MutualClosure.ClosureState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L590-L594","name":"Lean.Elab.Term.MutualClosure.ClosureState","line":590,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L570-L570","name":"Lean.Elab.Term.MutualClosure.FreeVarMap","line":570,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FreeVarMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L564-L566","name":"Lean.Elab.Term.MutualClosure.FixPoint.run","line":564,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(letRecFVarIds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedFVarsMap : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">Lean.Elab.Term.MutualClosure.UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">Lean.Elab.Term.MutualClosure.UsedFVarsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L522-L522","name":"Lean.Elab.Term.MutualClosure.FixPoint.M","line":522,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L520-L520","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.modified","line":520,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">Lean.Elab.Term.MutualClosure.FixPoint.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L519-L519","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","line":519,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">usedFVarsMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">Lean.Elab.Term.MutualClosure.FixPoint.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">Lean.Elab.Term.MutualClosure.UsedFVarsMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L518-L518","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.mk","line":518,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(usedFVarsMap : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">Lean.Elab.Term.MutualClosure.UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modified : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">Lean.Elab.Term.MutualClosure.FixPoint.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L518-L520","name":"Lean.Elab.Term.MutualClosure.FixPoint.State","line":518,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L428-L428","name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","line":428,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","doc":"A mapping from FVarId to Set of FVarIds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">UsedFVarsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L41-L41","name":"Lean.Elab.instInhabitedDefViewElabHeader","line":41,"kind":"instance","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefViewElabHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L40-L40","name":"Lean.Elab.DefViewElabHeader.bodySnap?","line":40,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?","doc":"Snapshot for incremental processing of definition body.\n\nInvariant: if the bundle's `old?` is set, then elaboration of the body is guaranteed to result in\nthe same elaboration result and state, i.e. reuse is possible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">bodySnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Lean.Language.SnapshotBundle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">Lean.Elab.BodyProcessedSnapshot</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L33-L33","name":"Lean.Elab.DefViewElabHeader.tacSnap?","line":33,"kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?","doc":"Snapshot for incremental processing of top-level tactic block, if any.\n\nInvariant: if the bundle's `old?` is set, then the state *up to the start* of the tactic block is\nunchanged, i.e. reuse is possible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">tacSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Lean.Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Lean.Elab.Tactic.TacticParsedSnapshot</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L26-L26","name":"Lean.Elab.DefViewElabHeader.mk","line":26,"kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toDefView : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toDefViewElabHeaderData : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">Lean.Elab.DefViewElabHeaderData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacSnap? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Lean.Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Lean.Elab.Tactic.TacticParsedSnapshot</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bodySnap? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Lean.Language.SnapshotBundle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">Lean.Elab.BodyProcessedSnapshot</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">Lean.Elab.DefViewElabHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/MutualDef.lean#L26-L41","name":"Lean.Elab.DefViewElabHeader","line":26,"kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","doc":"`DefView` plus header elaboration data and snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefView</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeaderData</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}