{"name":"Lean.Elab.PreDefinition.WF.PackDomain","instances":[],"imports":["Lean.Meta.Tactic.Cases","Lean.Elab.PreDefinition.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L163-L188","name":"Lean.Elab.WF.packDomain.packApplications.visitApp","line":163,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visitApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visitApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packDomain</span>.<span class=\"name\">packApplications</span>.<span class=\"name\">visitApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arities : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pack : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/MonadCache.html#Lean.MonadCacheT\">Lean.MonadCacheT</a> <a href=\"./Lean/Expr.html#Lean.ExprStructEq\">Lean.ExprStructEq</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L146-L162","name":"Lean.Elab.WF.packDomain.packApplications.visit","line":146,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packDomain</span>.<span class=\"name\">packApplications</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arities : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pack : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/MonadCache.html#Lean.MonadCacheT\">Lean.MonadCacheT</a> <a href=\"./Lean/Expr.html#Lean.ExprStructEq\">Lean.ExprStructEq</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L135-L189","name":"Lean.Elab.WF.packDomain.packApplications","line":135,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.packApplications\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packDomain</span>.<span class=\"name\">packApplications</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fixedPrefix : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arities : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDefsNew : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L130-L133","name":"Lean.Elab.WF.packDomain.isAppOfPreDef?","line":130,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.isAppOfPreDef?","doc":"Return `some i` if `e` is a `preDefs[i]` application "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain.isAppOfPreDef?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packDomain</span>.<span class=\"name\">isAppOfPreDef?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L75-L189","name":"Lean.Elab.WF.packDomain","line":75,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain","doc":"Convert the given pre-definitions into unary functions.\nWe \"pack\" the arguments using `PSigma`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.packDomain\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">packDomain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fixedPrefix : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L45-L55","name":"Lean.Elab.WF.unpackUnaryArg","line":45,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.unpackUnaryArg","doc":"Unpacks a unary packed argument created with `mkUnaryArg`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.unpackUnaryArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">unpackUnaryArg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arity : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L30-L42","name":"Lean.Elab.WF.mkUnaryArg.go","line":30,"kind":"opaque","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">mkUnaryArg</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Elab/PreDefinition/WF/PackDomain.lean#L27-L42","name":"Lean.Elab.WF.mkUnaryArg","line":27,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg","doc":"Create a unary application by packing the given arguments using `PSigma.mk` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/PackDomain.html#Lean.Elab.WF.mkUnaryArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">mkUnaryArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"}]}