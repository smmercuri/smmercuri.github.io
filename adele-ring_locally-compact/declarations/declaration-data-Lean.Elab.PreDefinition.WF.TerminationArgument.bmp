{"name":"Lean.Elab.PreDefinition.WF.TerminationArgument","instances":[{"typeNames":["Lean.Elab.WF.TerminationArgument"],"name":"Lean.Elab.WF.instInhabitedTerminationArgument","className":"Inhabited"}],"imports":["Lean.Parser.Term","Lean.Elab.Term","Lean.Elab.Binders","Lean.Elab.SyntheticMVars","Lean.Elab.PreDefinition.WF.TerminationHint","Lean.PrettyPrinter.Delaborator"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L89-L108","name":"Lean.Elab.WF.TerminationArgument.delab.go","line":89,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.delab.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.delab.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">delab</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">Lean.TSyntaxArray</a> <span class=\"fn\">`ident</span></span> → <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.terminationBy</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L84-L108","name":"Lean.Elab.WF.TerminationArgument.delab","line":84,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.delab","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.delab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(termArg : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.terminationBy</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L79-L81","name":"Lean.Elab.WF.TerminationArgument.elab.parameters","line":79,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.elab.parameters","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.elab.parameters\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">elab</span>.<span class=\"name\">parameters</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L52-L81","name":"Lean.Elab.WF.TerminationArgument.elab","line":52,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.elab","doc":"Elaborates a `TerminationBy` to an `TerminationArgument`.\n\n* `type` is the full type of the original recursive function, including fixed prefix.\n* `arity` is the value arity of the recursive function; the termination argument cannot take more.\n* `extraParams` is the the number of parameters the function has after the colon; together with\n  `arity` indicates how many parameters of the function are before the colon and thus in scope.\n* `hint : TerminationBy` is the syntactic `TerminationBy`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.elab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">elab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arity : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hint : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L41-L41","name":"Lean.Elab.WF.TerminationArguments","line":41,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArguments","doc":"A complete set of `TerminationArgument`s, as applicable to a single clique.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArguments\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArguments</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L38-L38","name":"Lean.Elab.WF.instInhabitedTerminationArgument","line":38,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.instInhabitedTerminationArgument","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.instInhabitedTerminationArgument\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">instInhabitedTerminationArgument</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L37-L37","name":"Lean.Elab.WF.TerminationArgument.fn","line":37,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L36-L36","name":"Lean.Elab.WF.TerminationArgument.extraParams","line":36,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.extraParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.extraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">extraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L35-L35","name":"Lean.Elab.WF.TerminationArgument.arity","line":35,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.arity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.arity\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">arity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L34-L34","name":"Lean.Elab.WF.TerminationArgument.ref","line":34,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L33-L33","name":"Lean.Elab.WF.TerminationArgument.mk","line":33,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(arity : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\">Lean.Elab.WF.TerminationArgument</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationArgument.lean#L33-L38","name":"Lean.Elab.WF.TerminationArgument","line":33,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument","doc":"Elaborated form for a `termination_by` clause.\n\nThe `fn` has the same (value) arity as the recursive functions (stored in\n`arity`), and maps its arguments (including fixed prefix, in unpacked form) to\nthe termination argument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationArgument.html#Lean.Elab.WF.TerminationArgument\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationArgument</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}