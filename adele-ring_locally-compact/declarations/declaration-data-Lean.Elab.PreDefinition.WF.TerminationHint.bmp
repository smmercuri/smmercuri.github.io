{"name":"Lean.Elab.PreDefinition.WF.TerminationHint","instances":[{"typeNames":["Lean.Elab.WF.TerminationBy"],"name":"Lean.Elab.WF.instInhabitedTerminationBy","className":"Inhabited"},{"typeNames":["Lean.Elab.WF.DecreasingBy"],"name":"Lean.Elab.WF.instInhabitedDecreasingBy","className":"Inhabited"},{"typeNames":["Lean.Elab.WF.TerminationHints"],"name":"Lean.Elab.WF.instInhabitedTerminationHints","className":"Inhabited"}],"imports":["Lean.Parser.Term"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L106-L128","name":"Lean.Elab.WF.elabTerminationHints","line":106,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.elabTerminationHints","doc":"Takes apart a `Termination.suffix` syntax object "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.elabTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">elabTerminationHints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.suffix</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L99-L101","name":"Lean.Elab.WF.TerminationBy.checkVars.parameters","line":99,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.checkVars.parameters","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.checkVars.parameters\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">checkVars</span>.<span class=\"name\">parameters</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L88-L101","name":"Lean.Elab.WF.TerminationBy.checkVars","line":88,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.checkVars","doc":"Checks that `termination_by` binds at most as many variables are present in the outermost\nlambda of `value`, and throws appropriate errors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.checkVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">checkVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tb : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L80-L82","name":"Lean.Elab.WF.TerminationHints.rememberExtraParams","line":80,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.rememberExtraParams","doc":"Remembers `extraParams` for later use. Needs to happen early enough where we still know\nhow many parameters came from the function header (`headerParams`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.rememberExtraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">rememberExtraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(headerParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hints : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L71-L74","name":"Lean.Elab.WF.TerminationHints.isNotNone","line":71,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.isNotNone","doc":"True if any form of termination hint is present. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.isNotNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">isNotNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hints : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L58-L68","name":"Lean.Elab.WF.TerminationHints.ensureNone","line":58,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.ensureNone","doc":"Logs warnings when the `TerminationHints` are present.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.ensureNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ensureNone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hints : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(reason : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L55-L55","name":"Lean.Elab.WF.TerminationHints.none","line":55,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.none\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">none</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L53-L53","name":"Lean.Elab.WF.instInhabitedTerminationHints","line":53,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationHints","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">instInhabitedTerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L52-L52","name":"Lean.Elab.WF.TerminationHints.extraParams","line":52,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.extraParams","doc":"Here we record the number of parameters past the `:`. It is set by\n`TerminationHints.rememberExtraParams` and used as folows:\n\n* When we guess the termination argument in `GuessLex` and want to print it in surface-syntax\n  compatible form.\n* If there are fewer variables in the `termination_by` annotation than there are extra\n  parameters, we know which parameters they should apply to (`TerminationBy.checkVars`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.extraParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">extraParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L43-L43","name":"Lean.Elab.WF.TerminationHints.decreasingBy?","line":43,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.decreasingBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.decreasingBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">decreasingBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L42-L42","name":"Lean.Elab.WF.TerminationHints.terminationBy?","line":42,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.terminationBy?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.terminationBy?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L41-L41","name":"Lean.Elab.WF.TerminationHints.terminationBy??","line":41,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.terminationBy??","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.terminationBy??\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">terminationBy??</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L40-L40","name":"Lean.Elab.WF.TerminationHints.ref","line":40,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L39-L39","name":"Lean.Elab.WF.TerminationHints.mk","line":39,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(terminationBy?? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(terminationBy? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decreasingBy? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraParams : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\">Lean.Elab.WF.TerminationHints</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L39-L53","name":"Lean.Elab.WF.TerminationHints","line":39,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints","doc":"The termination annotations for a single function.\nFor `decreasing_by`, we store the whole `decreasing_by tacticSeq` expression, as this\nis what `Term.runTactic` expects.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationHints</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L33-L33","name":"Lean.Elab.WF.instInhabitedDecreasingBy","line":33,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedDecreasingBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedDecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">instInhabitedDecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L32-L32","name":"Lean.Elab.WF.DecreasingBy.tactic","line":32,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.tactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.tactic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L31-L31","name":"Lean.Elab.WF.DecreasingBy.ref","line":31,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L30-L30","name":"Lean.Elab.WF.DecreasingBy.mk","line":30,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">DecreasingBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tactic : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\">Lean.Elab.WF.DecreasingBy</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L30-L33","name":"Lean.Elab.WF.DecreasingBy","line":30,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy","doc":"A single `decreasing_by` clause "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.DecreasingBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">DecreasingBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L27-L27","name":"Lean.Elab.WF.instInhabitedTerminationBy","line":27,"kind":"instance","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.instInhabitedTerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">instInhabitedTerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L26-L26","name":"Lean.Elab.WF.TerminationBy.synthetic","line":26,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.synthetic","doc":"If `synthetic := true`, then this `termination_by` clause was\ngenerated by `GuessLex`, and `vars` refers to *all* parameters\nof the function, not just the “extra parameters”.\nCf. Lean.Elab.WF.unpackUnary\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.synthetic\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">synthetic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L19-L19","name":"Lean.Elab.WF.TerminationBy.body","line":19,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.body","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.body\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">body</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L18-L18","name":"Lean.Elab.WF.TerminationBy.vars","line":18,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">Lean.TSyntaxArray</a> <span class=\"fn\">[<span class=\"fn\">`ident</span>, <span class=\"fn\">`Lean.Parser.Term.hole</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L17-L17","name":"Lean.Elab.WF.TerminationBy.ref","line":17,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L16-L16","name":"Lean.Elab.WF.TerminationBy.mk","line":16,"kind":"ctor","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">Lean.TSyntaxArray</a> <span class=\"fn\">[<span class=\"fn\">`ident</span>, <span class=\"fn\">`Lean.Parser.Term.hole</span>]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(body : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(synthetic : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\">Lean.Elab.WF.TerminationBy</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Elab/PreDefinition/WF/TerminationHint.lean#L16-L27","name":"Lean.Elab.WF.TerminationBy","line":16,"kind":"structure","docLink":"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy","doc":"A single `termination_by` clause "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/TerminationHint.html#Lean.Elab.WF.TerminationBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">TerminationBy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}