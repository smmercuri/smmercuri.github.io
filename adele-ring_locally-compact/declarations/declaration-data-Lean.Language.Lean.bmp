{"name":"Lean.Language.Lean","instances":[{"typeNames":["Lean.Language.Lean.CommandFinishedSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandFinishedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshotData"],"name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshotData","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","className":"Nonempty"},{"typeNames":["Lean.Language.Lean.CommandParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderProcessedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.HeaderParsedSnapshot"],"name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","className":"Lean.Language.ToSnapshotTree"},{"typeNames":["Lean.Language.Lean.LeanProcessingM","Lean.Language.Lean.LeanProcessingT"],"name":"Lean.Language.Lean.instMonadLiftLeanProcessingMLeanProcessingTIO","className":"MonadLift"},{"typeNames":["Lean.Language.ProcessingT","Lean.Language.Lean.LeanProcessingT"],"name":"Lean.Language.Lean.instMonadLiftProcessingTLeanProcessingT","className":"MonadLift"}],"imports":["Lean.Language.Basic","Lean.Parser.Module","Lean.Elab.Command","Lean.Elab.Import"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L628-L632","name":"Lean.Language.Lean.waitForFinalEnv?.goCmd","line":628,"kind":"opaque","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.waitForFinalEnv?.goCmd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.waitForFinalEnv?.goCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">waitForFinalEnv?</span>.<span class=\"name\">goCmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(snap : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L624-L632","name":"Lean.Language.Lean.waitForFinalEnv?","line":624,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.waitForFinalEnv?","doc":"Waits for and returns final environment, if importing was successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.waitForFinalEnv?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">waitForFinalEnv?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(snap : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.InitialSnapshot\">Lean.Language.Lean.InitialSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L614-L620","name":"Lean.Language.Lean.processCommands","line":614,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.processCommands","doc":"Convenience function for tool uses of the language processor that skips header handling.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.processCommands\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">processCommands</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inputCtx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(commandState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(old? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L557-L609","name":"Lean.Language.Lean.process.doElab","line":557,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.process.doElab","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.process.doElab\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">process</span>.<span class=\"name\">doElab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(beginPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(snap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Lean.Language.SnapshotBundle</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">Lean.Language.DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticCache : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L477-L555","name":"Lean.Language.Lean.process.parseCmd","line":477,"kind":"opaque","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.process.parseCmd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.process.parseCmd\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">process</span>.<span class=\"name\">parseCmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(old? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L434-L475","name":"Lean.Language.Lean.process.processHeader","line":434,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.process.processHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.process.processHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">process</span>.<span class=\"name\">processHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(setupImports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’\n  <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">Lean.Language.ProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L362-L432","name":"Lean.Language.Lean.process.parseHeader","line":362,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.process.parseHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.process.parseHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">process</span>.<span class=\"name\">parseHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(setupImports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’\n  <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">Lean.Language.ProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(old? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L357-L609","name":"Lean.Language.Lean.process","line":357,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.process","doc":"Entry point of the Lean language processor.\n\nThe `setupImports` function is called after the header has been parsed and before the first command\nis parsed in order to supply additional file metadata (or abort with a given terminal snapshot); see\n`SetupImportsResult`.\n\n`old?` is a previous resulting snapshot, if any, to be reused for incremental processing.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.process\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">process</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(setupImports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’\n  <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">Lean.Language.ProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(old? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.InitialSnapshot\">Lean.Language.Lean.InitialSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">Lean.Language.ProcessingM</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.InitialSnapshot\">Lean.Language.Lean.InitialSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L335-L335","name":"Lean.Language.Lean.SetupImportsResult.trustLevel","line":335,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.trustLevel","doc":"Kernel trust level. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.trustLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">SetupImportsResult</span>.<span class=\"name\">trustLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L333-L333","name":"Lean.Language.Lean.SetupImportsResult.opts","line":333,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.opts","doc":"Options provided outside of the file content, e.g. on the cmdline or in the lakefile. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">SetupImportsResult</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L331-L331","name":"Lean.Language.Lean.SetupImportsResult.mainModuleName","line":331,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.mainModuleName","doc":"Module name of the file being processed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.mainModuleName\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">SetupImportsResult</span>.<span class=\"name\">mainModuleName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L329-L329","name":"Lean.Language.Lean.SetupImportsResult.mk","line":329,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">SetupImportsResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mainModuleName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\">Lean.Language.Lean.SetupImportsResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L329-L335","name":"Lean.Language.Lean.SetupImportsResult","line":329,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult","doc":"Result of retrieving additional metadata about the current file after parsing imports. In the\nlanguage server, these are derived from the `lake setup-file` result. On the cmdline and for similar\nsimple uses, these can be computed eagerly without looking at the imports.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.SetupImportsResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">SetupImportsResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L312-L313","name":"Lean.Language.Lean.isBeforeEditPos","line":312,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.isBeforeEditPos","doc":"Returns true if there was a previous run and the given position is before any textual change\ncompared to it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.isBeforeEditPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">isBeforeEditPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L301-L306","name":"Lean.Language.Lean.LeanProcessingM.run","line":301,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM.run","doc":"Embeds a `LeanProcessingM` action into `ProcessingM`, optionally using the old input string to speed\nup reuse analysis and supplying a cancellation token that should be triggered as soon as reuse is\nruled out.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldInputCtx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldCancelTk? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingM\">Lean.Language.ProcessingM</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L293-L294","name":"Lean.Language.Lean.instMonadLiftProcessingTLeanProcessingT","line":293,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instMonadLiftProcessingTLeanProcessingT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instMonadLiftProcessingTLeanProcessingT\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instMonadLiftProcessingTLeanProcessingT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingT\">Lean.Language.ProcessingT</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingT\">Lean.Language.Lean.LeanProcessingT</a> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L290-L291","name":"Lean.Language.Lean.instMonadLiftLeanProcessingMLeanProcessingTIO","line":290,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instMonadLiftLeanProcessingMLeanProcessingTIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instMonadLiftLeanProcessingMLeanProcessingTIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instMonadLiftLeanProcessingMLeanProcessingTIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\">Lean.Language.Lean.LeanProcessingM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingT\">Lean.Language.Lean.LeanProcessingT</a> <a href=\"./Init/System/IO.html#IO\">IO</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L288-L288","name":"Lean.Language.Lean.LeanProcessingM","line":288,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM","doc":"Monad holding all relevant data for Lean processing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingM\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L286-L286","name":"Lean.Language.Lean.LeanProcessingT","line":286,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingT","doc":"Monad transformer holding all relevant data for Lean processing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingT\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L283-L283","name":"Lean.Language.Lean.LeanProcessingContext.newCancelTk","line":283,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.newCancelTk","doc":"Cancellation token of the current run. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.newCancelTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingContext</span>.<span class=\"name\">newCancelTk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext\">Lean.Language.Lean.LeanProcessingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L281-L281","name":"Lean.Language.Lean.LeanProcessingContext.oldCancelTk?","line":281,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.oldCancelTk?","doc":"Cancellation token of the previous invocation, if any. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.oldCancelTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingContext</span>.<span class=\"name\">oldCancelTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext\">Lean.Language.Lean.LeanProcessingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L279-L279","name":"Lean.Language.Lean.LeanProcessingContext.firstDiffPos?","line":279,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.firstDiffPos?","doc":"Position of the first file difference if there was a previous invocation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.firstDiffPos?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingContext</span>.<span class=\"name\">firstDiffPos?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext\">Lean.Language.Lean.LeanProcessingContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L277-L277","name":"Lean.Language.Lean.LeanProcessingContext.mk","line":277,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toProcessingContext : <a href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext\">Lean.Language.ProcessingContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(firstDiffPos? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldCancelTk? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newCancelTk : <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext\">Lean.Language.Lean.LeanProcessingContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L277-L283","name":"Lean.Language.Lean.LeanProcessingContext","line":277,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext","doc":"Lean-specific processing context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.LeanProcessingContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">LeanProcessingContext</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.ProcessingContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">ProcessingContext</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L274-L274","name":"Lean.Language.Lean.InitialSnapshot","line":274,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.InitialSnapshot","doc":"Initial snapshot of the Lean language processor: a \"header parsed\" snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.InitialSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">InitialSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L269-L271","name":"Lean.Language.Lean.HeaderParsedSnapshot.processedResult","line":269,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult","doc":"Shortcut accessor to the final header state, if successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.processedResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">processedResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(snap : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L264-L266","name":"Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","line":264,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeHeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L262-L262","name":"Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?","line":262,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?","doc":"Cancellation token for interrupting processing of this run. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.cancelTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">cancelTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L259-L259","name":"Lean.Language.Lean.HeaderParsedSnapshot.result?","line":259,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.result?","doc":"State after successful parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L257-L257","name":"Lean.Language.Lean.HeaderParsedSnapshot.stx","line":257,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.stx","doc":"Resulting syntax tree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L255-L255","name":"Lean.Language.Lean.HeaderParsedSnapshot.ictx","line":255,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx","doc":"Parser input context supplied by the driver, stored here for incremental parsing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.ictx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">ictx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L253-L253","name":"Lean.Language.Lean.HeaderParsedSnapshot.mk","line":253,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ictx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cancelTk? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/System/IO.html#IO.CancelToken\">IO.CancelToken</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\">Lean.Language.Lean.HeaderParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L253-L262","name":"Lean.Language.Lean.HeaderParsedSnapshot","line":253,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot","doc":"State after the module header has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L250-L250","name":"Lean.Language.Lean.HeaderParsedState.processedSnap","line":250,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.processedSnap","doc":"Header processing task. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.processedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">processedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L248-L248","name":"Lean.Language.Lean.HeaderParsedState.parserState","line":248,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L246-L246","name":"Lean.Language.Lean.HeaderParsedState.mk","line":246,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(processedSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\">Lean.Language.Lean.HeaderParsedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L246-L250","name":"Lean.Language.Lean.HeaderParsedState","line":246,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState","doc":"State after successfully parsing the module header. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderParsedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderParsedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L241-L243","name":"Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","line":241,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeHeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeHeaderProcessedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L239-L239","name":"Lean.Language.Lean.HeaderProcessedSnapshot.result?","line":239,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot.result?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">result?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L237-L237","name":"Lean.Language.Lean.HeaderProcessedSnapshot.mk","line":237,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\">Lean.Language.Lean.HeaderProcessedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L237-L240","name":"Lean.Language.Lean.HeaderProcessedSnapshot","line":237,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot","doc":"State after the module header has been processed including imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L234-L234","name":"Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","line":234,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap","doc":"First command task (there is always at least a terminal command). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.firstCmdSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">firstCmdSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L232-L232","name":"Lean.Language.Lean.HeaderProcessedState.cmdState","line":232,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.cmdState","doc":"The resulting initial elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L230-L230","name":"Lean.Language.Lean.HeaderProcessedState.mk","line":230,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(firstCmdSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\">Lean.Language.Lean.HeaderProcessedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L230-L234","name":"Lean.Language.Lean.HeaderProcessedState","line":230,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState","doc":"State after successful importing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.HeaderProcessedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">HeaderProcessedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L224-L227","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","line":224,"kind":"opaque","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">Lean.Language.SnapshotTree</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L222-L227","name":"Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","line":222,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L219-L221","name":"Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","line":219,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?","doc":"Next command, unless this is a terminal command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.nextCmdSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">nextCmdSnap?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a> â†’ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L216-L217","name":"Lean.Language.Lean.CommandParsedSnapshot.data","line":216,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.data","doc":"The snapshot data. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.data\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">data</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a> â†’ <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L214-L214","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshot","line":214,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L211-L213","name":"Lean.Language.Lean.CommandParsedSnapshot.mk","line":211,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.mk","doc":"Creates a command parsed snapshot. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nextCmdSnap? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\">Lean.Language.Lean.CommandParsedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L210-L214","name":"Lean.Language.Lean.CommandParsedSnapshot","line":210,"kind":"inductive","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot","doc":"State after a command has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L206-L206","name":"Lean.Language.Lean.instNonemptyCommandParsedSnapshotData","line":206,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshotData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandParsedSnapshotData\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandParsedSnapshotData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L205-L205","name":"Lean.Language.Lean.CommandParsedSnapshotData.tacticCache","line":205,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.tacticCache","doc":"Cache for `save`; to be replaced with incrementality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.tacticCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">tacticCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L203-L203","name":"Lean.Language.Lean.CommandParsedSnapshotData.finishedSnap","line":203,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.finishedSnap","doc":"State after processing is finished. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.finishedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">finishedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L201-L201","name":"Lean.Language.Lean.CommandParsedSnapshotData.elabSnap","line":201,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.elabSnap","doc":"Snapshot for incremental reporting and reuse during elaboration, type dependent on specific\nelaborator.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.elabSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">elabSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">Lean.Language.DynamicSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L196-L196","name":"Lean.Language.Lean.CommandParsedSnapshotData.parserState","line":196,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.parserState","doc":"Resulting parser state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.parserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">parserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L194-L194","name":"Lean.Language.Lean.CommandParsedSnapshotData.stx","line":194,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.stx","doc":"Syntax tree of the command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L192-L192","name":"Lean.Language.Lean.CommandParsedSnapshotData.mk","line":192,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserState : <a href=\"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState\">Lean.Parser.ModuleParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elabSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.DynamicSnapshot\">Lean.Language.DynamicSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(finishedSnap : <span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">Lean.Language.SnapshotTask</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticCache : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Tactic.Cache\">Lean.Elab.Tactic.Cache</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\">Lean.Language.Lean.CommandParsedSnapshotData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L192-L206","name":"Lean.Language.Lean.CommandParsedSnapshotData","line":192,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData","doc":"State after a command has been parsed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandParsedSnapshotData\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandParsedSnapshotData</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L188-L189","name":"Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","line":188,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instToSnapshotTreeCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instToSnapshotTreeCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.ToSnapshotTree\">Lean.Language.ToSnapshotTree</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L187-L187","name":"Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","line":187,"kind":"instance","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.instNonemptyCommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyCommandFinishedSnapshot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L186-L186","name":"Lean.Language.Lean.CommandFinishedSnapshot.cmdState","line":186,"kind":"def","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState","doc":"Resulting elaboration state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot.cmdState\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">cmdState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L184-L184","name":"Lean.Language.Lean.CommandFinishedSnapshot.mk","line":184,"kind":"ctor","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toSnapshot : <a href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\">Lean.Language.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cmdState : <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.State\">Lean.Elab.Command.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\">Lean.Language.Lean.CommandFinishedSnapshot</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L184-L187","name":"Lean.Language.Lean.CommandFinishedSnapshot","line":184,"kind":"structure","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot","doc":"Snapshot after elaboration of the entire command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.CommandFinishedSnapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">CommandFinishedSnapshot</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Language/Basic.html#Lean.Language.Snapshot\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Snapshot</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Language/Lean.lean#L174-L179","name":"Lean.Language.Lean.stderrAsMessages","line":174,"kind":"opaque","docLink":"./Lean/Language/Lean.html#Lean.Language.Lean.stderrAsMessages","doc":"Option for capturing output to stderr during elaboration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Language/Lean.html#Lean.Language.Lean.stderrAsMessages\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">Lean</span>.<span class=\"name\">stderrAsMessages</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}