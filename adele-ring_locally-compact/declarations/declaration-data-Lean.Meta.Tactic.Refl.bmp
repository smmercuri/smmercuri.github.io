{"name":"Lean.Meta.Tactic.Refl","instances":[],"imports":["Lean.Meta.Reduce","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Apply"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L67-L70","name":"Lean.MVarId.hrefl","line":67,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.hrefl","doc":"Close given goal using `HEq.refl`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.hrefl\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">hrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L59-L62","name":"Lean.MVarId.eqOfHEq","line":59,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.eqOfHEq","doc":"Try to apply `eq_of_heq`. If successful, then return new goal, otherwise return `mvarId`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.eqOfHEq\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">eqOfHEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L51-L54","name":"Lean.MVarId.heqOfEq","line":51,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.heqOfEq","doc":"Try to apply `heq_of_eq`. If successful, then return new goal, otherwise return `mvarId`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.heqOfEq\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">heqOfEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L45-L46","name":"Lean.MVarId.applyRefl","line":45,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.applyRefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.applyRefl\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">applyRefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.MessageData.ofFormat\">Lean.MessageData.ofFormat</a> <a href=\"./Init/Prelude.html#Function.comp\">âˆ˜</a> <span class=\"fn\">Std.format</span></span>)</span> <span class=\"fn\">&quot;refl failed&quot;</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L41-L42","name":"Lean.Meta.refl","line":41,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.Meta.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.Meta.refl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Meta/Tactic/Refl.lean#L22-L38","name":"Lean.MVarId.refl","line":22,"kind":"def","docLink":"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.refl","doc":"Close given goal using `Eq.refl`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Refl.html#Lean.MVarId.refl\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}