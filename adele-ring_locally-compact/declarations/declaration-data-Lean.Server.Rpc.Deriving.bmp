{"name":"Lean.Server.Rpc.Deriving","instances":[{"typeNames":["Lean.TSyntax","Lean.TSyntax"],"name":"Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatNilMkStr4","className":"Coe"}],"imports":["Lean.Elab.Command","Lean.Elab.Term","Lean.Elab.Deriving.Basic","Lean.Server.Rpc.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Server/Rpc/Deriving.lean#L64-L64","name":"Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatNilMkStr4","line":64,"kind":"instance","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatNilMkStr4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatNilMkStr4\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">instCoeTSyntaxConsSyntaxNodeKindStrNumAnonymousOfNatNatNilMkStr4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">`_private.Lean.Server.Rpc.Deriving</span>.num</span> <span class=\"fn\">0</span></span>)</span>.str</span> <span class=\"fn\">&quot;Lean&quot;</span></span>)</span>.str</span> <span class=\"fn\">&quot;Server&quot;</span></span>)</span>.str</span> <span class=\"fn\">&quot;RpcEncodable&quot;</span></span>)</span>.str</span> <span class=\"fn\">&quot;matchAltTerm&quot;</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.matchAlt</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/702c31b8071269f0052fd1e0fb3891a079a655bd/src/Lean/Server/Rpc/Deriving.lean#L18-L18","name":"Lean.Server.RpcEncodable.isOptField","line":18,"kind":"def","docLink":"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.isOptField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Rpc/Deriving.html#Lean.Server.RpcEncodable.isOptField\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RpcEncodable</span>.<span class=\"name\">isOptField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}