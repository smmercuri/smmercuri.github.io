{"name":"Mathlib.Algebra.AddTorsor","instances":[{"typeNames":[],"name":"addGroupIsAddTorsor","className":"AddTorsor"},{"typeNames":["Prod","Prod"],"name":"Prod.instAddTorsor","className":"AddTorsor"},{"typeNames":[],"name":"Pi.instAddTorsor","className":"AddTorsor"}],"imports":["Init","Mathlib.Data.Set.Pointwise.SMul"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L428-L431","name":"AddTorsor.subsingleton_iff","line":428,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor.subsingleton_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor.subsingleton_iff\"><span class=\"name\">AddTorsor</span>.<span class=\"name\">subsingleton_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L418-L424","name":"Equiv.injective_pointReflection_left_of_injective_bit0","line":418,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.injective_pointReflection_left_of_injective_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.injective_pointReflection_left_of_injective_bit0\"><span class=\"name\">Equiv</span>.<span class=\"name\">injective_pointReflection_left_of_injective_bit0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L412-L415","name":"Equiv.pointReflection_fixed_iff_of_injective_bit0","line":412,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_fixed_iff_of_injective_bit0","doc":"`x` is the only fixed point of `pointReflection x`. This lemma requires\n`x + x = y + y ↔ x = y`. There is no typeclass to use here, so we add it as an explicit argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_fixed_iff_of_injective_bit0\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_fixed_iff_of_injective_bit0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L407-L408","name":"Equiv.pointReflection_involutive","line":407,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_involutive\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L404-L405","name":"Equiv.pointReflection_self","line":404,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L400-L401","name":"Equiv.pointReflection_symm","line":400,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_symm\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">Equiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L396-L397","name":"Equiv.right_vsub_pointReflection","line":396,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.right_vsub_pointReflection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.right_vsub_pointReflection\"><span class=\"name\">Equiv</span>.<span class=\"name\">right_vsub_pointReflection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L392-L393","name":"Equiv.pointReflection_vsub_right","line":392,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_vsub_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_vsub_right\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_vsub_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L388-L389","name":"Equiv.left_vsub_pointReflection","line":388,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.left_vsub_pointReflection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.left_vsub_pointReflection\"><span class=\"name\">Equiv</span>.<span class=\"name\">left_vsub_pointReflection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L384-L385","name":"Equiv.pointReflection_vsub_left","line":384,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_vsub_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_vsub_left\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_vsub_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L380-L381","name":"Equiv.pointReflection_apply","line":380,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\">Equiv.pointReflection</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L377-L378","name":"Equiv.pointReflection","line":377,"kind":"def","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection","doc":"Point reflection in `x` as a permutation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.pointReflection\"><span class=\"name\">Equiv</span>.<span class=\"name\">pointReflection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L365-L368","name":"Equiv.constVAddHom","line":365,"kind":"def","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAddHom","doc":"`Equiv.constVAdd` as a homomorphism from `Multiplicative G` to `Equiv.perm P` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAddHom\"><span class=\"name\">Equiv</span>.<span class=\"name\">constVAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L361-L362","name":"Equiv.constVAdd_add","line":361,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd_add\"><span class=\"name\">Equiv</span>.<span class=\"name\">constVAdd_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v₁ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\">Equiv.constVAdd</a> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\">Equiv.constVAdd</a> <span class=\"fn\">P</span> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\">Equiv.constVAdd</a> <span class=\"fn\">P</span> <span class=\"fn\">v₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L355-L356","name":"Equiv.constVAdd_zero","line":355,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd_zero\"><span class=\"name\">Equiv</span>.<span class=\"name\">constVAdd_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\">Equiv.constVAdd</a> <span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L350-L350","name":"Equiv.coe_constVAdd","line":350,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVAdd\"><span class=\"name\">Equiv</span>.<span class=\"name\">coe_constVAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\">Equiv.constVAdd</a> <span class=\"fn\">P</span> <span class=\"fn\">v</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L344-L348","name":"Equiv.constVAdd","line":344,"kind":"def","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd","doc":"The permutation given by `p ↦ v +ᵥ p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVAdd\"><span class=\"name\">Equiv</span>.<span class=\"name\">constVAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L338-L339","name":"Equiv.coe_constVSub_symm","line":338,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVSub_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVSub_symm\"><span class=\"name\">Equiv</span>.<span class=\"name\">coe_constVSub_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVSub\">Equiv.constVSub</a> <span class=\"fn\">p</span></span>)</span>.symm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">v</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">v</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L335-L335","name":"Equiv.coe_constVSub","line":335,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_constVSub\"><span class=\"name\">Equiv</span>.<span class=\"name\">coe_constVSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVSub\">Equiv.constVSub</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L329-L333","name":"Equiv.constVSub","line":329,"kind":"def","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.constVSub","doc":"`p' ↦ p -ᵥ p'` as an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.constVSub\"><span class=\"name\">Equiv</span>.<span class=\"name\">constVSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L325-L326","name":"Equiv.coe_vaddConst_symm","line":325,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_vaddConst_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_vaddConst_symm\"><span class=\"name\">Equiv</span>.<span class=\"name\">coe_vaddConst_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.vaddConst\">Equiv.vaddConst</a> <span class=\"fn\">p</span></span>)</span>.symm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">p'</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p'</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L321-L322","name":"Equiv.coe_vaddConst","line":321,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_vaddConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.coe_vaddConst\"><span class=\"name\">Equiv</span>.<span class=\"name\">coe_vaddConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.vaddConst\">Equiv.vaddConst</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">v</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L314-L318","name":"Equiv.vaddConst","line":314,"kind":"def","docLink":"./Mathlib/Algebra/AddTorsor.html#Equiv.vaddConst","doc":"`v ↦ v +ᵥ p` as an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Equiv.vaddConst\"><span class=\"name\">Equiv</span>.<span class=\"name\">vaddConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L299-L305","name":"Pi.instAddTorsor","line":299,"kind":"instance","docLink":"./Mathlib/Algebra/AddTorsor.html#Pi.instAddTorsor","doc":"A product of `AddTorsor`s is an `AddTorsor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Pi.instAddTorsor\"><span class=\"name\">Pi</span>.<span class=\"name\">instAddTorsor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fg : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fg</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fp : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fg</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">fp</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">fg</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">fp</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L284-L286","name":"Prod.mk_vsub_mk","line":284,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.mk_vsub_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.mk_vsub_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_vsub_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁' : <span class=\"fn\">P'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂' : <span class=\"fn\">P'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">p₁</span>, <span class=\"fn\">p₁'</span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">(<span class=\"fn\">p₂</span>, <span class=\"fn\">p₂'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>, <span class=\"fn\"><span class=\"fn\">p₁'</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L280-L281","name":"Prod.snd_vsub","line":280,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.snd_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.snd_vsub\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">p₂</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L276-L277","name":"Prod.fst_vsub","line":276,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.fst_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.fst_vsub\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">p₂</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L272-L273","name":"Prod.mk_vadd_mk","line":272,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.mk_vadd_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.mk_vadd_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_vadd_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v' : <span class=\"fn\">G'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p' : <span class=\"fn\">P'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">v</span>, <span class=\"fn\">v'</span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">(<span class=\"fn\">p</span>, <span class=\"fn\">p'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span>, <span class=\"fn\"><span class=\"fn\">v'</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L268-L269","name":"Prod.snd_vadd","line":268,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.snd_vadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.snd_vadd\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L264-L265","name":"Prod.fst_vadd","line":264,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.fst_vadd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.fst_vadd\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L245-L252","name":"Prod.instAddTorsor","line":245,"kind":"instance","docLink":"./Mathlib/Algebra/AddTorsor.html#Prod.instAddTorsor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Prod.instAddTorsor\"><span class=\"name\">Prod</span>.<span class=\"name\">instAddTorsor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G'</span> <span class=\"fn\">P'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">P'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L236-L237","name":"vsub_sub_vsub_comm","line":236,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_comm\"><span class=\"name\">vsub_sub_vsub_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₃ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₄ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₄</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₃</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₄</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L232-L234","name":"vadd_eq_vadd_iff_sub_eq_vsub","line":232,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_eq_vadd_iff_sub_eq_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_eq_vadd_iff_sub_eq_vsub\"><span class=\"name\">vadd_eq_vadd_iff_sub_eq_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v₁ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L228-L230","name":"vsub_vadd_comm","line":228,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_vadd_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_vadd_comm\"><span class=\"name\">vsub_vadd_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₃ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L225-L226","name":"vadd_vsub_vadd_cancel_left","line":225,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_vadd_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_vadd_cancel_left\"><span class=\"name\">vadd_vsub_vadd_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L221-L222","name":"vsub_sub_vsub_cancel_left","line":221,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_cancel_left","doc":"Cancellation subtracting the results of two subtractions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_cancel_left\"><span class=\"name\">vsub_sub_vsub_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₃ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L210-L211","name":"vsub_right_injective","line":210,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_right_injective","doc":"Subtracting a point from the point `p` is an injective\nfunction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_right_injective\"><span class=\"name\">vsub_right_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L205-L206","name":"vsub_right_cancel_iff","line":205,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_right_cancel_iff","doc":"Subtracting two points from the same point produces equal results\nif and only if those points are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_right_cancel_iff\"><span class=\"name\">vsub_right_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L198-L200","name":"vsub_right_cancel","line":198,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_right_cancel","doc":"If subtracting two points from the same point produces equal\nresults, those points are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_right_cancel\"><span class=\"name\">vsub_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L193-L194","name":"vsub_left_injective","line":193,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_left_injective","doc":"Subtracting the point `p` is an injective function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_left_injective\"><span class=\"name\">vsub_left_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">P</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L189-L190","name":"vsub_left_cancel_iff","line":189,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_left_cancel_iff","doc":"The same point subtracted from two points produces equal results\nif and only if those points are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_left_cancel_iff\"><span class=\"name\">vsub_left_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L183-L184","name":"vsub_left_cancel","line":183,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_left_cancel","doc":"If the same point subtracted from two points produces equal\nresults, those points are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_left_cancel\"><span class=\"name\">vsub_left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L178-L179","name":"vadd_vsub_vadd_cancel_right","line":178,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_vadd_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_vadd_cancel_right\"><span class=\"name\">vadd_vsub_vadd_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v₁ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L172-L173","name":"Set.singleton_vsub_self","line":172,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#Set.singleton_vsub_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#Set.singleton_vsub_self\"><span class=\"name\">Set</span>.<span class=\"name\">singleton_vsub_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">p</span>}</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">{<span class=\"fn\">p</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L162-L164","name":"vadd_eq_vadd_iff_neg_add_eq_vsub","line":162,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_eq_vadd_iff_neg_add_eq_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_eq_vadd_iff_neg_add_eq_vsub\"><span class=\"name\">vadd_eq_vadd_iff_neg_add_eq_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v₁ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L159-L160","name":"eq_vadd_iff_vsub_eq","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#eq_vadd_iff_vsub_eq","doc":"Convert between an equality with adding a group element to a point\nand an equality of a subtraction of two points with a group\nelement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#eq_vadd_iff_vsub_eq\"><span class=\"name\">eq_vadd_iff_vsub_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L153-L154","name":"vsub_sub_vsub_cancel_right","line":153,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_cancel_right","doc":"Cancellation subtracting the results of two subtractions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_sub_vsub_cancel_right\"><span class=\"name\">vsub_sub_vsub_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₃ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₃</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₃</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L147-L149","name":"vsub_vadd_eq_vsub_sub","line":147,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_vadd_eq_vsub_sub","doc":"Subtracting the result of adding a group element produces the same result\nas subtracting the points and subtracting that group element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_vadd_eq_vsub_sub\"><span class=\"name\">vsub_vadd_eq_vsub_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L142-L143","name":"vadd_vsub_eq_sub_vsub","line":142,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_eq_sub_vsub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_eq_sub_vsub\"><span class=\"name\">vadd_vsub_eq_sub_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L138-L140","name":"neg_vsub_eq_vsub_rev","line":138,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#neg_vsub_eq_vsub_rev","doc":"Subtracting two points in the reverse order produces the negation\nof subtracting them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#neg_vsub_eq_vsub_rev\"><span class=\"name\">neg_vsub_eq_vsub_rev</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L131-L133","name":"vsub_add_vsub_cancel","line":131,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_add_vsub_cancel","doc":"Cancellation adding the results of two subtractions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_add_vsub_cancel\"><span class=\"name\">vsub_add_vsub_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₃ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₃</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L126-L127","name":"vsub_ne_zero","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_ne_zero\"><span class=\"name\">vsub_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L123-L124","name":"vsub_eq_zero_iff_eq","line":123,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_eq_zero_iff_eq","doc":"Subtracting two points produces 0 if and only if they are\nequal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_eq_zero_iff_eq\"><span class=\"name\">vsub_eq_zero_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L117-L118","name":"eq_of_vsub_eq_zero","line":117,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#eq_of_vsub_eq_zero","doc":"If subtracting two points produces 0, they are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#eq_of_vsub_eq_zero\"><span class=\"name\">eq_of_vsub_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L113-L114","name":"vsub_self","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_self","doc":"Subtracting a point from itself produces 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_self\"><span class=\"name\">vsub_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L107-L109","name":"vadd_vsub_assoc","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_assoc","doc":"Adding a group element to a point, then subtracting another point,\nproduces the same result as subtracting the points then adding the\ngroup element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_vsub_assoc\"><span class=\"name\">vadd_vsub_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₁</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L101-L102","name":"vadd_right_injective","line":101,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_right_injective","doc":"Adding a group element to the point `p` is an injective\nfunction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_right_injective\"><span class=\"name\">vadd_right_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L96-L97","name":"vadd_right_cancel_iff","line":96,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_right_cancel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_right_cancel_iff\"><span class=\"name\">vadd_right_cancel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L91-L93","name":"vadd_right_cancel","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_right_cancel","doc":"If the same point added to two group elements produces equal\nresults, those group elements are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_right_cancel\"><span class=\"name\">vadd_right_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L86-L87","name":"vadd_vsub","line":86,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vadd_vsub","doc":"Adding a group element then subtracting the original point\nproduces that group element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vadd_vsub\"><span class=\"name\">vadd_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L80-L81","name":"vsub_vadd","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_vadd","doc":"Adding the result of subtracting from another point produces that\npoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_vadd\"><span class=\"name\">vsub_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L70-L71","name":"vsub_eq_sub","line":70,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#vsub_eq_sub","doc":"Simplify subtraction for a torsor for an `AddGroup G` over\nitself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#vsub_eq_sub\"><span class=\"name\">vsub_eq_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g₁ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L62-L65","name":"addGroupIsAddTorsor","line":62,"kind":"instance","docLink":"./Mathlib/Algebra/AddTorsor.html#addGroupIsAddTorsor","doc":"An `AddGroup G` is a torsor for itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#addGroupIsAddTorsor\"><span class=\"name\">addGroupIsAddTorsor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L51-L51","name":"AddTorsor.vadd_vsub'","line":51,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor.vadd_vsub'","doc":"Torsor addition and subtraction with the same element cancels out. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor.vadd_vsub'\"><span class=\"name\">AddTorsor</span>.<span class=\"name\">vadd_vsub'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L49-L49","name":"AddTorsor.vsub_vadd'","line":49,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor.vsub_vadd'","doc":"Torsor subtraction and addition with the same element cancels out. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor.vsub_vadd'\"><span class=\"name\">AddTorsor</span>.<span class=\"name\">vsub_vadd'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L47-L47","name":"AddTorsor.nonempty","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor.nonempty\"><span class=\"name\">AddTorsor</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L45-L45","name":"AddTorsor.mk","line":45,"kind":"ctor","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor.mk\"><span class=\"name\">AddTorsor</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toAddAction : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toVSub : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#VSub\">VSub</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[nonempty : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(vsub_vadd' : <span class=\"fn\">∀ (<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vadd_vsub' : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">P</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\">AddTorsor</a> <span class=\"fn\">G</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/AddTorsor.lean#L45-L51","name":"AddTorsor","line":45,"kind":"class","docLink":"./Mathlib/Algebra/AddTorsor.html#AddTorsor","doc":"An `AddTorsor G P` gives a structure to the nonempty type `P`,\nacted on by an `AddGroup G` with a transitive and free action given\nby the `+ᵥ` operation and a corresponding subtraction given by the\n`-ᵥ` operation. In the case of a vector space, it is an affine\nspace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/AddTorsor.html#AddTorsor\"><span class=\"name\">AddTorsor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\"><span class=\"name\">AddAction</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Defs.html#VSub\"><span class=\"name\">VSub</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}