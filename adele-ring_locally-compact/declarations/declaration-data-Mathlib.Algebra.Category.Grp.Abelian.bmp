{"name":"Mathlib.Algebra.Category.Grp.Abelian","instances":[{"typeNames":["AddCommGrp"],"name":"AddCommGrp.instAbelian","className":"CategoryTheory.Abelian"}],"imports":["Init","Mathlib.Algebra.Category.Grp.Colimits","Mathlib.Algebra.Category.Grp.Limits","Mathlib.Algebra.Category.Grp.ZModuleEquivalence","Mathlib.Algebra.Category.ModuleCat.Abelian","Mathlib.CategoryTheory.Adjunction.Limits","Mathlib.CategoryTheory.Limits.ConcreteCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Abelian.lean#L38-L41","name":"AddCommGrp.instAbelian","line":38,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.instAbelian","doc":"The category of abelian groups is abelian. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.instAbelian\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instAbelian</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Abelian.lean#L33-L35","name":"AddCommGrp.normalEpi","line":33,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.normalEpi","doc":"In the category of abelian groups, every epimorphism is normal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.normalEpi\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">normalEpi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/NormalMono/Basic.html#CategoryTheory.NormalEpi\">CategoryTheory.NormalEpi</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Abelian.lean#L28-L30","name":"AddCommGrp.normalMono","line":28,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.normalMono","doc":"In the category of abelian groups, every monomorphism is normal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Abelian.html#AddCommGrp.normalMono\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">normalMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/NormalMono/Basic.html#CategoryTheory.NormalMono\">CategoryTheory.NormalMono</a> <span class=\"fn\">f</span></span></span></div></div>"}]}