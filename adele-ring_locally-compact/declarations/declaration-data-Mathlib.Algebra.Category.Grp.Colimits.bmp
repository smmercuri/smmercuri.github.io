{"name":"Mathlib.Algebra.Category.Grp.Colimits","instances":[{"typeNames":["AddCommGrp.Colimits.Prequotient"],"name":"AddCommGrp.Colimits.instInhabitedPrequotient","className":"Inhabited"},{"typeNames":["AddCommGrp.Colimits.Prequotient"],"name":"AddCommGrp.Colimits.colimitSetoid","className":"Setoid"},{"typeNames":["AddCommGrp.Colimits.ColimitType"],"name":"AddCommGrp.Colimits.instZeroColimitType","className":"Zero"},{"typeNames":["AddCommGrp.Colimits.ColimitType"],"name":"AddCommGrp.Colimits.instNegColimitType","className":"Neg"},{"typeNames":["AddCommGrp.Colimits.ColimitType"],"name":"AddCommGrp.Colimits.instAddColimitType","className":"Add"},{"typeNames":["AddCommGrp.Colimits.ColimitType"],"name":"AddCommGrp.Colimits.instAddCommGroupColimitType","className":"AddCommGroup"},{"typeNames":["AddCommGrp.Colimits.ColimitType"],"name":"AddCommGrp.Colimits.ColimitTypeInhabited","className":"Inhabited"},{"typeNames":["AddCommGrp"],"name":"AddCommGrp.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGrpMax"],"name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGrpMax"],"name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_1","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGrpMax"],"name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_2","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGrpMax"],"name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_3","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGrp"],"name":"AddCommGrp.instHasColimitsOfSize","className":"CategoryTheory.Limits.HasColimitsOfSize"}],"imports":["Init","Mathlib.Algebra.Category.Grp.Preadditive","Mathlib.GroupTheory.QuotientGroup","Mathlib.CategoryTheory.Limits.Shapes.Kernels","Mathlib.CategoryTheory.Limits.Shapes.FiniteLimits","Mathlib.CategoryTheory.ConcreteCategory.Elementwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L270-L289","name":"AddCommGrp.cokernelIsoQuotient","line":270,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.cokernelIsoQuotient","doc":"The categorical cokernel of a morphism in `AddCommGrp`\nagrees with the usual group-theoretical quotient.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.cokernelIsoQuotient\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">cokernelIsoQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel\">CategoryTheory.Limits.cokernel</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.of\">AddCommGrp.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L250-L250","name":"AddCommGrp.instHasColimitsOfSize","line":250,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSize\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instHasColimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{0, 0, u, u + 1}</a>              <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L249-L249","name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_3","line":249,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_3\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGrpMax_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, u, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrpMax\">AddCommGrpMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L248-L248","name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_2","line":248,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_2\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGrpMax_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{u, v, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrpMax\">AddCommGrpMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L247-L247","name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_1","line":247,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax_1\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGrpMax_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{u, u, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrpMax\">AddCommGrpMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L246-L246","name":"AddCommGrp.instHasColimitsOfSizeAddCommGrpMax","line":246,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.instHasColimitsOfSizeAddCommGrpMax\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGrpMax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, v, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrpMax\">AddCommGrpMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L244-L244","name":"AddCommGrp.hasColimits","line":244,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimits\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L241-L242","name":"AddCommGrp.hasColimitsOfSize","line":241,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimitsOfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimitsOfSize\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">hasColimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, u, max (max u v) w, max (max (u + 1) (v + 1)) (w + 1)}</a>                                                        <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L238-L239","name":"AddCommGrp.hasColimitsOfShape","line":238,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimitsOfShape\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">hasColimitsOfShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">CategoryTheory.Limits.HasColimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L234-L234","name":"AddCommGrp.hasColimit","line":234,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.hasColimit\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">hasColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L216-L230","name":"AddCommGrp.Colimits.colimitCoconeIsColimit","line":216,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitCoconeIsColimit","doc":"Evidence that the proposed colimit is the colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitCoconeIsColimit\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitCocone\">AddCommGrp.Colimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L209-L213","name":"AddCommGrp.Colimits.descMorphism","line":209,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descMorphism","doc":"The group homomorphism from the colimit abelian group to the cone point of any other cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descMorphism\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimit\">AddCommGrp.Colimits.colimit</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L186-L206","name":"AddCommGrp.Colimits.descFun","line":186,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descFun","doc":"The function from the colimit abelian group to the cone point of any other cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descFun\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L179-L183","name":"AddCommGrp.Colimits.descFunLift","line":179,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descFunLift","doc":"The function from the free abelian group on the diagram to the cone point of any other\ncocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.descFunLift\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descFunLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L172-L174","name":"AddCommGrp.Colimits.colimitCocone","line":172,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitCocone","doc":"The cocone over the proposed colimit abelian group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitCocone\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L166-L169","name":"AddCommGrp.Colimits.cocone_naturality_components","line":166,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.cocone_naturality_components","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.cocone_naturality_components\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">cocone_naturality_components</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j' : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism\">AddCommGrp.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism\">AddCommGrp.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L159-L163","name":"AddCommGrp.Colimits.cocone_naturality","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.cocone_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.cocone_naturality\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">cocone_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j' : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism\">AddCommGrp.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism\">AddCommGrp.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L153-L156","name":"AddCommGrp.Colimits.coconeMorphism","line":153,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism","doc":"The group homomorphism from a given abelian group in the diagram to the colimit abelian\ngroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeMorphism\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">coconeMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimit\">AddCommGrp.Colimits.colimit</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L148-L149","name":"AddCommGrp.Colimits.coconeFun","line":148,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeFun","doc":"The function from a given abelian group in the diagram to the colimit abelian group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.coconeFun\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">coconeFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L144-L145","name":"AddCommGrp.Colimits.colimit","line":144,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimit","doc":"The bundled abelian group giving the colimit of a diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimit\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L137-L141","name":"AddCommGrp.Colimits.quot_add","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_add\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L130-L134","name":"AddCommGrp.Colimits.quot_neg","line":130,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_neg\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\"><span class=\"fn\">x</span>.neg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L126-L127","name":"AddCommGrp.Colimits.quot_zero","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.quot_zero\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">AddCommGrp.Colimits.Prequotient.zero</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L123-L123","name":"AddCommGrp.Colimits.ColimitTypeInhabited","line":123,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitTypeInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitTypeInhabited\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">ColimitTypeInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L113-L121","name":"AddCommGrp.Colimits.instAddCommGroupColimitType","line":113,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instAddCommGroupColimitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instAddCommGroupColimitType\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instAddCommGroupColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L109-L111","name":"AddCommGrp.Colimits.instAddColimitType","line":109,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instAddColimitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instAddColimitType\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instAddColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L106-L107","name":"AddCommGrp.Colimits.instNegColimitType","line":106,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instNegColimitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instNegColimitType\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instNegColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L103-L104","name":"AddCommGrp.Colimits.instZeroColimitType","line":103,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instZeroColimitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instZeroColimitType\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instZeroColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\">AddCommGrp.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L100-L101","name":"AddCommGrp.Colimits.ColimitType","line":100,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType","doc":"The underlying type of the colimit of a diagram in `AddCommGrp`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.ColimitType\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">ColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v w)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L92-L94","name":"AddCommGrp.Colimits.colimitSetoid","line":92,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitSetoid","doc":"The setoid corresponding to group expressions modulo abelian group relations and identifications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.colimitSetoid\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitSetoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L87-L87","name":"AddCommGrp.Colimits.Relation.add_assoc","line":87,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_assoc\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y</span></span>)</span>.add</span> <span class=\"fn\">z</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.add</span> <span class=\"fn\">z</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L86-L86","name":"AddCommGrp.Colimits.Relation.add_comm","line":86,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_comm\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.add</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L85-L85","name":"AddCommGrp.Colimits.Relation.add_left_neg","line":85,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_left_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_left_neg\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_left_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.neg</span>.add</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">AddCommGrp.Colimits.Prequotient.zero</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L84-L84","name":"AddCommGrp.Colimits.Relation.add_zero","line":84,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_zero\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">AddCommGrp.Colimits.Prequotient.zero</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L83-L83","name":"AddCommGrp.Colimits.Relation.zero_add","line":83,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.zero_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.zero_add\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">zero_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">AddCommGrp.Colimits.Prequotient.zero</span>.add</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L81-L81","name":"AddCommGrp.Colimits.Relation.add_2","line":81,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_2\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">y'</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L80-L80","name":"AddCommGrp.Colimits.Relation.add_1","line":80,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add_1\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.add</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x'</span>.add</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L79-L79","name":"AddCommGrp.Colimits.Relation.neg_1","line":79,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.neg_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.neg_1\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">neg_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">x</span>.neg</span> <span class=\"fn\"><span class=\"fn\">x'</span>.neg</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L76-L77","name":"AddCommGrp.Colimits.Relation.add","line":76,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.add\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span>.add</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L75-L75","name":"AddCommGrp.Colimits.Relation.neg","line":75,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.neg\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span>.neg</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L74-L74","name":"AddCommGrp.Colimits.Relation.zero","line":74,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.zero\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">AddCommGrp.Colimits.Prequotient.zero</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L71-L72","name":"AddCommGrp.Colimits.Relation.map","line":71,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.map\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j' : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\">AddCommGrp.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L69-L69","name":"AddCommGrp.Colimits.Relation.trans","line":69,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.trans\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L68-L68","name":"AddCommGrp.Colimits.Relation.symm","line":68,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.symm\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L67-L67","name":"AddCommGrp.Colimits.Relation.refl","line":67,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation.refl\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\">AddCommGrp.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L65-L87","name":"AddCommGrp.Colimits.Relation","line":65,"kind":"inductive","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation","doc":"The relation on `Prequotient` saying when two expressions are equal\nbecause of the abelian group laws, or\nbecause one element is mapped to another by a morphism in the diagram.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Relation\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L56-L57","name":"AddCommGrp.Colimits.instInhabitedPrequotient","line":56,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instInhabitedPrequotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.instInhabitedPrequotient\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instInhabitedPrequotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L54-L54","name":"AddCommGrp.Colimits.Prequotient.add","line":54,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.add\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L53-L53","name":"AddCommGrp.Colimits.Prequotient.neg","line":53,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.neg\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L52-L52","name":"AddCommGrp.Colimits.Prequotient.zero","line":52,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.zero\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L50-L50","name":"AddCommGrp.Colimits.Prequotient.of","line":50,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient.of\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\">AddCommGrp.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/Colimits.lean#L48-L54","name":"AddCommGrp.Colimits.Prequotient","line":48,"kind":"inductive","docLink":"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient","doc":"An inductive type representing all group expressions (without relations)\non a collection of types indexed by the objects of `J`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Colimits.html#AddCommGrp.Colimits.Prequotient\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) w)</div></div>"}]}