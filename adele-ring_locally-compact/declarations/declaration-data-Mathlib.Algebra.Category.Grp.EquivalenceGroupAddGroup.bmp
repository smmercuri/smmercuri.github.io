{"name":"Mathlib.Algebra.Category.Grp.EquivalenceGroupAddGroup","instances":[],"imports":["Init","Mathlib.Algebra.Category.Grp.Basic","Mathlib.Algebra.Group.Equiv.TypeTags"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L81-L84","name":"commGroupAddCommGroupEquivalence","line":81,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence","doc":"The equivalence of categories between `CommGroup` and `AddCommGroup`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\"><span class=\"name\">commGroupAddCommGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L74-L77","name":"groupAddGroupEquivalence","line":74,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence","doc":"The equivalence of categories between `Group` and `AddGroup`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\"><span class=\"name\">groupAddGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L66-L68","name":"AddCommGrp.toCommGrp","line":66,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp","doc":"The functor `AddCommGroup ⥤ CommGroup` by sending `X ↦ multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L65-L65","name":"AddCommGrp.toCommGrp_map","line":65,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_map\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">AddCommGrp.toCommGrp</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L65-L65","name":"AddCommGrp.toCommGrp_obj","line":65,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_obj\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">AddCommGrp.toCommGrp</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.of\">CommGrp.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L55-L57","name":"AddGrp.toGrp","line":55,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp","doc":"The functor `AddGroup ⥤ Group` by sending `X ↦ multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L54-L54","name":"AddGrp.toGrp_obj","line":54,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_obj\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">AddGrp.toGrp</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.of\">Grp.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L54-L54","name":"AddGrp.toGrp_map","line":54,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_map\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">AddGrp.toGrp</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L44-L46","name":"CommGrp.toAddCommGrp","line":44,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp","doc":"The functor `CommGroup ⥤ AddCommGroup` by sending `X ↦ additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L43-L43","name":"CommGrp.toAddCommGrp_obj","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_obj\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">CommGrp.toAddCommGrp</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.of\">AddCommGrp.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L43-L43","name":"CommGrp.toAddCommGrp_map","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_map\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">CommGrp.toAddCommGrp</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L33-L35","name":"Grp.toAddGrp","line":33,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp","doc":"The functor `Group ⥤ AddGroup` by sending `X ↦ additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L32-L32","name":"Grp.toAddGrp_map","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_map\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">Grp.toAddGrp</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L32-L32","name":"Grp.toAddGrp_obj","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_obj\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">Grp.toAddGrp</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.of\">AddGrp.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"}]}