{"name":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","instances":[{"typeNames":["HopfAlgebraCat","_builtin_typeu"],"name":"HopfAlgebraCat.instCoeSortType","className":"CoeSort"},{"typeNames":["HopfAlgebraCat"],"name":"HopfAlgebraCat.category","className":"CategoryTheory.Category"},{"typeNames":["HopfAlgebraCat"],"name":"HopfAlgebraCat.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["HopfAlgebraCat","BialgebraCat"],"name":"HopfAlgebraCat.hasForgetToBialgebra","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget"],"name":"HopfAlgebraCat.forget_reflects_isos","className":"CategoryTheory.Functor.ReflectsIsomorphisms"}],"imports":["Init","Mathlib.Algebra.Category.BialgebraCat.Basic","Mathlib.RingTheory.HopfAlgebra"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L179-L184","name":"HopfAlgebraCat.forget_reflects_isos","line":179,"kind":"instance","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget_reflects_isos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget_reflects_isos\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">forget_reflects_isos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>)</span>.ReflectsIsomorphisms</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L173-L175","name":"CategoryTheory.Iso.toHopfAlgEquiv_trans","line":173,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_trans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toHopfAlgEquiv_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\">f</span></span>)</span>.toHopfAlgEquiv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgEquiv</span>.trans</span> <span class=\"fn\"><span class=\"fn\">f</span>.toHopfAlgEquiv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L169-L171","name":"CategoryTheory.Iso.toHopfAlgEquiv_symm","line":169,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_symm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toHopfAlgEquiv_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.symm</span>.toHopfAlgEquiv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgEquiv</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L166-L167","name":"CategoryTheory.Iso.toHopfAlgEquiv_refl","line":166,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_refl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toHopfAlgEquiv_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">X</span></span>)</span>.toHopfAlgEquiv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.refl\">BialgEquiv.refl</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBundled</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L163-L164","name":"CategoryTheory.Iso.toHopfAlgEquiv_toBialgHom","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_toBialgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv_toBialgHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toHopfAlgEquiv_toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.toHopfAlgEquiv</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.hom</span>.toBialgHom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L157-L161","name":"CategoryTheory.Iso.toHopfAlgEquiv","line":157,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv","doc":"Build a `BialgEquiv` from an isomorphism in the category\n`HopfAlgebraCat R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#CategoryTheory.Iso.toHopfAlgEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toHopfAlgEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBundled</span></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toBundled</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L143-L145","name":"BialgEquiv.toHopfAlgebraCatIso_trans","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_trans\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.trans</span> <span class=\"fn\">f</span></span>)</span>.toHopfAlgebraCatIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgebraCatIso</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\"><span class=\"fn\">f</span>.toHopfAlgebraCatIso</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L139-L141","name":"BialgEquiv.toHopfAlgebraCatIso_symm","line":139,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_symm\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.symm</span>.toHopfAlgebraCatIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgebraCatIso</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L135-L137","name":"BialgEquiv.toHopfAlgebraCatIso_refl","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_refl\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.refl\">BialgEquiv.refl</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.toHopfAlgebraCatIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L129-L133","name":"BialgEquiv.toHopfAlgebraCatIso","line":129,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso","doc":"Build an isomorphism in the category `HopfAlgebraCat R` from a\n`BialgEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L128-L128","name":"BialgEquiv.toHopfAlgebraCatIso_inv_toBialgHom","line":128,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_inv_toBialgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_inv_toBialgHom\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso_inv_toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgebraCatIso</span>.inv</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">e</span>.symm</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L128-L128","name":"BialgEquiv.toHopfAlgebraCatIso_hom_toBialgHom","line":128,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_hom_toBialgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#BialgEquiv.toHopfAlgebraCatIso_hom_toBialgHom\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toHopfAlgebraCatIso_hom_toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.toHopfAlgebraCatIso</span>.hom</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L112-L114","name":"HopfAlgebraCat.forget₂_bialgebra_map","line":112,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget₂_bialgebra_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget₂_bialgebra_map\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">forget₂_bialgebra_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.ofHom\">BialgebraCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.toBialgHom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L107-L109","name":"HopfAlgebraCat.forget₂_bialgebra_obj","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget₂_bialgebra_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.forget₂_bialgebra_obj\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">forget₂_bialgebra_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">BialgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBundled</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L101-L104","name":"HopfAlgebraCat.hasForgetToBialgebra","line":101,"kind":"instance","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.hasForgetToBialgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.hasForgetToBialgebra\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">hasForgetToBialgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L94-L99","name":"HopfAlgebraCat.concreteCategory","line":94,"kind":"instance","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.concreteCategory\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L90-L92","name":"HopfAlgebraCat.toBialgHom_id","line":90,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.toBialgHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.toBialgHom_id\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">toBialgHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">M</span></span>)</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom.id\">BialgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">M</span>.toBundled</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L86-L88","name":"HopfAlgebraCat.toBialgHom_comp","line":86,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.toBialgHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.toBialgHom_comp\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">toBialgHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.toBialgHom</span>.comp</span> <span class=\"fn\"><span class=\"fn\">f</span>.toBialgHom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L81-L84","name":"HopfAlgebraCat.ofHom","line":81,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.ofHom","doc":"Typecheck a `BialgHom` as a morphism in `HopfAlgebraCat R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.ofHom\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L76-L78","name":"HopfAlgebraCat.hom_ext","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.hom_ext\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.toBialgHom</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L69-L72","name":"HopfAlgebraCat.category","line":69,"kind":"instance","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.category\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, max (v + 1) u}</a>                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L65-L67","name":"HopfAlgebraCat.Hom.toBialgHom_injective","line":65,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.toBialgHom_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.toBialgHom_injective\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toBialgHom_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">HopfAlgebraCat.Hom.toBialgHom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L63-L63","name":"HopfAlgebraCat.Hom.toBialgHom","line":63,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.toBialgHom","doc":"The underlying `BialgHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.toBialgHom\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.Hom</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">V</span>.toBundled</span></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">W</span>.toBundled</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L61-L61","name":"HopfAlgebraCat.Hom.mk","line":61,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.mk\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toBialgHom : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">V</span>.toBundled</span></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">W</span>.toBundled</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.Hom</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L61-L63","name":"HopfAlgebraCat.Hom","line":61,"kind":"structure","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom","doc":"A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L60-L60","name":"HopfAlgebraCat.Hom.ext_iff","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.ext_iff\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>} {<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>} (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.Hom</span> <span class=\"fn\">W</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toBialgHom</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L60-L60","name":"HopfAlgebraCat.Hom.ext","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.Hom.ext\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>} {<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>} (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.Hom</span> <span class=\"fn\">W</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toBialgHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toBialgHom</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L55-L56","name":"HopfAlgebraCat.of_counit","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_counit\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Coalgebra.counit</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Coalgebra.counit</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L51-L52","name":"HopfAlgebraCat.of_comul","line":51,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_comul\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Coalgebra.comul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Coalgebra.comul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L44-L46","name":"HopfAlgebraCat.of","line":44,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of","doc":"The object in the category of `R`-Hopf algebras associated to an `R`-Hopf algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L43-L43","name":"HopfAlgebraCat.of_instHopfAlgebra","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_instHopfAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_instHopfAlgebra\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of_instHopfAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.instHopfAlgebra</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inferInstance</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L43-L43","name":"HopfAlgebraCat.of_str","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_str\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of_str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.str</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inferInstance</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L43-L43","name":"HopfAlgebraCat.of_α","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_α","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of_α\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">of_α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.of\">HopfAlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.toBundled</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L37-L38","name":"HopfAlgebraCat.instCoeSortType","line":37,"kind":"instance","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.instCoeSortType\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L27-L27","name":"HopfAlgebraCat.instHopfAlgebra","line":27,"kind":"def","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.instHopfAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.instHopfAlgebra\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">instHopfAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toBundled</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L26-L26","name":"HopfAlgebraCat.mk","line":26,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat.mk\"><span class=\"name\">HopfAlgebraCat</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toBundled : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[instHopfAlgebra : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/HopfAlgebra.html#HopfAlgebra\">HopfAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\">toBundled</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\">HopfAlgebraCat</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean#L26-L27","name":"HopfAlgebraCat","line":26,"kind":"structure","docLink":"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat","doc":"The category of `R`-Hopf algebras. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/HopfAlgebraCat/Basic.html#HopfAlgebraCat\"><span class=\"name\">HopfAlgebraCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bundled</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u (v + 1))</div></div>"}]}