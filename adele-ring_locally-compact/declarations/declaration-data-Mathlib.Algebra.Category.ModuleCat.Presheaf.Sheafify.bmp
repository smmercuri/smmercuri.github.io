{"name":"Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify","instances":[{"typeNames":["PresheafOfModules.Sheafify.SMulCandidate"],"name":"PresheafOfModules.Sheafify.instNonemptySMulCandidate","className":"Nonempty"},{"typeNames":["PresheafOfModules.Sheafify.SMulCandidate"],"name":"PresheafOfModules.Sheafify.instSubsingletonSMulCandidate","className":"Subsingleton"},{"typeNames":["PresheafOfModules.Sheafify.SMulCandidate"],"name":"PresheafOfModules.Sheafify.instUniqueSMulCandidate","className":"Unique"},{"typeNames":["PresheafOfModules.Hom.hom"],"name":"PresheafOfModules.instIsLocallyInjectiveAddCommGrpHomToSheafify","className":"CategoryTheory.Presheaf.IsLocallyInjective"},{"typeNames":["PresheafOfModules.Hom.hom"],"name":"PresheafOfModules.instIsLocallySurjectiveAddCommGrpHomToSheafify","className":"CategoryTheory.Presheaf.IsLocallySurjective"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.Sheaf.ChangeOfRings","Mathlib.CategoryTheory.Sites.LocallySurjective"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L368-L378","name":"PresheafOfModules.sheafifyMap","line":368,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyMap","doc":"The morphism of sheaves of modules `sheafify α φ ⟶ sheafify α φ'`\ninduced by morphisms `τ₀ : M₀ ⟶ M₀'` and `τ : A ⟶ A'`\nwhich satisfy `τ₀.hom ≫ φ' = φ ≫ τ.val`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyMap\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sheafifyMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.WEqualsLocallyBijective</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀'</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A'</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ₀ : <span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">M₀'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fac : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">τ₀</span>.hom</span> <span class=\"fn\">φ'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">τ</span>.val</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\">PresheafOfModules.sheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\">PresheafOfModules.sheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L367-L367","name":"PresheafOfModules.sheafifyMap_val_hom","line":367,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyMap_val_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyMap_val_hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sheafifyMap_val_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.WEqualsLocallyBijective</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀'</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A'</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ₀ : <span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">M₀'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fac : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">τ₀</span>.hom</span> <span class=\"fn\">φ'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">τ</span>.val</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyMap\">PresheafOfModules.sheafifyMap</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">φ'</span> <span class=\"fn\">τ₀</span> <span class=\"fn\">τ</span> <span class=\"fn\">fac</span></span>)</span>.val</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">τ</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L350-L354","name":"PresheafOfModules.sheafifyHomEquiv","line":350,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyHomEquiv","doc":"The bijection\n`(sheafify α φ ⟶ F) ≃ (M₀ ⟶ (restrictScalars α).obj ((SheafOfModules.forget _).obj F))`\nwhich is part of the universal property of the sheafification of the presheaf of modules `M₀`,\nfor any sheaf of modules `F`, see `PresheafOfModules.sheafificationAdjunction` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyHomEquiv\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sheafifyHomEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.WEqualsLocallyBijective</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Sheaf.html#SheafOfModules\">SheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\">PresheafOfModules.sheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.html#PresheafOfModules.restrictScalars\">PresheafOfModules.restrictScalars</a> <span class=\"fn\">α</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Sheaf.html#SheafOfModules.forget\">SheafOfModules.forget</a> <span class=\"fn\">R</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L341-L344","name":"PresheafOfModules.comp_sheafifyHomEquiv'_symm_hom","line":341,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.comp_sheafifyHomEquiv'_symm_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.comp_sheafifyHomEquiv'_symm_hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">comp_sheafifyHomEquiv'_symm_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.WEqualsLocallyBijective</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">F</span>.presheaf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.html#PresheafOfModules.restrictScalars\">PresheafOfModules.restrictScalars</a> <span class=\"fn\">α</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyHomEquiv'\">PresheafOfModules.sheafifyHomEquiv'</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">hF</span></span>)</span>.symm</span> <span class=\"fn\">f</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L334-L339","name":"PresheafOfModules.sheafifyHomEquiv'","line":334,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyHomEquiv'","doc":"The bijection `((sheafify α φ).val ⟶ F) ≃ (M₀ ⟶ (restrictScalars α).obj F)` which\nis part of the universal property of the sheafification of the presheaf of modules `M₀`,\nwhen `F` is a presheaf of modules which is a sheaf. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafifyHomEquiv'\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sheafifyHomEquiv'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.WEqualsLocallyBijective</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">F</span>.presheaf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\">PresheafOfModules.sheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span>)</span>.val</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.html#PresheafOfModules.restrictScalars\">PresheafOfModules.restrictScalars</a> <span class=\"fn\">α</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L326-L327","name":"PresheafOfModules.instIsLocallySurjectiveAddCommGrpHomToSheafify","line":326,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.instIsLocallySurjectiveAddCommGrpHomToSheafify","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.instIsLocallySurjectiveAddCommGrpHomToSheafify\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instIsLocallySurjectiveAddCommGrpHomToSheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify\">PresheafOfModules.toSheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L323-L324","name":"PresheafOfModules.instIsLocallyInjectiveAddCommGrpHomToSheafify","line":323,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.instIsLocallyInjectiveAddCommGrpHomToSheafify","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.instIsLocallyInjectiveAddCommGrpHomToSheafify\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instIsLocallyInjectiveAddCommGrpHomToSheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify\">PresheafOfModules.toSheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L317-L321","name":"PresheafOfModules.toSheafify","line":317,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify","doc":"The canonical morphism from a presheaf of modules to its associated sheaf. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">toSheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.html#PresheafOfModules.restrictScalars\">PresheafOfModules.restrictScalars</a> <span class=\"fn\">α</span></span>)</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\">PresheafOfModules.sheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span>)</span>.val</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L316-L316","name":"PresheafOfModules.toSheafify_hom","line":316,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify_hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">toSheafify_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.toSheafify\">PresheafOfModules.toSheafify</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L308-L313","name":"PresheafOfModules.sheafify","line":308,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify","doc":"Assuming `α : R₀ ⟶ R.val` is the sheafification map of a presheaf of rings `R₀`\nand `φ : M₀.presheaf ⟶ A.val` is the sheafification map of the underlying\nsheaf of abelian groups of a presheaf of modules `M₀` over `R₀`, this is\nthe sheaf of modules over `R` which is obtained by endowing the sections of\n`A.val` with a scalar multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.sheafify\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Sheaf.html#SheafOfModules\">SheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L288-L299","name":"PresheafOfModules.Sheafify.map_smul","line":288,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.map_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.map_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">map_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.map</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L279-L286","name":"PresheafOfModules.Sheafify.module","line":279,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.module","doc":"The module structure on the sections of the sheafification of the underlying\npresheaf of abelian groups of a presheaf of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.module\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">module</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L263-L273","name":"PresheafOfModules.Sheafify.mul_smul","line":263,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.mul_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.mul_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">mul_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r'</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r'</span> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L251-L261","name":"PresheafOfModules.Sheafify.add_smul","line":251,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.add_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.add_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">add_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r'</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r'</span> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L238-L249","name":"PresheafOfModules.Sheafify.smul_add","line":238,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul_add\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">smul_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L232-L236","name":"PresheafOfModules.Sheafify.smul_zero","line":232,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul_zero\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">smul_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L226-L230","name":"PresheafOfModules.Sheafify.zero_smul","line":226,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.zero_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.zero_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">zero_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L219-L224","name":"PresheafOfModules.Sheafify.one_smul","line":219,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.one_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.one_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">one_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L214-L217","name":"PresheafOfModules.Sheafify.map_smul_eq","line":214,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.map_smul_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.map_smul_eq\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">map_smul_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">r₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">m₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\">PresheafOfModules.Sheafify.smul</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L212-L212","name":"PresheafOfModules.Sheafify.smul","line":212,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul","doc":"The scalar multiplication on the sheafification of a presheaf of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L209-L209","name":"PresheafOfModules.Sheafify.smulCandidate","line":209,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smulCandidate","doc":"The (unique) element in `SMulCandidate α φ r m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.smulCandidate\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">smulCandidate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L205-L206","name":"PresheafOfModules.Sheafify.instUniqueSMulCandidate","line":205,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instUniqueSMulCandidate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instUniqueSMulCandidate\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">instUniqueSMulCandidate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L193-L203","name":"PresheafOfModules.Sheafify.instSubsingletonSMulCandidate","line":193,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instSubsingletonSMulCandidate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instSubsingletonSMulCandidate\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">instSubsingletonSMulCandidate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L172-L191","name":"PresheafOfModules.Sheafify.instNonemptySMulCandidate","line":172,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instNonemptySMulCandidate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.instNonemptySMulCandidate\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">instNonemptySMulCandidate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallySurjective.html#CategoryTheory.Presheaf.IsLocallySurjective\">CategoryTheory.Presheaf.IsLocallySurjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L147-L170","name":"PresheafOfModules.Sheafify.SMulCandidate.mk'","line":147,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.mk'","doc":"Constructor for `SMulCandidate`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.mk'\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">SMulCandidate</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">CategoryTheory.Sieve</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.sieves</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">S</span>.arrows</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">S</span>.arrows</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r₀</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>)</span></span>)</span>.IsAmalgamation</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m₀</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span></span>)</span>.IsAmalgamation</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r₀</span>.smul</span> <span class=\"fn\">m₀</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span></span>)</span>.IsAmalgamation</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L143-L143","name":"PresheafOfModules.Sheafify.SMulCandidate.h","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.h","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.h\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">SMulCandidate</span>.<span class=\"name\">h</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">r₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">m₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">self</span>.x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L142-L142","name":"PresheafOfModules.Sheafify.SMulCandidate.x","line":142,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.x","doc":"The candidate for the scalar product `r • m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.x\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">SMulCandidate</span>.<span class=\"name\">x</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L140-L140","name":"PresheafOfModules.Sheafify.SMulCandidate.mk","line":140,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate.mk\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">SMulCandidate</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ ⦃<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">r₀</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">r₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">r</span></span></span> →\n    <span class=\"fn\">∀ (<span class=\"fn\">m₀</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">m₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span></span>)</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\">PresheafOfModules.Sheafify.SMulCandidate</a> <span class=\"fn\">α</span> <span class=\"fn\">φ</span> <span class=\"fn\">r</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L140-L144","name":"PresheafOfModules.Sheafify.SMulCandidate","line":140,"kind":"structure","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate","doc":"Assuming `α : R₀ ⟶ R.val` is the sheafification map of a presheaf of rings `R₀`\nand `φ : M₀.presheaf ⟶ A.val` is the sheafification map of the underlying\nsheaf of abelian groups of a presheaf of modules `M₀` over `R₀`, then given\n`r : R.val.obj X` and `m : A.val.obj X`, this structure contains the data\nof `x : A.val.obj X` along with the property which makes `x` a good candidate\nfor the definition of the scalar multiplication `r • m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.SMulCandidate\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">SMulCandidate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">R</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">A</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.val</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L87-L113","name":"CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul","line":87,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">FamilyOfElements</span>.<span class=\"name\">isCompatible_map_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSeparated\">CategoryTheory.Presheaf.IsSeparated</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">CategoryTheory.Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r₀</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>)</span></span>)</span>.IsAmalgamation</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m₀</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span></span>)</span>.IsAmalgamation</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r₀</span>.smul</span> <span class=\"fn\">m₀</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span></span>)</span>.Compatible</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L74-L85","name":"CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul_aux","line":74,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.isCompatible_map_smul_aux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">FamilyOfElements</span>.<span class=\"name\">isCompatible_map_smul_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSeparated\">CategoryTheory.Presheaf.IsSeparated</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">r₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.op</span></span>)</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span> <span class=\"fn\">r₀'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.op</span> <span class=\"fn\"><span class=\"fn\">g</span>.op</span></span>)</span></span>)</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">m₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.op</span></span>)</span> <span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span> <span class=\"fn\">m₀'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.op</span> <span class=\"fn\"><span class=\"fn\">g</span>.op</span></span>)</span></span>)</span> <span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.map</span> <span class=\"fn\"><span class=\"fn\">g</span>.op</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Z</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀'</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L59-L72","name":"PresheafOfModules.Sheafify.app_eq_of_isLocallyInjective","line":59,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.app_eq_of_isLocallyInjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#PresheafOfModules.Sheafify.app_eq_of_isLocallyInjective\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Sheafify</span>.<span class=\"name\">app_eq_of_isLocallyInjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">CategoryTheory.GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\">R₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/LocallyInjective.html#CategoryTheory.Presheaf.IsLocallyInjective\">CategoryTheory.Presheaf.IsLocallyInjective</a> <span class=\"fn\">J</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSeparated\">CategoryTheory.Presheaf.IsSeparated</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r₀' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₀</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₀' : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₀</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">r₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">r₀'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">m₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">m₀'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r₀'</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean#L44-L45","name":"CategoryTheory.Presieve.FamilyOfElements.smul","line":44,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.smul","doc":"The scalar multiplication of family of elements of a presheaf of modules `M` over `R`\nby a family of elements of `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.html#CategoryTheory.Presieve.FamilyOfElements.smul\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">FamilyOfElements</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">CategoryTheory.Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">CategoryTheory.Presieve.FamilyOfElements</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>)</span> <span class=\"fn\">P</span></span></div></div>"}]}