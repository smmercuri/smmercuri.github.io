{"name":"Mathlib.Algebra.Category.ModuleCat.Presheaf","instances":[{"typeNames":["Prefunctor.map"],"name":"PresheafOfModules.instRingHomIdαRingObjOppositeRingCatMapId","className":"RingHomId"},{"typeNames":["Prefunctor.map","Prefunctor.map","Prefunctor.map"],"name":"PresheafOfModules.instRingHomCompTripleαRingObjOppositeRingCatMapComp","className":"RingHomCompTriple"},{"typeNames":["PresheafOfModules"],"name":"PresheafOfModules.instCategory","className":"CategoryTheory.Category"},{"typeNames":["Quiver.Hom"],"name":"PresheafOfModules.Hom.instZeroHom","className":"Zero"},{"typeNames":["Quiver.Hom"],"name":"PresheafOfModules.Hom.instAddHom","className":"Add"},{"typeNames":["Quiver.Hom"],"name":"PresheafOfModules.Hom.instSubHom","className":"Sub"},{"typeNames":["Quiver.Hom"],"name":"PresheafOfModules.Hom.instNegHom","className":"Neg"},{"typeNames":["Quiver.Hom"],"name":"PresheafOfModules.Hom.instAddCommGroupHom","className":"AddCommGroup"},{"typeNames":["PresheafOfModules"],"name":"PresheafOfModules.Hom.instPreadditive","className":"CategoryTheory.Preadditive"},{"typeNames":["PresheafOfModules.toPresheaf"],"name":"PresheafOfModules.instAdditiveFunctorOppositeAddCommGrpToPresheaf","className":"CategoryTheory.Functor.Additive"},{"typeNames":["PresheafOfModules.toPresheaf"],"name":"PresheafOfModules.instFaithfulFunctorOppositeAddCommGrpToPresheaf","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["PresheafOfModules.evaluation"],"name":"PresheafOfModules.instAdditiveModuleCatαRingObjOppositeRingCatEvaluation","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"CorePresheafOfModules.instModuleαRingObjOppositeRingCatAddCommGroupAddCommGrpPresheaf","className":"Module"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.ChangeOfRings","Mathlib.Algebra.Category.Ring.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L563-L566","name":"PresheafOfModules.forgetToPresheafModuleCat","line":563,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat","doc":"The forgetful functor from presheaves of modules over a presheaf of rings `R` to presheaves of\n`R(X)`-modules where `X` is an initial object.\n\nThe functor is implemented as, on object level `M ↦ (c ↦ M(c))` where the `R(X)`-module structure\non `M(c)` is given by restriction of scalars along the unique morphism `R(c) ⟶ R(X)`; and on\nmorphism level `(f : M ⟶ N) ↦ (c ↦ f(c))`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L562-L562","name":"PresheafOfModules.forgetToPresheafModuleCat_map","line":562,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat_map\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat\">PresheafOfModules.forgetToPresheafModuleCat</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatMap\">PresheafOfModules.forgetToPresheafModuleCatMap</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L562-L562","name":"PresheafOfModules.forgetToPresheafModuleCat_obj","line":562,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat_obj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCat_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCat\">PresheafOfModules.forgetToPresheafModuleCat</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span></span>)</span>.obj</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\">PresheafOfModules.forgetToPresheafModuleCatObj</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L543-L552","name":"PresheafOfModules.forgetToPresheafModuleCatMap","line":543,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatMap","doc":"Implementation of the functor `PresheafOfModules R ⥤ Cᵒᵖ ⥤ ModuleCat (R.obj X)`\nwhen `X` is initial.\n\nThe functor is implemented as, on object level `M ↦ (c ↦ M(c))` where the `R(X)`-module structure\non `M(c)` is given by restriction of scalars along the unique morphism `R(c) ⟶ R(X)`; and on\nmorphism level `(f : M ⟶ N) ↦ (c ↦ f(c))`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatMap\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCatMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\">PresheafOfModules.forgetToPresheafModuleCatObj</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">M</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\">PresheafOfModules.forgetToPresheafModuleCatObj</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L518-L533","name":"PresheafOfModules.forgetToPresheafModuleCatObj","line":518,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj","doc":"Implementation of the functor `PresheafOfModules R ⥤ Cᵒᵖ ⥤ ModuleCat (R.obj X)`\nwhen `X` is initial.\n\nThe functor is implemented as, on object level `M ↦ (c ↦ M(c))` where the `R(X)`-module structure\non `M(c)` is given by restriction of scalars along the unique morphism `R(c) ⟶ R(X)`; and on\nmorphism level `(f : M ⟶ N) ↦ (c ↦ f(c))`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCatObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L517-L517","name":"PresheafOfModules.forgetToPresheafModuleCatObj_obj","line":517,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj_obj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCatObj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\">PresheafOfModules.forgetToPresheafModuleCatObj</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">M</span></span>)</span>.obj</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hX</span>.to</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L517-L517","name":"PresheafOfModules.forgetToPresheafModuleCatObj_map_apply","line":517,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj_map_apply\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">forgetToPresheafModuleCatObj_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₁ : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₂ : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hX</span>.to</span> <span class=\"fn\">c</span></span>)</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">c</span></span>)</span></span></span>)</span> <span class=\"fn\">c₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.forgetToPresheafModuleCatObj\">PresheafOfModules.forgetToPresheafModuleCatObj</a> <span class=\"fn\">X</span> <span class=\"fn\">hX</span> <span class=\"fn\">M</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L483-L498","name":"PresheafOfModules.unitHomEquiv","line":483,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitHomEquiv","doc":"The bijection `(unit R ⟶ M) ≃ M.sections` for `M : PresheafOfModules R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitHomEquiv\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">unitHomEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit\">PresheafOfModules.unit</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">M</span>.sections</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L482-L482","name":"PresheafOfModules.unitHomEquiv_apply_coe","line":482,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitHomEquiv_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitHomEquiv_apply_coe\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">unitHomEquiv_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit\">PresheafOfModules.unit</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.unitHomEquiv</span> <span class=\"fn\">f</span></span>)</span></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L478-L479","name":"PresheafOfModules.sectionsMap_id","line":478,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_id\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMap_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\">PresheafOfModules.sectionsMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L474-L475","name":"PresheafOfModules.sectionsMap_comp","line":474,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_comp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\">PresheafOfModules.sectionsMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\">PresheafOfModules.sectionsMap</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\">PresheafOfModules.sectionsMap</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L469-L471","name":"PresheafOfModules.sectionsMap","line":469,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap","doc":"The map `M.sections → N.sections` induced by a morphisms `M ⟶ N` of presheaves of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.sections</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L468-L468","name":"PresheafOfModules.sectionsMap_coe","line":468,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap_coe\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMap_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMap\">PresheafOfModules.sectionsMap</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L463-L465","name":"PresheafOfModules.sections_ext","line":463,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections_ext\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sections_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L457-L460","name":"PresheafOfModules.sectionsMk","line":457,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMk","doc":"Constructor for sections of a presheaf of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMk\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">Y</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.sections</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L456-L456","name":"PresheafOfModules.sectionsMk_coe","line":456,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMk_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMk_coe\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sectionsMk_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">Y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sectionsMk\">PresheafOfModules.sectionsMk</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span>)</span></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L452-L453","name":"PresheafOfModules.sections_property","line":452,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections_property","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections_property\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sections_property</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">M</span>.sections</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L449-L449","name":"PresheafOfModules.sections","line":449,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections","doc":"The type of sections of a presheaf of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.sections\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">sections</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L443-L444","name":"PresheafOfModules.unit_map_one","line":443,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit_map_one\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">unit_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit\">PresheafOfModules.unit</a> <span class=\"fn\">R</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L441-L441","name":"PresheafOfModules.unit","line":441,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit","doc":"The obvious free presheaf of modules of rank `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unit\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L432-L438","name":"PresheafOfModules.unitCore","line":432,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitCore","doc":"Auxiliary definition for `unit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.unitCore\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">unitCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L422-L423","name":"BundledCorePresheafOfModules.restrictionApp_toPresheafOfModules","line":422,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.restrictionApp_toPresheafOfModules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.restrictionApp_toPresheafOfModules\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">restrictionApp_toPresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">M</span>.toPresheafOfModules</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L418-L419","name":"BundledCorePresheafOfModules.toPresheafOfModules_presheaf_map_apply","line":418,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules_presheaf_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules_presheaf_map_apply\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules_presheaf_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toPresheafOfModules</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L414-L415","name":"BundledCorePresheafOfModules.toPresheafOfModules_obj","line":414,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules_obj\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toPresheafOfModules</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L410-L411","name":"BundledCorePresheafOfModules.toPresheafOfModules","line":410,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules","doc":"Constructor for `PresheafOfModules R` based on a collection of objects\nof type `ModuleCat (R.obj X)` for all `X`, and restriction maps expressed\nas linear maps to restriction of scalars, see\nthe structure `BundledCorePresheafOfModules`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toPresheafOfModules\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L402-L404","name":"BundledCorePresheafOfModules.toCorePresheafOfModules","line":402,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toCorePresheafOfModules","doc":"The obvious map `BundledCorePresheafOfModules R → CorePresheafOfModules R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.toCorePresheafOfModules\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">toCorePresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L390-L390","name":"BundledCorePresheafOfModules.map_comp","line":390,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map_comp","doc":"`map` is compatible with the composition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map_comp\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">g</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsComp'\">ModuleCat.restrictScalarsComp'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L386-L386","name":"BundledCorePresheafOfModules.map_id","line":386,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map_id","doc":"`map` is compatible with the identities "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map_id\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsId'\">ModuleCat.restrictScalarsId'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L384-L384","name":"BundledCorePresheafOfModules.map","line":384,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map","doc":"the restriction maps as linear maps to restriction of scalars "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.map\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L382-L382","name":"BundledCorePresheafOfModules.obj","line":382,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.obj","doc":"the datum of a `ModuleCat (R.obj X)` for each object in `Cᵒᵖ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.obj\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L380-L380","name":"BundledCorePresheafOfModules.mk","line":380,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules.mk\"><span class=\"name\">BundledCorePresheafOfModules</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">Y</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_id : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsId'\">ModuleCat.restrictScalarsId'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span>\n  <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3767\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_comp : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">f</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">g</span></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsComp'\">ModuleCat.restrictScalarsComp'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span>\n                  <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span></span></span></span>)</span>\n  <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3768\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\">BundledCorePresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L380-L393","name":"BundledCorePresheafOfModules","line":380,"kind":"structure","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules","doc":"This structure contains the data and axioms in order to\nproduce a `PresheafOfModules R` from a collection of objects\nof type `ModuleCat (R.obj X)` for all `X`, and restriction\nmaps expressed as linear maps to restriction of scalars.\n(See the constructor `PresheafOfModules.mk''`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#BundledCorePresheafOfModules\"><span class=\"name\">BundledCorePresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u u₁) (v + 1)) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L369-L370","name":"CorePresheafOfModules.toPresheafOfModules_presheaf_map_apply","line":369,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules_presheaf_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules_presheaf_map_apply\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules_presheaf_map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toPresheafOfModules</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L365-L366","name":"CorePresheafOfModules.toPresheafOfModules_obj","line":365,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules_obj\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toPresheafOfModules</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L361-L362","name":"CorePresheafOfModules.toPresheafOfModules","line":361,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules","doc":"Constructor for `PresheafOfModules R` based on a collection of types\nequipped with module structures over the various rings `R.obj X`, see\nthe structure `CorePresheafOfModules`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.toPresheafOfModules\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">toPresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L356-L356","name":"CorePresheafOfModules.instModuleαRingObjOppositeRingCatAddCommGroupAddCommGrpPresheaf","line":356,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.instModuleαRingObjOppositeRingCatAddCommGroupAddCommGrpPresheaf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.instModuleαRingObjOppositeRingCatAddCommGroupAddCommGrpPresheaf\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">instModuleαRingObjOppositeRingCatAddCommGroupAddCommGrpPresheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L352-L354","name":"CorePresheafOfModules.presheaf","line":352,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf","doc":"The presheaf of abelian groups attached to a `CorePresheafOfModules R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">presheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L351-L351","name":"CorePresheafOfModules.presheaf_obj","line":351,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf_obj\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">presheaf_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.of\">AddCommGrp.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L351-L351","name":"CorePresheafOfModules.presheaf_map","line":351,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.presheaf_map\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">presheaf_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.ofHom\">AddCommGrp.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span>.toAddMonoidHom</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L334-L334","name":"CorePresheafOfModules.map_comp","line":334,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map_comp","doc":"`map` is compatible with the composition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map_comp\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L332-L332","name":"CorePresheafOfModules.map_id","line":332,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map_id","doc":"`map` is compatible with the identities "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map_id\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L330-L330","name":"CorePresheafOfModules.map","line":330,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map","doc":"the semi-linear restriction maps "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.map\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₛₗ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L328-L328","name":"CorePresheafOfModules.module","line":328,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.module","doc":"the module structure on the types `obj X` over the various rings `R.obj X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.module\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">module</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L326-L326","name":"CorePresheafOfModules.addCommGroup","line":326,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.addCommGroup","doc":"the abelian group structure on the types `obj X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.addCommGroup\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L324-L324","name":"CorePresheafOfModules.obj","line":324,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.obj","doc":"the datum of a type for each object in `Cᵒᵖ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.obj\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L322-L322","name":"CorePresheafOfModules.mk","line":322,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules.mk\"><span class=\"name\">CorePresheafOfModules</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addCommGroup : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3201\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(module : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3202\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₛₗ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">Y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_id : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3203\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_comp : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">X</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span>)</span>\n  <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.3204\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\">CorePresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L322-L335","name":"CorePresheafOfModules","line":322,"kind":"structure","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules","doc":"This structure contains the data and axioms in order to\nproduce a `PresheafOfModules R` from a collection of types\nequipped with module structures over the various rings `R.obj X`.\n(See the constructor `PresheafOfModules.mk'`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#CorePresheafOfModules\"><span class=\"name\">CorePresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u u₁) (v + 1)) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L306-L311","name":"PresheafOfModules.Hom.mk''","line":306,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk''","doc":"A constructor for morphisms in `PresheafOfModules R` that is based on the data\nof a family of linear maps over the various rings `R.obj X`, and for which the\nnaturality condition is stated using the restriction of scalars. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk''\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(naturality : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">P</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">Q</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L299-L299","name":"PresheafOfModules.Hom.mk'_app","line":299,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk'_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk'_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk'_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(naturality : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk'\">PresheafOfModules.Hom.mk'</a> <span class=\"fn\">app</span> <span class=\"fn\">naturality</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L292-L296","name":"PresheafOfModules.Hom.mk'","line":292,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk'","doc":"A constructor for morphisms in `PresheafOfModules R` that is based on the data\nof a family of linear maps over the various rings `R.obj X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk'\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(naturality : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L275-L279","name":"PresheafOfModules.restrictionApp_comp","line":275,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_comp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">M</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">g</span> <span class=\"fn\">M</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsComp'\">ModuleCat.restrictScalarsComp'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">Z</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L271-L273","name":"PresheafOfModules.restrictionApp_id","line":271,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_id\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalarsId'\">ModuleCat.restrictScalarsId'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L263-L267","name":"PresheafOfModules.restrictionApp_naturality","line":263,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_naturality\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">M</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">φ</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">φ</span> <span class=\"fn\">X</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L262-L262","name":"PresheafOfModules.restrictionApp_naturality_assoc","line":262,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_naturality_assoc\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">M</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">φ</span> <span class=\"fn\">Y</span></span>)</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">φ</span> <span class=\"fn\">X</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L253-L258","name":"PresheafOfModules.restriction","line":253,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restriction","doc":"The restriction natural transformation on presheaves of modules, considered as linear maps\nto restriction of scalars. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restriction\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\">PresheafOfModules.evaluation</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\">PresheafOfModules.evaluation</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>)</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L252-L252","name":"PresheafOfModules.restriction_app","line":252,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restriction_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restriction_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restriction_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restriction\">PresheafOfModules.restriction</a> <span class=\"fn\">R</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L244-L246","name":"PresheafOfModules.restrictionApp_apply","line":244,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp_apply\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\">PresheafOfModules.restrictionApp</a> <span class=\"fn\">f</span> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L240-L242","name":"PresheafOfModules.restrictionApp","line":240,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp","doc":"Given a presheaf of modules `M` on a category `C` and `f : X ⟶ Y` in `Cᵒᵖ`, this\nis the restriction map `M.obj X ⟶ M.obj Y`, considered as a linear map to\nthe restriction of scalars of `M.obj Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.restrictionApp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">restrictionApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.html#ModuleCat.restrictScalars\">ModuleCat.restrictScalars</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L233-L233","name":"PresheafOfModules.instAdditiveModuleCatαRingObjOppositeRingCatEvaluation","line":233,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instAdditiveModuleCatαRingObjOppositeRingCatEvaluation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instAdditiveModuleCatαRingObjOppositeRingCatEvaluation\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instAdditiveModuleCatαRingObjOppositeRingCatEvaluation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\">PresheafOfModules.evaluation</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.Additive</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L229-L231","name":"PresheafOfModules.evaluation","line":229,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation","doc":"Evaluation on an object `X` gives a functor\n`PresheafOfModules R ⥤ ModuleCat (R.obj X)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">evaluation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L228-L228","name":"PresheafOfModules.evaluation_map","line":228,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation_map\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">evaluation_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\">PresheafOfModules.evaluation</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L228-L228","name":"PresheafOfModules.evaluation_obj","line":228,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation_obj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">evaluation_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.evaluation\">PresheafOfModules.evaluation</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.obj</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L217-L222","name":"PresheafOfModules.instFaithfulFunctorOppositeAddCommGrpToPresheaf","line":217,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instFaithfulFunctorOppositeAddCommGrpToPresheaf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instFaithfulFunctorOppositeAddCommGrpToPresheaf\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instFaithfulFunctorOppositeAddCommGrpToPresheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf\">PresheafOfModules.toPresheaf</a> <span class=\"fn\">R</span></span>)</span>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L215-L215","name":"PresheafOfModules.instAdditiveFunctorOppositeAddCommGrpToPresheaf","line":215,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instAdditiveFunctorOppositeAddCommGrpToPresheaf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instAdditiveFunctorOppositeAddCommGrpToPresheaf\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instAdditiveFunctorOppositeAddCommGrpToPresheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf\">PresheafOfModules.toPresheaf</a> <span class=\"fn\">R</span></span>)</span>.Additive</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L211-L213","name":"PresheafOfModules.toPresheaf_map_app","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf_map_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">toPresheaf_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf\">PresheafOfModules.toPresheaf</a> <span class=\"fn\">R</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span>)</span>.toAddMonoidHom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L204-L206","name":"PresheafOfModules.toPresheaf","line":204,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf","doc":"The functor from presheaves of modules over a specified presheaf of rings,\nto presheaves of abelian groups.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">toPresheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L203-L203","name":"PresheafOfModules.toPresheaf_obj","line":203,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf_obj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">toPresheaf_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.toPresheaf\">PresheafOfModules.toPresheaf</a> <span class=\"fn\">R</span></span>)</span>.obj</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L193-L196","name":"PresheafOfModules.naturality_apply","line":193,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.naturality_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.naturality_apply\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">naturality_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L187-L189","name":"PresheafOfModules.Hom.instPreadditive","line":187,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instPreadditive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instPreadditive\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instPreadditive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L177-L185","name":"PresheafOfModules.Hom.instAddCommGroupHom","line":177,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instAddCommGroupHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instAddCommGroupHom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instAddCommGroupHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L175-L175","name":"PresheafOfModules.Hom.neg_app","line":175,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.neg_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.neg_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">neg_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L169-L172","name":"PresheafOfModules.Hom.instNegHom","line":169,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instNegHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instNegHom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instNegHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L167-L167","name":"PresheafOfModules.Hom.sub_app","line":167,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.sub_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.sub_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">sub_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L161-L164","name":"PresheafOfModules.Hom.instSubHom","line":161,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instSubHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instSubHom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instSubHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L159-L159","name":"PresheafOfModules.Hom.add_app","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.add_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.add_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">add_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L154-L156","name":"PresheafOfModules.Hom.instAddHom","line":154,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instAddHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instAddHom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L150-L150","name":"PresheafOfModules.Hom.zero_app","line":150,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.zero_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.zero_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">zero_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">0</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L143-L145","name":"PresheafOfModules.Hom.instZeroHom","line":143,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instZeroHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.instZeroHom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instZeroHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L137-L141","name":"PresheafOfModules.Hom.ext","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.ext\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L133-L134","name":"PresheafOfModules.Hom.comp_app","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span></span> ∘ₗ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\">PresheafOfModules.Hom.app</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L128-L130","name":"PresheafOfModules.Hom.app","line":128,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app","doc":"The `(X : Cᵒᵖ)`-component of morphism between presheaves of modules\nover a presheaf of rings `R`, as an `R.obj X`-linear map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.app\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L123-L123","name":"PresheafOfModules.Hom.comp_hom","line":123,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\"><span class=\"fn\">g</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L122-L122","name":"PresheafOfModules.Hom.comp_hom_assoc","line":122,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp_hom_assoc\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span>.hom</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">g</span>.hom</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L120-L120","name":"PresheafOfModules.Hom.id_hom","line":120,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.id_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.id_hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">P</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L109-L112","name":"PresheafOfModules.instCategory","line":109,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instCategory\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max u₁ u_1, max (max (max u u₁) v₁) (u_1 + 1)}</a>                                            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L103-L105","name":"PresheafOfModules.Hom.comp","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp","doc":"Composition of morphisms of presheaves of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.comp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R✝</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.Hom</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L98-L100","name":"PresheafOfModules.Hom.id","line":98,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.id","doc":"The identity morphism on a presheaf of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.id\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L93-L93","name":"PresheafOfModules.Hom.map_smul","line":93,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.map_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.map_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L92-L92","name":"PresheafOfModules.Hom.hom","line":92,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Q</span>.presheaf</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L91-L91","name":"PresheafOfModules.Hom.mk","line":91,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom.mk\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Q</span>.presheaf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_smul : <span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span>.app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span>.app</span> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Hom</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L91-L93","name":"PresheafOfModules.Hom","line":91,"kind":"structure","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom","doc":"A morphism of presheaves of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.Hom\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L85-L88","name":"PresheafOfModules.map_comp","line":85,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_comp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">g</span></span>)</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L79-L82","name":"PresheafOfModules.map_id","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_id\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">LinearMap.id'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L74-L76","name":"PresheafOfModules.instRingHomCompTripleαRingObjOppositeRingCatMapComp","line":74,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instRingHomCompTripleαRingObjOppositeRingCatMapComp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instRingHomCompTripleαRingObjOppositeRingCatMapComp\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instRingHomCompTripleαRingObjOppositeRingCatMapComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CompTypeclasses.html#RingHomCompTriple\">RingHomCompTriple</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L71-L72","name":"PresheafOfModules.instRingHomIdαRingObjOppositeRingCatMapId","line":71,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instRingHomIdαRingObjOppositeRingCatMapId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.instRingHomIdαRingObjOppositeRingCatMapId\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">instRingHomIdαRingObjOppositeRingCatMapId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CompTypeclasses.html#RingHomId\">RingHomId</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L67-L69","name":"PresheafOfModules.map_apply","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_apply\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L62-L65","name":"PresheafOfModules.map","line":62,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map","doc":"If `P` is a presheaf of modules over a presheaf of rings `R`, both over some category `C`,\nand `f : X ⟶ Y` is a morphism in `Cᵒᵖ`, we construct the `R.map f`-semilinear map\nfrom the `R.obj X`-module `P.presheaf.obj X` to the `R.obj Y`-module `P.presheaf.obj Y`.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₛₗ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L54-L55","name":"PresheafOfModules.obj","line":54,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.obj","doc":"The bundled module over an object `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.obj\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L44-L44","name":"PresheafOfModules.map_smul","line":44,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.map_smul\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">map_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L43-L43","name":"PresheafOfModules.module","line":43,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.module","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.module\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">module</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L42-L42","name":"PresheafOfModules.presheaf","line":42,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.presheaf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.presheaf\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">presheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L41-L41","name":"PresheafOfModules.mk","line":41,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules.mk\"><span class=\"name\">PresheafOfModules</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(presheaf : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(module : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span>)</span> <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.18\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_smul : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">presheaf</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span></span></span></span>)</span>\n  <a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#_auto._@.Mathlib.Algebra.Category.ModuleCat.Presheaf._hyg.19\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\">PresheafOfModules</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/ModuleCat/Presheaf.lean#L41-L45","name":"PresheafOfModules","line":41,"kind":"structure","docLink":"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules","doc":"A presheaf of modules over a given presheaf of rings,\ndescribed as a presheaf of abelian groups, and the extra data of the action at each object,\nand a condition relating functoriality and scalar multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Presheaf.html#PresheafOfModules\"><span class=\"name\">PresheafOfModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#RingCat\">RingCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u u₁) (v + 1)) v₁)</div></div>"}]}