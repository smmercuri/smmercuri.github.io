{"name":"Mathlib.Algebra.Category.MonCat.Adjunctions","instances":[{"typeNames":["AddMonCat","AddSemigrp"],"name":"AddMonCat.hasForgetToAddSemigroup","className":"CategoryTheory.HasForget₂"},{"typeNames":["MonCat","Semigrp"],"name":"MonCat.hasForgetToSemigroup","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget"],"name":"MonCat.instIsRightAdjointForget","className":"CategoryTheory.Functor.IsRightAdjoint"}],"imports":["Init","Mathlib.Algebra.Category.MonCat.Basic","Mathlib.Algebra.Category.Semigrp.Basic","Mathlib.Algebra.Group.WithOne.Basic","Mathlib.Algebra.FreeMonoid.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L73-L74","name":"MonCat.instIsRightAdjointForget","line":73,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.instIsRightAdjointForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.instIsRightAdjointForget\"><span class=\"name\">MonCat</span>.<span class=\"name\">instIsRightAdjointForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span>)</span>.IsRightAdjoint</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L68-L71","name":"MonCat.adj","line":68,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adj","doc":"The free-forgetful adjunction for monoids. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adj\"><span class=\"name\">MonCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free\">MonCat.free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L61-L65","name":"MonCat.free","line":61,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free","doc":"The free functor `Type u ⥤ MonCat` sending a type `X` to the free monoid on `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free\"><span class=\"name\">MonCat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L47-L58","name":"MonCat.adjoinOneAdj","line":47,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOneAdj","doc":"The `adjoinOne`-forgetful adjunction from `Semigrp` to `MonCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOneAdj\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOneAdj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">MonCat.adjoinOne</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L46-L46","name":"AddMonCat.adjoinZeroAdj.proof_1","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZeroAdj</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span>)</span>.obj</span> <span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>) (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">WithZero.lift</span>.symm</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>)</span>.symm</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">AddMonCat.adjoinZero</a>.map</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>) (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">WithZero.lift</span>.symm</span></span>)</span> <span class=\"fn\">T</span> <span class=\"fn\">M</span></span>)</span>.symm</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L46-L46","name":"AddMonCat.adjoinZeroAdj","line":46,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj","doc":"The `adjoinZero`-forgetful adjunction from `AddSemigrp` to `AddMonCat`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZeroAdj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">AddMonCat.adjoinZero</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L46-L46","name":"AddMonCat.adjoinZeroAdj.proof_2","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZeroAdj</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y' : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">AddMonCat.adjoinZero</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>) (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">WithZero.lift</span>.symm</span></span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>) (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><span class=\"fn\">WithZero.lift</span>.symm</span></span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span>)</span>.map</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L40-L43","name":"MonCat.hasForgetToSemigroup","line":40,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.hasForgetToSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.hasForgetToSemigroup\"><span class=\"name\">MonCat</span>.<span class=\"name\">hasForgetToSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L39-L39","name":"AddMonCat.hasForgetToAddSemigroup","line":39,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">hasForgetToAddSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L39-L39","name":"AddMonCat.hasForgetToAddSemigroup.proof_3","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_3\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">hasForgetToAddSemigroup</span>.<span class=\"name\">proof_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span>, <span class=\"fn\">map_id</span> := <span class=\"fn\">⋯</span>,\n        <span class=\"fn\">map_comp</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span>, <span class=\"fn\">map_id</span> := <span class=\"fn\">⋯</span>,\n        <span class=\"fn\">map_comp</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L39-L39","name":"AddMonCat.hasForgetToAddSemigroup.proof_2","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">hasForgetToAddSemigroup</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span> }</span>.map</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span> }</span>.map</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span> }</span>.map</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L39-L39","name":"AddMonCat.hasForgetToAddSemigroup.proof_1","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">hasForgetToAddSemigroup</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span> }</span>.map</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">M</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.of\">AddSemigrp.of</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a>} =&gt; <span class=\"fn\">AddMonoidHom.toAddHom</span></span> }</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L33-L37","name":"MonCat.adjoinOne","line":33,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne","doc":"The functor of adjoining a neutral element `one` to a semigroup.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"AddMonCat.adjoinZero_map","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_map\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddHom\">AddHom</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">AddMonCat.adjoinZero</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"AddMonCat.adjoinZero_obj","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_obj\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">AddMonCat.adjoinZero</a>.obj</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat.of\">AddMonCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"MonCat.adjoinOne_map","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_map\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MulHom\">→ₙ*</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">MonCat.adjoinOne</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithOne.map\">WithOne.map</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"MonCat.adjoinOne_obj","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_obj\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">MonCat.adjoinOne</a>.obj</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithOne\">WithOne</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"AddMonCat.adjoinZero.proof_2","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero.proof_2\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero</span>.<span class=\"name\">proof_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddHom\">AddHom</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddHom\">AddHom</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span> <span class=\"fn\">↑<span class=\"fn\">Z</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">g</span></span>)</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"AddMonCat.adjoinZero.proof_1","line":32,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero.proof_1\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddHom.id\">AddHom.id</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L32-L32","name":"AddMonCat.adjoinZero","line":32,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero","doc":"The functor of adjoining a neutral element `zero` to a semigroup"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span></div></div>"}]}