{"name":"Mathlib.Algebra.Group.Ext","instances":[],"imports":["Init","Mathlib.Algebra.Group.Hom.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L154-L155","name":"CommGroup.ext","line":154,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext\"><span class=\"name\">CommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Mul.mul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Mul.mul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L153-L153","name":"AddCommGroup.ext","line":153,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Add.add</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Add.add</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L150-L151","name":"CommGroup.toGroup_injective","line":150,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective\"><span class=\"name\">CommGroup</span>.<span class=\"name\">toGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup.toGroup\">CommGroup.toGroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L149-L149","name":"AddCommGroup.toAddGroup_injective","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">toAddGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toAddGroup\">AddCommGroup.toAddGroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L139-L147","name":"Group.ext","line":139,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.ext\"><span class=\"name\">Group</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Mul.mul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Mul.mul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L138-L138","name":"AddGroup.ext","line":138,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext\"><span class=\"name\">AddGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Add.add</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Add.add</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L135-L136","name":"Group.toDivInvMonoid_injective","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective\"><span class=\"name\">Group</span>.<span class=\"name\">toDivInvMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#Group.toDivInvMonoid\">Group.toDivInvMonoid</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L134-L134","name":"AddGroup.toSubNegAddMonoid_injective","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective\"><span class=\"name\">AddGroup</span>.<span class=\"name\">toSubNegAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubNegMonoid\">AddGroup.toSubNegMonoid</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L113-L132","name":"DivInvMonoid.ext","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext\"><span class=\"name\">DivInvMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\"><span class=\"fn\">Inv.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Inv.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L112-L112","name":"SubNegMonoid.ext","line":112,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext\"><span class=\"name\">SubNegMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\"><span class=\"fn\">Neg.neg</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Neg.neg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L107-L110","name":"CancelCommMonoid.ext","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L106-L106","name":"AddCancelCommMonoid.ext","line":106,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L99-L104","name":"CancelCommMonoid.toCommMonoid_injective","line":99,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">toCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid.toCommMonoid\">CancelCommMonoid.toCommMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L98-L98","name":"AddCancelCommMonoid.toAddCommMonoid_injective","line":98,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">toAddCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCommMonoid\">AddCancelCommMonoid.toAddCommMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L93-L96","name":"CancelMonoid.ext","line":93,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L92-L92","name":"AddCancelMonoid.ext","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L87-L90","name":"CancelMonoid.toLeftCancelMonoid_injective","line":87,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">toLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid.toLeftCancelMonoid\">CancelMonoid.toLeftCancelMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L86-L86","name":"AddCancelMonoid.toAddLeftCancelMonoid_injective","line":86,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">toAddLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.toAddLeftCancelMonoid\">AddCancelMonoid.toAddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L81-L84","name":"RightCancelMonoid.ext","line":81,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L80-L80","name":"AddRightCancelMonoid.ext","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L75-L78","name":"RightCancelMonoid.toMonoid_injective","line":75,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid.toMonoid\">RightCancelMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L74-L74","name":"AddRightCancelMonoid.toAddMonoid_injective","line":74,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid.toAddMonoid\">AddRightCancelMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L69-L72","name":"LeftCancelMonoid.ext","line":69,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L68-L68","name":"AddLeftCancelMonoid.ext","line":68,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L63-L66","name":"LeftCancelMonoid.toMonoid_injective","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid.toMonoid\">LeftCancelMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L62-L62","name":"AddLeftCancelMonoid.toAddMonoid_injective","line":62,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid.toAddMonoid\">AddLeftCancelMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L58-L60","name":"CommMonoid.ext","line":58,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L57-L57","name":"AddCommMonoid.ext","line":57,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L52-L55","name":"CommMonoid.toMonoid_injective","line":52,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid.toMonoid\">CommMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L51-L51","name":"AddCommMonoid.toAddMonoid_injective","line":51,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid.toAddMonoid\">AddCommMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L36-L49","name":"Monoid.ext","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Monoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Monoid.ext\"><span class=\"name\">Monoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Group/Ext.lean#L35-L35","name":"AddMonoid.ext","line":35,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext\"><span class=\"name\">AddMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"}]}