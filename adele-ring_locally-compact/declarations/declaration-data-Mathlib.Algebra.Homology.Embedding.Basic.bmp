{"name":"Mathlib.Algebra.Homology.Embedding.Basic","instances":[{"typeNames":["ComplexShape.Embedding.mk'"],"name":"ComplexShape.Embedding.instIsRelIffMk'","className":"ComplexShape.Embedding.IsRelIff"},{"typeNames":["ComplexShape.embeddingUpNat"],"name":"ComplexShape.instIsRelIffNatIntEmbeddingUpNat","className":"ComplexShape.Embedding.IsRelIff"},{"typeNames":["ComplexShape.embeddingUpNat"],"name":"ComplexShape.instIsTruncGENatIntEmbeddingUpNat","className":"ComplexShape.Embedding.IsTruncGE"},{"typeNames":["ComplexShape.embeddingDownNat"],"name":"ComplexShape.instIsRelIffNatIntEmbeddingDownNat","className":"ComplexShape.Embedding.IsRelIff"},{"typeNames":["ComplexShape.embeddingDownNat"],"name":"ComplexShape.instIsTruncLENatIntEmbeddingDownNat","className":"ComplexShape.Embedding.IsTruncLE"},{"typeNames":["ComplexShape.embeddingUpIntGE"],"name":"ComplexShape.instIsRelIffNatIntEmbeddingUpIntGE","className":"ComplexShape.Embedding.IsRelIff"},{"typeNames":["ComplexShape.embeddingUpIntGE"],"name":"ComplexShape.instIsTruncGENatIntEmbeddingUpIntGE","className":"ComplexShape.Embedding.IsTruncGE"},{"typeNames":["ComplexShape.embeddingUpIntLE"],"name":"ComplexShape.instIsRelIffNatIntEmbeddingUpIntLE","className":"ComplexShape.Embedding.IsRelIff"},{"typeNames":["ComplexShape.embeddingUpIntLE"],"name":"ComplexShape.instIsTruncLENatIntEmbeddingUpIntLE","className":"ComplexShape.Embedding.IsTruncLE"}],"imports":["Init","Mathlib.Algebra.Homology.ComplexShape","Mathlib.Algebra.Order.Ring.Nat","Mathlib.Algebra.Ring.Int"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L201-L202","name":"ComplexShape.instIsTruncLENatIntEmbeddingUpIntLE","line":201,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncLENatIntEmbeddingUpIntLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncLENatIntEmbeddingUpIntLE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsTruncLENatIntEmbeddingUpIntLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE\">ComplexShape.embeddingUpIntLE</a> <span class=\"fn\">p</span></span>)</span>.IsTruncLE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L199-L199","name":"ComplexShape.instIsRelIffNatIntEmbeddingUpIntLE","line":199,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpIntLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpIntLE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsRelIffNatIntEmbeddingUpIntLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE\">ComplexShape.embeddingUpIntLE</a> <span class=\"fn\">p</span></span>)</span>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L194-L197","name":"ComplexShape.embeddingUpIntLE","line":194,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE","doc":"The embedding from `down ℕ` to `up ℤ` which sends `n : ℕ` to `p - n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpIntLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down\">ComplexShape.down</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span>.Embedding</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L193-L193","name":"ComplexShape.embeddingUpIntLE_f","line":193,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpIntLE_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntLE\">ComplexShape.embeddingUpIntLE</a> <span class=\"fn\">p</span></span>)</span>.f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L189-L190","name":"ComplexShape.instIsTruncGENatIntEmbeddingUpIntGE","line":189,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncGENatIntEmbeddingUpIntGE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncGENatIntEmbeddingUpIntGE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsTruncGENatIntEmbeddingUpIntGE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE\">ComplexShape.embeddingUpIntGE</a> <span class=\"fn\">p</span></span>)</span>.IsTruncGE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L187-L187","name":"ComplexShape.instIsRelIffNatIntEmbeddingUpIntGE","line":187,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpIntGE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpIntGE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsRelIffNatIntEmbeddingUpIntGE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE\">ComplexShape.embeddingUpIntGE</a> <span class=\"fn\">p</span></span>)</span>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L182-L185","name":"ComplexShape.embeddingUpIntGE","line":182,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE","doc":"The embedding from `up ℕ` to `up ℤ` which sends `n : ℕ` to `p + n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpIntGE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span>.Embedding</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L181-L181","name":"ComplexShape.embeddingUpIntGE_f","line":181,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpIntGE_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpIntGE\">ComplexShape.embeddingUpIntGE</a> <span class=\"fn\">p</span></span>)</span>.f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L175-L176","name":"ComplexShape.instIsTruncLENatIntEmbeddingDownNat","line":175,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncLENatIntEmbeddingDownNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncLENatIntEmbeddingDownNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsTruncLENatIntEmbeddingDownNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat\">ComplexShape.embeddingDownNat</a>.IsTruncLE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L173-L173","name":"ComplexShape.instIsRelIffNatIntEmbeddingDownNat","line":173,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingDownNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingDownNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsRelIffNatIntEmbeddingDownNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat\">ComplexShape.embeddingDownNat</a>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L168-L171","name":"ComplexShape.embeddingDownNat","line":168,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat","doc":"The embedding from `down ℕ` to `up ℤ` with sends `n` to `-n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingDownNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down\">ComplexShape.down</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span>.Embedding</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L167-L167","name":"ComplexShape.embeddingDownNat_f","line":167,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingDownNat_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingDownNat\">ComplexShape.embeddingDownNat</a>.f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L163-L164","name":"ComplexShape.instIsTruncGENatIntEmbeddingUpNat","line":163,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncGENatIntEmbeddingUpNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsTruncGENatIntEmbeddingUpNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsTruncGENatIntEmbeddingUpNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat\">ComplexShape.embeddingUpNat</a>.IsTruncGE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L161-L161","name":"ComplexShape.instIsRelIffNatIntEmbeddingUpNat","line":161,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.instIsRelIffNatIntEmbeddingUpNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instIsRelIffNatIntEmbeddingUpNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat\">ComplexShape.embeddingUpNat</a>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L156-L159","name":"ComplexShape.embeddingUpNat","line":156,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat","doc":"The obvious embedding from `up ℕ` to `up ℤ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span>.Embedding</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L155-L155","name":"ComplexShape.embeddingUpNat_f","line":155,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">embeddingUpNat_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.embeddingUpNat\">ComplexShape.embeddingUpNat</a>.f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L143-L150","name":"ComplexShape.Embedding.f_eq_of_r_eq_some","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.f_eq_of_r_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.f_eq_of_r_eq_some\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">f_eq_of_r_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.r</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L141-L141","name":"ComplexShape.Embedding.r_f","line":141,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">r_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.r</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L135-L139","name":"ComplexShape.Embedding.r_eq_none","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_eq_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_eq_none\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">r_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.r</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L128-L133","name":"ComplexShape.Embedding.r_eq_some","line":128,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r_eq_some\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">r_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.r</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L123-L126","name":"ComplexShape.Embedding.r","line":123,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r","doc":"The map `ι' → Option ι` which sends `e.f i` to `some i` and the other elements to `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.r\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i' : <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L118-L119","name":"ComplexShape.Embedding.mem_prev","line":118,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mem_prev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mem_prev\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">mem_prev</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">e</span>.IsTruncLE</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">i'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L115-L115","name":"ComplexShape.Embedding.IsTruncLE.mem_prev","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE.mem_prev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE.mem_prev\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncLE</span>.<span class=\"name\">mem_prev</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><span class=\"fn\">e</span>.IsTruncLE</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">i'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L114-L114","name":"ComplexShape.Embedding.IsTruncLE.mk","line":114,"kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE.mk\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncLE</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toIsRelIff : <span class=\"fn\"><span class=\"fn\">e</span>.IsRelIff</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mem_prev : <span class=\"fn\">∀ {<span class=\"fn\">i'</span> : <span class=\"fn\">ι'</span>} {<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">i'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">e</span>.IsTruncLE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L114-L116","name":"ComplexShape.Embedding.IsTruncLE","line":114,"kind":"class","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE","doc":"The condition that the image of the map `e.f` of an embedding of\ncomplex shapes `e : Embedding c c'` is stable by `c'.prev`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncLE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsRelIff</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L109-L110","name":"ComplexShape.Embedding.mem_next","line":109,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mem_next","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mem_next\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">mem_next</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">e</span>.IsTruncGE</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">k'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">k</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L106-L106","name":"ComplexShape.Embedding.IsTruncGE.mem_next","line":106,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE.mem_next","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE.mem_next\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncGE</span>.<span class=\"name\">mem_next</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><span class=\"fn\">e</span>.IsTruncGE</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k' : <span class=\"fn\">ι'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">k'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">k</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L105-L105","name":"ComplexShape.Embedding.IsTruncGE.mk","line":105,"kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE.mk\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncGE</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toIsRelIff : <span class=\"fn\"><span class=\"fn\">e</span>.IsRelIff</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mem_next : <span class=\"fn\">∀ {<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>} {<span class=\"fn\">k'</span> : <span class=\"fn\">ι'</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">k'</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">k</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">e</span>.IsTruncGE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L105-L107","name":"ComplexShape.Embedding.IsTruncGE","line":105,"kind":"class","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE","doc":"The condition that the image of the map `e.f` of an embedding of\ncomplex shapes `e : Embedding c c'` is stable by `c'.next`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsTruncGE\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsTruncGE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsRelIff</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L98-L99","name":"ComplexShape.Embedding.instIsRelIffMk'","line":98,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.instIsRelIffMk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.instIsRelIffMk'\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">instIsRelIffMk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iff : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₂</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'\">ComplexShape.Embedding.mk'</a> <span class=\"fn\">c</span> <span class=\"fn\">c'</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">iff</span></span>)</span>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L93-L96","name":"ComplexShape.Embedding.mk'","line":93,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'","doc":"Constructor for embeddings between complex shapes when we have an equivalence\n`∀ (i₁ i₂ : ι), c.Rel i₁ i₂ ↔ c'.Rel (f i₁) (f i₂)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iff : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₂</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L92-L92","name":"ComplexShape.Embedding.mk'_f","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">mk'_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iff : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₂</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk'\">ComplexShape.Embedding.mk'</a> <span class=\"fn\">c</span> <span class=\"fn\">c'</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">iff</span></span>)</span>.f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L79-L82","name":"ComplexShape.Embedding.rel_iff","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.rel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.rel_iff\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">rel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">e</span>.IsRelIff</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₂</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L77-L77","name":"ComplexShape.Embedding.IsRelIff.rel'","line":77,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff.rel'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff.rel'\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsRelIff</span>.<span class=\"name\">rel'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><span class=\"fn\">e</span>.IsRelIff</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i₁ : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i₂ : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L76-L76","name":"ComplexShape.Embedding.IsRelIff.mk","line":76,"kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff.mk\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsRelIff</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(rel' : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">i₂</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">e</span>.IsRelIff</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L76-L77","name":"ComplexShape.Embedding.IsRelIff","line":76,"kind":"class","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff","doc":"An embedding of complex shapes `e` satisfies `e.IsRelIff` if the implication\n`e.rel` is an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.IsRelIff\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">IsRelIff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L69-L72","name":"ComplexShape.Embedding.op","line":69,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.op","doc":"The opposite embedding in `Embedding c.symm c'.symm` of `e : Embedding c c'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.op\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.symm</span>.Embedding</span> <span class=\"fn\"><span class=\"fn\">c'</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L68-L68","name":"ComplexShape.Embedding.op_f","line":68,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.op_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.op_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">op_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.op</span>.f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L60-L60","name":"ComplexShape.Embedding.rel","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.rel\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₁ : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₂ : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.f</span> <span class=\"fn\">i₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L59-L59","name":"ComplexShape.Embedding.injective_f","line":59,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.injective_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.injective_f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">injective_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">self</span>.f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L58-L58","name":"ComplexShape.Embedding.f","line":58,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.f","doc":"the map between the underlying types of indices "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.f\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L56-L56","name":"ComplexShape.Embedding.mk","line":56,"kind":"ctor","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding.mk\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(injective_f : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rel : <span class=\"fn\">∀ {<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">ι</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Rel</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span>.Rel</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i₂</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.Embedding</span> <span class=\"fn\">c'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Homology/Embedding/Basic.lean#L56-L60","name":"ComplexShape.Embedding","line":56,"kind":"structure","docLink":"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding","doc":"An embedding of a complex shape `c : ComplexShape ι` into a complex shape\n`c' : ComplexShape ι'` consists of a injective map `f : ι → ι'` which satisfies\na compatiblity with respect to the relations `c.Rel` and `c'.Rel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Embedding/Basic.html#ComplexShape.Embedding\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">Embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}