{"name":"Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated","instances":[{"typeNames":["HomotopyCategory"],"name":"HomotopyCategory.instPretriangulatedHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstHasZeroObjectHomotopyCategoryInstCategoryHomotopyCategoryHasShiftInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryInstAdditiveHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryShiftFunctorInstAddMonoidIntHasShift","className":"CategoryTheory.Pretriangulated"}],"imports":["Init","Mathlib.Algebra.Homology.HomotopyCategory.MappingCone","Mathlib.Algebra.Homology.HomotopyCategory.HomComplexShift","Mathlib.CategoryTheory.Triangulated.Functor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L466-L468","name":"HomotopyCategory.mappingCone_triangleh_distinguished","line":466,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.mappingCone_triangleh_distinguished","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.mappingCone_triangleh_distinguished\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">mappingCone_triangleh_distinguished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">CategoryTheory.Limits.HasZeroObject</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">CategoryTheory.Pretriangulated.distinguishedTriangles</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L455-L462","name":"HomotopyCategory.instPretriangulatedHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstHasZeroObjectHomotopyCategoryInstCategoryHomotopyCategoryHasShiftInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryInstAdditiveHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryShiftFunctorInstAddMonoidIntHasShift","line":455,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.instPretriangulatedHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstHasZeroObjectHomotopyCategoryInstCategoryHomotopyCategoryHasShiftInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryInstAdditiveHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryShiftFunctorInstAddMonoidIntHasShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.instPretriangulatedHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstHasZeroObjectHomotopyCategoryInstCategoryHomotopyCategoryHasShiftInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryInstAdditiveHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryShiftFunctorInstAddMonoidIntHasShift\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">instPretriangulatedHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstHasZeroObjectHomotopyCategoryInstCategoryHomotopyCategoryHasShiftInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryInstAdditiveHomotopyCategoryIntUpToAddRightCancelSemigroupToAddRightCancelMonoidToAddCancelMonoidInstAddGroupIntToOneInstSemiringIntInstCategoryHomotopyCategoryInstPreadditiveHomotopyCategoryInstCategoryHomotopyCategoryShiftFunctorInstAddMonoidIntHasShift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">CategoryTheory.Limits.HasZeroObject</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Pretriangulated.html#CategoryTheory.Pretriangulated\">CategoryTheory.Pretriangulated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L426-L451","name":"HomotopyCategory.Pretriangulated.complete_distinguished_triangle_morphism","line":426,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.complete_distinguished_triangle_morphism","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.complete_distinguished_triangle_morphism\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">complete_distinguished_triangle_morphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT₁ : <span class=\"fn\"><span class=\"fn\">T₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT₂ : <span class=\"fn\"><span class=\"fn\">T₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.obj₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">T₂</span>.obj₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.obj₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">T₂</span>.obj₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fac : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.mor₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\"><span class=\"fn\">T₂</span>.mor₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (c : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T₁</span>.obj₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">T₂</span>.obj₃</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.mor₂</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\"><span class=\"fn\">T₂</span>.mor₂</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">T₁</span>.mor₃</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">1</span></span>)</span>.map</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">c</span> <span class=\"fn\"><span class=\"fn\">T₂</span>.mor₃</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L418-L424","name":"HomotopyCategory.Pretriangulated.rotate_distinguished_triangle","line":418,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.rotate_distinguished_triangle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.rotate_distinguished_triangle\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">rotate_distinguished_triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Rotate.html#CategoryTheory.Pretriangulated.Triangle.rotate\">CategoryTheory.Pretriangulated.Triangle.rotate</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L411-L416","name":"HomotopyCategory.Pretriangulated.invRotate_distinguished_triangle'","line":411,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.invRotate_distinguished_triangle'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.invRotate_distinguished_triangle'\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">invRotate_distinguished_triangle'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Rotate.html#CategoryTheory.Pretriangulated.Triangle.invRotate\">CategoryTheory.Pretriangulated.Triangle.invRotate</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L405-L409","name":"HomotopyCategory.Pretriangulated.shift_distinguished_triangle","line":405,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.shift_distinguished_triangle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.shift_distinguished_triangle\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">shift_distinguished_triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/TriangleShift.html#CategoryTheory.Pretriangulated.Triangle.shiftFunctor\">CategoryTheory.Pretriangulated.Triangle.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L400-L403","name":"HomotopyCategory.Pretriangulated.rotate_distinguished_triangle'","line":400,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.rotate_distinguished_triangle'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.rotate_distinguished_triangle'\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">rotate_distinguished_triangle'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Rotate.html#CategoryTheory.Pretriangulated.Triangle.rotate\">CategoryTheory.Pretriangulated.Triangle.rotate</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L392-L398","name":"HomotopyCategory.Pretriangulated.distinguished_cocone_triangle","line":392,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguished_cocone_triangle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguished_cocone_triangle\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">distinguished_cocone_triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>) (g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) (h :\n  <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mk\">CategoryTheory.Pretriangulated.Triangle.mk</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L384-L390","name":"HomotopyCategory.Pretriangulated.contractible_distinguished","line":384,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.contractible_distinguished","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.contractible_distinguished\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">contractible_distinguished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">CategoryTheory.Limits.HasZeroObject</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.contractibleTriangle\">CategoryTheory.Pretriangulated.contractibleTriangle</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L378-L382","name":"HomotopyCategory.Pretriangulated.isomorphic_distinguished","line":378,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.isomorphic_distinguished","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.isomorphic_distinguished\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">isomorphic_distinguished</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT₁ : <span class=\"fn\"><span class=\"fn\">T₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">T₂</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">T₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\">HomotopyCategory.Pretriangulated.distinguishedTriangles</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L372-L374","name":"HomotopyCategory.Pretriangulated.distinguishedTriangles","line":372,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles","doc":"A triangle in `HomotopyCategory C (ComplexShape.up ℤ)` is distinguished if it is isomorphic to\nthe triangle `CochainComplex.mappingCone.triangleh φ` for some morphism of cochain\ncomplexes `φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#HomotopyCategory.Pretriangulated.distinguishedTriangles\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">distinguishedTriangles</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L352-L355","name":"CochainComplex.mappingCone.shiftTrianglehIso","line":352,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftTrianglehIso","doc":"The canonical isomorphism `(triangleh φ)⟦n⟧ ≅ triangleh (φ⟦n⟧')`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftTrianglehIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">shiftTrianglehIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/TriangleShift.html#CategoryTheory.Pretriangulated.Triangle.shiftFunctor\">CategoryTheory.Pretriangulated.Triangle.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">n</span></span>)</span>.obj</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L318-L349","name":"CochainComplex.mappingCone.shiftTriangleIso","line":318,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftTriangleIso","doc":"The canonical isomorphism `(triangle φ)⟦n⟧ ≅ triangle (φ⟦n⟧')`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftTriangleIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">shiftTriangleIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/TriangleShift.html#CategoryTheory.Pretriangulated.Triangle.shiftFunctor\">CategoryTheory.Pretriangulated.Triangle.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">n</span></span>)</span>.obj</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L281-L314","name":"CochainComplex.mappingCone.shiftIso","line":281,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftIso","doc":"The canonical isomorphism `(mappingCone φ)⟦n⟧ ≅ mappingCone (φ⟦n⟧')`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.shiftIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">shiftIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L264-L273","name":"CochainComplex.mappingCone.rotateTrianglehIso","line":264,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateTrianglehIso","doc":"The canonical isomorphism of triangles `(triangleh φ).rotate ≅ (triangleh (inr φ))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateTrianglehIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateTrianglehIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Rotate.html#CategoryTheory.Pretriangulated.Triangle.rotate\">CategoryTheory.Pretriangulated.Triangle.rotate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L256-L261","name":"CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃","line":256,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquiv_comm₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\">CochainComplex.mappingCone.rotateHomotopyEquiv</a> <span class=\"fn\">φ</span></span>)</span>.hom</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span>.mor₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.map</span> <span class=\"fn\">φ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L255-L255","name":"CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃_assoc","line":255,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₃_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquiv_comm₃_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span>.obj₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\">CochainComplex.mappingCone.rotateHomotopyEquiv</a> <span class=\"fn\">φ</span></span>)</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span>.mor₃</span>\n      <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.map</span> <span class=\"fn\">φ</span></span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L248-L253","name":"CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂","line":248,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquiv_comm₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\">CochainComplex.mappingCone.rotateHomotopyEquiv</a> <span class=\"fn\">φ</span></span>)</span>.hom</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L247-L247","name":"CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂_assoc","line":247,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv_comm₂_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquiv_comm₂_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\">CochainComplex.mappingCone.rotateHomotopyEquiv</a> <span class=\"fn\">φ</span></span>)</span>.hom</span></span>)</span>\n      <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L235-L245","name":"CochainComplex.mappingCone.rotateHomotopyEquivComm₂Homotopy","line":235,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquivComm₂Homotopy","doc":"Auxiliary definition for `rotateTrianglehIso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquivComm₂Homotopy\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquivComm₂Homotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\">CochainComplex.mappingCone.rotateHomotopyEquiv</a> <span class=\"fn\">φ</span></span>)</span>.hom</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L181-L232","name":"CochainComplex.mappingCone.rotateHomotopyEquiv","line":181,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv","doc":"Given `φ : K ⟶ L`, `K⟦(1 : ℤ)⟧` is homotopy equivalent to\nthe mapping cone of `inr φ : L ⟶ mappingCone φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.rotateHomotopyEquiv\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">rotateHomotopyEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv\">HomotopyEquiv</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\">K</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L149-L160","name":"CochainComplex.mappingCone.triangleMap","line":149,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap","doc":"The morphism `triangle φ₁ ⟶ triangle φ₂` that is induced by a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L148-L148","name":"CochainComplex.mappingCone.triangleMap_hom₃","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMap_hom₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap\">CochainComplex.mappingCone.triangleMap</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span>)</span>.hom₃</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L148-L148","name":"CochainComplex.mappingCone.triangleMap_hom₂","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMap_hom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap\">CochainComplex.mappingCone.triangleMap</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span>)</span>.hom₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L148-L148","name":"CochainComplex.mappingCone.triangleMap_hom₁","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap_hom₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMap_hom₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMap\">CochainComplex.mappingCone.triangleMap</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span>)</span>.hom₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L142-L145","name":"CochainComplex.mappingCone.map_comp","line":142,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_comp\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₃ : <span class=\"fn\"><span class=\"fn\">K₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a' : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b' : <span class=\"fn\"><span class=\"fn\">L₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₂</span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a'</span> <span class=\"fn\">φ₃</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\">b'</span></span>)</span>\n    <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₂</span> <span class=\"fn\">φ₃</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">comm'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L141-L141","name":"CochainComplex.mappingCone.map_comp_assoc","line":141,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_comp_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">map_comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₃ : <span class=\"fn\"><span class=\"fn\">K₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a' : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b' : <span class=\"fn\"><span class=\"fn\">L₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₂</span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a'</span> <span class=\"fn\">φ₃</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₃</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₂</span> <span class=\"fn\">φ₃</span> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span> <span class=\"fn\">comm'</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L137-L139","name":"CochainComplex.mappingCone.map_id","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_id\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L134-L135","name":"CochainComplex.mappingCone.map_eq_mapOfHomotopy","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_eq_mapOfHomotopy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map_eq_mapOfHomotopy\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">map_eq_mapOfHomotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\">CochainComplex.mappingCone.map</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">φ₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">comm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ofEq\">Homotopy.ofEq</a> <span class=\"fn\">comm</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L130-L132","name":"CochainComplex.mappingCone.map","line":130,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map","doc":"The morphism `mappingCone φ₁ ⟶ mappingCone φ₂` that is induced by a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.map\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L103-L119","name":"CochainComplex.mappingCone.trianglehMapOfHomotopy","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy","doc":"The morphism `triangleh φ₁ ⟶ triangleh φ₂` that is induced by a square that\nis commutative up to homotopy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">trianglehMapOfHomotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">φ₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\">CochainComplex.mappingCone.triangleh</a> <span class=\"fn\">φ₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L102-L102","name":"CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₃","line":102,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">trianglehMapOfHomotopy_hom₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy\">CochainComplex.mappingCone.trianglehMapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span>.hom₃</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L102-L102","name":"CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₁","line":102,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">trianglehMapOfHomotopy_hom₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy\">CochainComplex.mappingCone.trianglehMapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span>.hom₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L102-L102","name":"CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₂","line":102,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy_hom₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">trianglehMapOfHomotopy_hom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.trianglehMapOfHomotopy\">CochainComplex.mappingCone.trianglehMapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span>.hom₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">HomotopyCategory.quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.map</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L94-L98","name":"CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃","line":94,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMapOfHomotopy_comm₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₂</span></span>)</span>.mor₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₁</span></span>)</span>.mor₃</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.map</span> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L93-L93","name":"CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃_assoc","line":93,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₃_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMapOfHomotopy_comm₃_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₂</span></span>)</span>.obj₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₂</span></span>)</span>.mor₃</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ₁</span></span>)</span>.mor₃</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.map</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L89-L91","name":"CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂","line":89,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMapOfHomotopy_comm₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L88-L88","name":"CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂_assoc","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleMapOfHomotopy_comm₂_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleMapOfHomotopy_comm₂_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₂</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\">CochainComplex.mappingCone.mapOfHomotopy</a> <span class=\"fn\">H</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ₂</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L82-L86","name":"CochainComplex.mappingCone.mapOfHomotopy","line":82,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy","doc":"The morphism `mappingCone φ₁ ⟶ mappingCone φ₂` that is induced by a square that\nis commutative up to homotopy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.mapOfHomotopy\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">mapOfHomotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">L₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ₁</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">a</span> <span class=\"fn\">φ₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L70-L71","name":"CochainComplex.mappingCone.homotopyToZeroOfId","line":70,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.homotopyToZeroOfId","doc":"The mapping cone of the identity is contractible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.homotopyToZeroOfId\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">homotopyToZeroOfId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L64-L65","name":"CochainComplex.mappingCone.triangleh","line":64,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh","doc":"The (distinguished) triangle in the homotopy category that is associated to\na morphism `φ : K ⟶ L` in the category `CochainComplex C ℤ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangleh\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangleh</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory\">HomotopyCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L60-L60","name":"CochainComplex.mappingCone.inr_triangleδ","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_triangleδ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_triangleδ\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inr_triangleδ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L59-L59","name":"CochainComplex.mappingCone.inr_triangleδ_assoc","line":59,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_triangleδ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_triangleδ_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inr_triangleδ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">0</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L56-L57","name":"CochainComplex.mappingCone.inr_f_triangle_mor₃_f","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_f_triangle_mor₃_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_f_triangle_mor₃_f\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inr_f_triangle_mor₃_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span>.f</span> <span class=\"fn\">p</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span>.f</span> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L55-L55","name":"CochainComplex.mappingCone.inr_f_triangle_mor₃_f_assoc","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_f_triangle_mor₃_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inr_f_triangle_mor₃_f_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inr_f_triangle_mor₃_f_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₁</span></span>)</span>.X</span> <span class=\"fn\">p</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span>)</span>.f</span> <span class=\"fn\">p</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span>.f</span> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">0</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L50-L53","name":"CochainComplex.mappingCone.inl_v_triangle_mor₃_f","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inl_v_triangle_mor₃_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inl_v_triangle_mor₃_f\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inl_v_triangle_mor₃_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpq : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inl\">CochainComplex.mappingCone.inl</a> <span class=\"fn\">φ</span></span>)</span>.v</span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span>.f</span> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">CochainComplex.shiftFunctorObjXIso</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span> <span class=\"fn\">q</span> <span class=\"fn\">p</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L49-L49","name":"CochainComplex.mappingCone.inl_v_triangle_mor₃_f_assoc","line":49,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inl_v_triangle_mor₃_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.inl_v_triangle_mor₃_f_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">inl_v_triangle_mor₃_f_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpq : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">1</span></span>)</span>.obj</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₁</span></span>)</span>.X</span> <span class=\"fn\">q</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inl\">CochainComplex.mappingCone.inl</a> <span class=\"fn\">φ</span></span>)</span>.v</span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₃</span>.f</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">CochainComplex.shiftFunctorObjXIso</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span> <span class=\"fn\">q</span> <span class=\"fn\">p</span> <span class=\"fn\">⋯</span></span>)</span>.inv</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L46-L47","name":"CochainComplex.mappingCone.triangle","line":46,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle","doc":"The standard triangle `K ⟶ L ⟶ mappingCone φ ⟶ K⟦(1 : ℤ)⟧` in `CochainComplex C ℤ`\nattached to a morphism `φ : K ⟶ L`. It involves `φ`, `inr φ : L ⟶ mappingCone φ` and\nthe morphism induced by the `1`-cocycle `-mappingCone.fst φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">CategoryTheory.Pretriangulated.Triangle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L45-L45","name":"CochainComplex.mappingCone.triangle_obj₁","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle_obj₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L45-L45","name":"CochainComplex.mappingCone.triangle_mor₁","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_mor₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_mor₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle_mor₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L45-L45","name":"CochainComplex.mappingCone.triangle_obj₂","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle_obj₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L45-L45","name":"CochainComplex.mappingCone.triangle_mor₂","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_mor₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_mor₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle_mor₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.mor₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone.inr\">CochainComplex.mappingCone.inr</a> <span class=\"fn\">φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.lean#L45-L45","name":"CochainComplex.mappingCone.triangle_obj₃","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle_obj₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">mappingCone</span>.<span class=\"name\">triangle_obj₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Biproducts.html#CategoryTheory.Limits.HasBinaryBiproducts\">CategoryTheory.Limits.HasBinaryBiproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Pretriangulated.html#CochainComplex.mappingCone.triangle\">CochainComplex.mappingCone.triangle</a> <span class=\"fn\">φ</span></span>)</span>.obj₃</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/MappingCone.html#CochainComplex.mappingCone\">CochainComplex.mappingCone</a> <span class=\"fn\">φ</span></span></span></div></div>"}]}