{"name":"Mathlib.Algebra.LinearRecurrence","instances":[{"typeNames":["LinearRecurrence"],"name":"instInhabitedLinearRecurrence","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Polynomial.Eval","Mathlib.LinearAlgebra.Dimension.Constructions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L201-L211","name":"LinearRecurrence.geom_sol_iff_root_charPoly","line":201,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.geom_sol_iff_root_charPoly","doc":"The geometric sequence `q^n` is a solution of `E` iff\n`q` is a root of `E`'s characteristic polynomial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.geom_sol_iff_root_charPoly\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">geom_sol_iff_root_charPoly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.charPoly</span>.IsRoot</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L196-L197","name":"LinearRecurrence.charPoly","line":196,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.charPoly","doc":"The characteristic polynomial of `E` is\n`X ^ E.order - ∑ i : Fin E.order, (E.coeffs i) * X ^ i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.charPoly\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">charPoly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L184-L186","name":"LinearRecurrence.solSpace_rank","line":184,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.solSpace_rank","doc":"The dimension of `E.solSpace` is `E.order`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.solSpace_rank\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">solSpace_rank</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/InvariantBasisNumber.html#StrongRankCondition\">StrongRankCondition</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Basic.html#Module.rank\">Module.rank</a> <span class=\"fn\">α</span> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">E</span>.solSpace</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">E</span>.order</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L163-L173","name":"LinearRecurrence.tupleSucc","line":163,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.tupleSucc","doc":"`E.tupleSucc` maps `![s₀, s₁, ..., sₙ]` to `![s₁, ..., sₙ, ∑ (E.coeffs i) * sᵢ]`,\nwhere `n := E.order`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.tupleSucc\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">tupleSucc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>)</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">α</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L144-L154","name":"LinearRecurrence.sol_eq_of_eq_init","line":144,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.sol_eq_of_eq_init","doc":"Two solutions are equal iff they are equal on `range E.order`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.sol_eq_of_eq_init\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">sol_eq_of_eq_init</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hv : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">u</span> <span class=\"fn\">v</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L131-L141","name":"LinearRecurrence.toInit","line":131,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.toInit","doc":"The function that maps a solution `u` of `E` to its first\n`E.order` terms as a `LinearEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.toInit\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">toInit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">E</span>.solSpace</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">α</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L126-L127","name":"LinearRecurrence.is_sol_iff_mem_solSpace","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.is_sol_iff_mem_solSpace","doc":"Defining property of the solution space : `u` is a solution\niff it belongs to the solution space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.is_sol_iff_mem_solSpace\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">is_sol_iff_mem_solSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">E</span>.solSpace</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L118-L122","name":"LinearRecurrence.solSpace","line":118,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.solSpace","doc":"The space of solutions of `E`, as a `Submodule` over `α` of the module `ℕ → α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.solSpace\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">solSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L113-L115","name":"LinearRecurrence.eq_mk_of_is_sol_of_eq_init'","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.eq_mk_of_is_sol_of_eq_init'","doc":"If `u` is a solution to `E` and `init` designates its first `E.order` values,\nthen `u = E.mkSol init`. This proves that `E.mkSol init` is the only solution\nof `E` whose first `E.order` values are given by `init`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.eq_mk_of_is_sol_of_eq_init'\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">eq_mk_of_is_sol_of_eq_init'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{init : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(heq : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">init</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.mkSol</span> <span class=\"fn\">init</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L93-L108","name":"LinearRecurrence.eq_mk_of_is_sol_of_eq_init","line":93,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.eq_mk_of_is_sol_of_eq_init","doc":"If `u` is a solution to `E` and `init` designates its first `E.order` values,\nthen `∀ n, u n = E.mkSol init n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.eq_mk_of_is_sol_of_eq_init\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">eq_mk_of_is_sol_of_eq_init</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{init : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(heq : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">init</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.mkSol</span> <span class=\"fn\">init</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L86-L89","name":"LinearRecurrence.mkSol_eq_init","line":86,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mkSol_eq_init","doc":"`E.mkSol init`'s first `E.order` terms are `init`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mkSol_eq_init\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">mkSol_eq_init</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.mkSol</span> <span class=\"fn\">init</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">init</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L80-L83","name":"LinearRecurrence.is_sol_mkSol","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.is_sol_mkSol","doc":"`E.mkSol` indeed gives solutions to `E`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.is_sol_mkSol\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">is_sol_mkSol</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.IsSolution</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.mkSol</span> <span class=\"fn\">init</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L67-L77","name":"LinearRecurrence.mkSol","line":67,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mkSol","doc":"A solution of a `LinearRecurrence` which satisfies certain initial conditions.\nWe will prove this is the only such solution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mkSol\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">mkSol</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">E</span>.order</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L62-L63","name":"LinearRecurrence.IsSolution","line":62,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.IsSolution","doc":"We say that a sequence `u` is solution of `LinearRecurrence order coeffs` when we have\n`u (n + order) = ∑ i : Fin order, coeffs i * u (n + i)` for any `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.IsSolution\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">IsSolution</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L51-L52","name":"instInhabitedLinearRecurrence","line":51,"kind":"instance","docLink":"./Mathlib/Algebra/LinearRecurrence.html#instInhabitedLinearRecurrence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#instInhabitedLinearRecurrence\"><span class=\"name\">instInhabitedLinearRecurrence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L49-L49","name":"LinearRecurrence.coeffs","line":49,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.coeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.coeffs\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">coeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.order</span></span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L48-L48","name":"LinearRecurrence.order","line":48,"kind":"def","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.order","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.order\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">order</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L47-L47","name":"LinearRecurrence.mk","line":47,"kind":"ctor","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence.mk\"><span class=\"name\">LinearRecurrence</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(order : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(coeffs : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">order</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\">LinearRecurrence</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/LinearRecurrence.lean#L47-L49","name":"LinearRecurrence","line":47,"kind":"structure","docLink":"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence","doc":"A \"linear recurrence relation\" over a commutative semiring is given by its\norder `n` and `n` coefficients. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/LinearRecurrence.html#LinearRecurrence\"><span class=\"name\">LinearRecurrence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}