{"name":"Mathlib.Algebra.Ring.Ext","instances":[],"imports":["Init","Mathlib.Algebra.Ring.Defs","Mathlib.Algebra.Group.Ext"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L528-L532","name":"CommRing.ext_iff","line":528,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext_iff\"><span class=\"name\">CommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L522-L526","name":"CommRing.ext","line":522,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext\"><span class=\"name\">CommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L519-L520","name":"CommRing.toRing_injective","line":519,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.toRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.toRing_injective\"><span class=\"name\">CommRing</span>.<span class=\"name\">toRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing.toRing\">CommRing.toRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L508-L512","name":"CommSemiring.ext_iff","line":508,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext_iff\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L501-L506","name":"CommSemiring.ext","line":501,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L497-L499","name":"CommSemiring.toSemiring_injective","line":497,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.toSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.toSemiring_injective\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">toSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring.toSemiring\">CommSemiring.toSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L484-L488","name":"NonUnitalCommRing.ext_iff","line":484,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext_iff\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L477-L482","name":"NonUnitalCommRing.ext","line":477,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L473-L475","name":"NonUnitalCommRing.toNonUnitalRing_injective","line":473,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.toNonUnitalRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.toNonUnitalRing_injective\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">toNonUnitalRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing.toNonUnitalRing\">NonUnitalCommRing.toNonUnitalRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L462-L466","name":"NonUnitalNonAssocCommRing.ext_iff","line":462,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext_iff\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L455-L460","name":"NonUnitalNonAssocCommRing.ext","line":455,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L451-L453","name":"NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective","line":451,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">toNonUnitalNonAssocRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing\">NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L438-L442","name":"NonUnitalCommSemiring.ext_iff","line":438,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext_iff\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L431-L436","name":"NonUnitalCommSemiring.ext","line":431,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L427-L429","name":"NonUnitalCommSemiring.toNonUnitalSemiring_injective","line":427,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.toNonUnitalSemiring_injective\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring.toNonUnitalSemiring\">NonUnitalCommSemiring.toNonUnitalSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L416-L420","name":"NonUnitalNonAssocCommSemiring.ext_iff","line":416,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext_iff\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L409-L414","name":"NonUnitalNonAssocCommSemiring.ext","line":409,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L405-L407","name":"NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective","line":405,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring\">NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L394-L398","name":"Ring.ext_iff","line":394,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.ext_iff\"><span class=\"name\">Ring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L387-L392","name":"Ring.toSemiring_injective","line":387,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toSemiring_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toSemiring\">Ring.toSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L382-L385","name":"Ring.toNonAssocRing_injective","line":382,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonAssocRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonAssocRing_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toNonAssocRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toNonAssocRing\">Ring.toNonAssocRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L375-L380","name":"Ring.toNonUnitalRing_injective","line":375,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonUnitalRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonUnitalRing_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toNonUnitalRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toNonUnitalRing\">Ring.toNonUnitalRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L357-L373","name":"Ring.ext","line":357,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.ext\"><span class=\"name\">Ring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L346-L350","name":"Semiring.ext_iff","line":346,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext_iff\"><span class=\"name\">Semiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L339-L344","name":"Semiring.toNonAssocSemiring_injective","line":339,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonAssocSemiring_injective\"><span class=\"name\">Semiring</span>.<span class=\"name\">toNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring.toNonAssocSemiring\">Semiring.toNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L332-L337","name":"Semiring.toNonUnitalSemiring_injective","line":332,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonUnitalSemiring_injective\"><span class=\"name\">Semiring</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring.toNonUnitalSemiring\">Semiring.toNonUnitalSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L317-L330","name":"Semiring.ext","line":317,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext\"><span class=\"name\">Semiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L306-L310","name":"NonAssocRing.ext_iff","line":306,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext_iff\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L301-L304","name":"NonAssocRing.toNonUnitalNonAssocring_injective","line":301,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonUnitalNonAssocring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonUnitalNonAssocring_injective\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">toNonUnitalNonAssocring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing.toNonUnitalNonAssocRing\">NonAssocRing.toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L294-L299","name":"NonAssocRing.toNonAssocSemiring_injective","line":294,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonAssocSemiring_injective\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">toNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing.toNonAssocSemiring\">NonAssocRing.toNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L280-L292","name":"NonAssocRing.ext","line":280,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L266-L276","name":"AddCommGroupWithOne.ext","line":266,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext\"><span class=\"name\">AddCommGroupWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddCommGroupWithOne\">AddCommGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddCommGroupWithOne\">AddCommGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\"><span class=\"fn\">One.one</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">One.one</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L249-L264","name":"AddGroupWithOne.ext","line":249,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext\"><span class=\"name\">AddGroupWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\"><span class=\"fn\">One.one</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">One.one</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L236-L240","name":"NonUnitalRing.ext_iff","line":236,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext_iff\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L231-L234","name":"NonUnitalRing.toNonUnitalNonAssocring_injective","line":231,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalNonAssocring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalNonAssocring_injective\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">toNonUnitalNonAssocring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing.toNonUnitalNonAssocRing\">NonUnitalRing.toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L224-L229","name":"NonUnitalRing.toNonUnitalSemiring_injective","line":224,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalSemiring_injective\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing.toNonUnitalSemiring\">NonUnitalRing.toNonUnitalSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L214-L222","name":"NonUnitalRing.ext","line":214,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L203-L207","name":"NonUnitalNonAssocRing.ext_iff","line":203,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext_iff\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L195-L201","name":"NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective","line":195,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring\">NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L187-L193","name":"NonUnitalNonAssocRing.ext","line":187,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L176-L180","name":"NonAssocSemiring.ext_iff","line":176,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext_iff\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L171-L174","name":"NonAssocSemiring.toNonUnitalNonAssocSemiring_injective","line":171,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring.toNonUnitalNonAssocSemiring\">NonAssocSemiring.toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L149-L169","name":"NonAssocSemiring.ext","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L137-L142","name":"AddCommMonoidWithOne.ext","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext\"><span class=\"name\">AddCommMonoidWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\"><span class=\"fn\">One.one</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">One.one</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L133-L135","name":"AddCommMonoidWithOne.toAddMonoidWithOne_injective","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.toAddMonoidWithOne_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.toAddMonoidWithOne_injective\"><span class=\"name\">AddCommMonoidWithOne</span>.<span class=\"name\">toAddMonoidWithOne_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne.toAddMonoidWithOne\">AddCommMonoidWithOne.toAddMonoidWithOne</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L116-L131","name":"AddMonoidWithOne.ext","line":116,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext\"><span class=\"name\">AddMonoidWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_one : <span class=\"fn\"><span class=\"fn\">One.one</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">One.one</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L101-L105","name":"NonUnitalSemiring.ext_iff","line":101,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext_iff\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L94-L99","name":"NonUnitalSemiring.ext","line":94,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L90-L92","name":"NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective","line":90,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring\">NonUnitalSemiring.toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L79-L83","name":"NonUnitalNonAssocSemiring.ext_iff","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext_iff\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L73-L77","name":"NonUnitalNonAssocSemiring.toDistrib_injective","line":73,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.toDistrib_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.toDistrib_injective\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">toDistrib_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring.toDistrib\">NonUnitalNonAssocSemiring.toDistrib</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L63-L71","name":"NonUnitalNonAssocSemiring.ext","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L52-L56","name":"Distrib.ext_iff","line":52,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext_iff\"><span class=\"name\">Distrib</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Algebra/Ring/Ext.lean#L42-L50","name":"Distrib.ext","line":42,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext\"><span class=\"name\">Distrib</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃inst₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_add : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></span></div></div>"}]}