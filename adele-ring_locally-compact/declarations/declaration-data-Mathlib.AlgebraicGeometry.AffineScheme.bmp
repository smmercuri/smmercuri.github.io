{"name":"Mathlib.AlgebraicGeometry.AffineScheme","instances":[{"typeNames":["CategoryTheory.FullSubcategory.obj"],"name":"AlgebraicGeometry.isAffine_affineScheme","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["Prefunctor.obj"],"name":"AlgebraicGeometry.instIsAffineObjOppositeCommRingCatSchemeSpec","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.Spec"],"name":"AlgebraicGeometry.isAffine_Spec","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.AffineScheme.Spec"],"name":"AlgebraicGeometry.AffineScheme.Spec_full","className":"CategoryTheory.Functor.Full"},{"typeNames":["AlgebraicGeometry.AffineScheme.Spec"],"name":"AlgebraicGeometry.AffineScheme.Spec_faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["AlgebraicGeometry.AffineScheme.Spec"],"name":"AlgebraicGeometry.AffineScheme.Spec_essSurj","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["AlgebraicGeometry.AffineScheme.forgetToScheme"],"name":"AlgebraicGeometry.AffineScheme.forgetToScheme_full","className":"CategoryTheory.Functor.Full"},{"typeNames":["AlgebraicGeometry.AffineScheme.forgetToScheme"],"name":"AlgebraicGeometry.AffineScheme.forgetToScheme_faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.Functor.rightOp"],"name":"AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatRightOpΓ","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["CategoryTheory.Functor.op"],"name":"AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatOpRightOpΓ","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["AlgebraicGeometry.AffineScheme.Γ"],"name":"AlgebraicGeometry.AffineScheme.ΓIsEquiv","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["AlgebraicGeometry.AffineScheme"],"name":"AlgebraicGeometry.AffineScheme.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AlgebraicGeometry.AffineScheme"],"name":"AlgebraicGeometry.AffineScheme.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CategoryTheory.Functor.rightOp"],"name":"AlgebraicGeometry.AffineScheme.Γ_preservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AlgebraicGeometry.AffineScheme.forgetToScheme"],"name":"AlgebraicGeometry.AffineScheme.forgetToScheme_preservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AlgebraicGeometry.Scheme.Opens.toScheme"],"name":"AlgebraicGeometry.instIsAffineToSchemeValOpensMemSetAffineOpens","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.Scheme.OpenCover.obj"],"name":"AlgebraicGeometry.Scheme.isAffine_affineCover","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.Scheme.OpenCover.obj"],"name":"AlgebraicGeometry.Scheme.isAffine_affineBasisCover","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.Scheme.OpenCover.obj"],"name":"AlgebraicGeometry.Scheme.isAffine_affineOpenCover","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.Scheme.OpenCover.obj"],"name":"AlgebraicGeometry.instIsAffineObjOpenCoverOfIsIsoIdScheme","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.IsAffineOpen.fromSpec"],"name":"AlgebraicGeometry.IsAffineOpen.isOpenImmersion_fromSpec","className":"AlgebraicGeometry.PresheafedSpace.IsOpenImmersion"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"AlgebraicGeometry.Scheme.compactSpace_of_isAffine","className":"CompactSpace"},{"typeNames":["AlgebraicGeometry.Scheme.Opens.toScheme"],"name":"AlgebraicGeometry.IsAffineOpen.instIsAffineToSchemeBasicOpen","className":"AlgebraicGeometry.IsAffine"},{"typeNames":["AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine"],"name":"AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"AlgebraicGeometry.isLocalization_away_of_isAffine","className":"IsLocalization"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"AlgebraicGeometry.Γ_restrict_isLocalization","className":"IsLocalization"}],"imports":["Init","Mathlib.AlgebraicGeometry.GammaSpecAdjunction","Mathlib.AlgebraicGeometry.Restrict","Mathlib.AlgebraicGeometry.Cover.Open","Mathlib.CategoryTheory.Limits.Opposites","Mathlib.RingTheory.Localization.InvSubmonoid"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L735-L736","name":"AlgebraicGeometry.IsAffineOpen.mapRestrictBasicOpen","line":735,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.mapRestrictBasicOpen","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.ι_basicOpen_preimage`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.mapRestrictBasicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">mapRestrictBasicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span>.ι</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L733-L734","name":"AlgebraicGeometry.IsAffineOpen.basicOpenIsAffine","line":733,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenIsAffine","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.basicOpen`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpenIsAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L731-L732","name":"AlgebraicGeometry.IsAffineOpen.opensFunctor_map_basicOpen","line":731,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.opensFunctor_map_basicOpen","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.fromSpec_image_basicOpen`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.opensFunctor_map_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">opensFunctor_map_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L729-L730","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen","line":729,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_map_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L727-L728","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen'","line":727,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen'","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_map_basicOpen'\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_map_basicOpen'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.basicOpen</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.ΓSpecIso\">AlgebraicGeometry.Scheme.ΓSpecIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.inv</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L725-L726","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_base_preimage","line":725,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_base_preimage","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_self`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_base_preimage\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_base_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L723-L724","name":"AlgebraicGeometry.Scheme.quasi_compact_of_affine","line":723,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.quasi_compact_of_affine","doc":"**Alias** of `AlgebraicGeometry.Scheme.compactSpace_of_isAffine`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.quasi_compact_of_affine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">quasi_compact_of_affine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L721-L722","name":"AlgebraicGeometry.IsAffineOpen.imageIsOpenImmersion","line":721,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.imageIsOpenImmersion","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.image_of_isOpenImmersion`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.imageIsOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">imageIsOpenImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L719-L720","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_range","line":719,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_range","doc":"**Alias** of `AlgebraicGeometry.IsAffineOpen.range_fromSpec`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_range\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L717-L718","name":"AlgebraicGeometry.Scheme.affineBasisCoverIsAffine","line":717,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasisCoverIsAffine","doc":"**Alias** of `AlgebraicGeometry.Scheme.isAffine_affineBasisCover`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasisCoverIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCoverIsAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasisCover</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasisCover</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L715-L716","name":"AlgebraicGeometry.Scheme.affineCoverIsAffine","line":715,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineCoverIsAffine","doc":"**Alias** of `AlgebraicGeometry.Scheme.isAffine_affineCover`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineCoverIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineCoverIsAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineCover</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineCover</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L713-L714","name":"AlgebraicGeometry.topIsAffineOpen","line":713,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.topIsAffineOpen","doc":"**Alias** of `AlgebraicGeometry.isAffineOpen_top`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.topIsAffineOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">topIsAffineOpen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L711-L712","name":"AlgebraicGeometry.rangeIsAffineOpenOfOpenImmersion","line":711,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.rangeIsAffineOpenOfOpenImmersion","doc":"**Alias** of `AlgebraicGeometry.isAffineOpen_opensRange`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.rangeIsAffineOpenOfOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">rangeIsAffineOpenOfOpenImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">AlgebraicGeometry.Scheme.Hom.opensRange</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L709-L710","name":"AlgebraicGeometry.isAffineOfIso","line":709,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOfIso","doc":"**Alias** of `AlgebraicGeometry.isAffine_of_isIso`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOfIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffineOfIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L707-L708","name":"AlgebraicGeometry.SpecIsAffine","line":707,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.SpecIsAffine","doc":"**Alias** of `AlgebraicGeometry.isAffine_Spec`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.SpecIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">SpecIsAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L705-L706","name":"AlgebraicGeometry.isAffineAffineScheme","line":705,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineAffineScheme","doc":"**Alias** of `AlgebraicGeometry.isAffine_affineScheme`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineAffineScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffineAffineScheme</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L691-L701","name":"AlgebraicGeometry.Scheme.eq_zeroLocus_of_isClosed_of_isAffine","line":691,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.eq_zeroLocus_of_isClosed_of_isAffine","doc":"If `X` is an affine scheme, every closed set of `X` is the zero locus\nof a set of global sections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.eq_zeroLocus_of_isClosed_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">eq_zeroLocus_of_isClosed_of_isAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.zeroLocus</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L683-L687","name":"AlgebraicGeometry.Scheme.toΓSpec_image_zeroLocus_eq_of_isAffine","line":683,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.toΓSpec_image_zeroLocus_eq_of_isAffine","doc":"If `X` is affine, the image of the zero locus of global sections of `X` under `toΓSpecFun`\nis the zero locus in terms of the prime spectrum of `Γ(X, ⊤)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.toΓSpec_image_zeroLocus_eq_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">toΓSpec_image_zeroLocus_eq_of_isAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.hom</span>.val</span>.base</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.zeroLocus</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrimeSpectrum.html#PrimeSpectrum.zeroLocus\">PrimeSpectrum.zeroLocus</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L675-L677","name":"AlgebraicGeometry.Scheme.toΓSpec_preimage_zeroLocus_eq","line":675,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.toΓSpec_preimage_zeroLocus_eq","doc":"On a locally ringed space `X`, the preimage of the zero locus of the prime spectrum\nof `Γ(X, ⊤)` under `toΓSpecFun` agrees with the associated zero locus on `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.toΓSpec_preimage_zeroLocus_eq\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">toΓSpec_preimage_zeroLocus_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/GammaSpecAdjunction.html#AlgebraicGeometry.ΓSpec.adjunction\">AlgebraicGeometry.ΓSpec.adjunction</a>.unit</span>.app</span> <span class=\"fn\">X</span></span>)</span>.val</span>.base</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrimeSpectrum.html#PrimeSpectrum.zeroLocus\">PrimeSpectrum.zeroLocus</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.zeroLocus</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L641-L669","name":"AlgebraicGeometry.of_affine_open_cover","line":641,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.of_affine_open_cover","doc":"Let `P` be a predicate on the affine open sets of `X` satisfying\n1. If `P` holds on `U`, then `P` holds on the basic open set of every section on `U`.\n2. If `P` holds for a family of basic open sets covering `U`, then `P` holds for `U`.\n3. There exists an affine open cover of `X` each satisfying `P`.\n\nThen `P` holds for every affine open of `X`.\n\nThis is also known as the **Affine communication lemma** in [*The rising sea*][RisingSea]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.of_affine_open_cover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">of_affine_open_cover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iSup_U : <span class=\"fn\"><span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(basicOpen : <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span>)</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">U</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasicOpen</span> <span class=\"fn\">f</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(openCover : <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>) (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span>)</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span>)</span></span>)</span></span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> }</span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasicOpen</span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L616-L630","name":"AlgebraicGeometry.iSup_basicOpen_of_span_eq_top","line":616,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.iSup_basicOpen_of_span_eq_top","doc":"Given a spanning set of `Γ(X, U)`, the corresponding basic open sets cover `U`.\nSee `IsAffineOpen.basicOpen_union_eq_self_iff` for the inverse direction for affine open sets.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.iSup_basicOpen_of_span_eq_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">iSup_basicOpen_of_span_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L602-L608","name":"AlgebraicGeometry.IsAffineOpen.self_le_basicOpen_union_iff","line":602,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.self_le_basicOpen_union_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.self_le_basicOpen_union_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">self_le_basicOpen_union_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">⨆ (<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L574-L600","name":"AlgebraicGeometry.IsAffineOpen.basicOpen_union_eq_self_iff","line":574,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_union_eq_self_iff","doc":"In an affine open set `U`, a family of basic open covers `U` iff the sections span `Γ(X, U)`.\nSee `iSup_basicOpen_of_span_eq_top` for the inverse direction without the affine-ness assuption.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_union_eq_self_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpen_union_eq_self_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⨆ (<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L566-L568","name":"AlgebraicGeometry.Scheme.affineBasicOpen","line":566,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasicOpen","doc":"The basic open set of a section `f` on an affine open as an `X.affineOpens`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasicOpen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L565-L565","name":"AlgebraicGeometry.Scheme.affineBasicOpen_coe","line":565,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasicOpen_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineBasicOpen_coe\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasicOpen_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasicOpen</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L555-L562","name":"AlgebraicGeometry.IsAffineOpen.isLocalization_stalk","line":555,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_stalk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_stalk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isLocalization_stalk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#IsLocalization.AtPrime\">IsLocalization.AtPrime</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.stalk</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.primeIdealOf</span> <span class=\"fn\">x</span></span>)</span>.asIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L533-L552","name":"AlgebraicGeometry.IsAffineOpen.isLocalization_stalk'","line":533,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_stalk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_stalk'\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isLocalization_stalk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrimeSpectrum.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#IsLocalization.AtPrime\">IsLocalization.AtPrime</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.stalk</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">y</span>.asIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L521-L531","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_primeIdealOf","line":521,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_primeIdealOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_primeIdealOf\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_primeIdealOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.primeIdealOf</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L516-L519","name":"AlgebraicGeometry.IsAffineOpen.primeIdealOf","line":516,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.primeIdealOf","doc":"The prime ideal of `𝒪ₓ(U)` corresponding to a point `x : U`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.primeIdealOf\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">primeIdealOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrimeSpectrum.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L505-L513","name":"AlgebraicGeometry.exists_basicOpen_le_affine_inter","line":505,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.exists_basicOpen_le_affine_inter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.exists_basicOpen_le_affine_inter\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">exists_basicOpen_le_affine_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">V</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">V</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L489-L503","name":"AlgebraicGeometry.IsAffineOpen.basicOpen_basicOpen_is_basicOpen","line":489,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_basicOpen_is_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_basicOpen_is_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpen_basicOpen_is_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f'</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L484-L487","name":"AlgebraicGeometry.Γ_restrict_isLocalization","line":484,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Γ_restrict_isLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Γ_restrict_isLocalization\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Γ_restrict_isLocalization</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span></span>)</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L480-L482","name":"AlgebraicGeometry.IsAffineOpen.isLocalization_of_eq_basicOpen","line":480,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_of_eq_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_of_eq_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isLocalization_of_eq_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">V</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L466-L478","name":"AlgebraicGeometry.IsAffineOpen.appLE_eq_away_map","line":466,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.appLE_eq_away_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.appLE_eq_away_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">appLE_eq_away_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">Y</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">r</span></span>)</span></span>)</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away.map\">IsLocalization.Away.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">r</span></span>)</span></span>)</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span> <span class=\"fn\">V</span> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L461-L464","name":"AlgebraicGeometry.isLocalization_away_of_isAffine","line":461,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isLocalization_away_of_isAffine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isLocalization_away_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isLocalization_away_of_isAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L444-L459","name":"AlgebraicGeometry.IsAffineOpen.isLocalization_basicOpen","line":444,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isLocalization_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isLocalization_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L436-L442","name":"AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine_isIso","line":436,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine_isIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpenSectionsToAffine_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.basicOpenSectionsToAffine</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L431-L434","name":"AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine","line":431,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine","doc":"Given an affine open U and some `f : U`,\nthis is the canonical map `Γ(𝒪ₓ, D(f)) ⟶ Γ(Spec 𝒪ₓ(U), D(f))`\nThis is an isomorphism, as witnessed by an `IsIso` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpenSectionsToAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpenSectionsToAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L411-L426","name":"AlgebraicGeometry.IsAffineOpen.exists_basicOpen_le","line":411,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.exists_basicOpen_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.exists_basicOpen_le\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">exists_basicOpen_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L403-L409","name":"AlgebraicGeometry.IsAffineOpen.ι_basicOpen_preimage","line":403,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.ι_basicOpen_preimage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.ι_basicOpen_preimage\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">ι_basicOpen_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span>.ι</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L400-L401","name":"AlgebraicGeometry.IsAffineOpen.instIsAffineToSchemeBasicOpen","line":400,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.instIsAffineToSchemeBasicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.instIsAffineToSchemeBasicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">instIsAffineToSchemeBasicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L393-L398","name":"AlgebraicGeometry.IsAffineOpen.basicOpen","line":393,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L389-L391","name":"AlgebraicGeometry.IsAffineOpen.basicOpen_fromSpec_app","line":389,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_fromSpec_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.basicOpen_fromSpec_app\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">basicOpen_fromSpec_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.basicOpen</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span> <span class=\"fn\">U</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L380-L386","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_image_basicOpen","line":380,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_image_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_image_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_image_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L376-L378","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen","line":376,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_preimage_basicOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L371-L374","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen'","line":371,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_basicOpen'\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_preimage_basicOpen'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.basicOpen</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.ΓSpecIso\">AlgebraicGeometry.Scheme.ΓSpecIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.inv</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L366-L369","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_app_self","line":366,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_app_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_app_self\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_app_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.ΓSpecIso\">AlgebraicGeometry.Scheme.ΓSpecIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.inv</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.presheaf</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span>.op</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L365-L365","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_app_self_apply","line":365,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_app_self_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_app_self_apply\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_app_self_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span> <span class=\"fn\">U</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.presheaf</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.ΓSpecIso\">AlgebraicGeometry.Scheme.ΓSpecIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.inv</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L353-L363","name":"AlgebraicGeometry.IsAffineOpen.SpecΓIdentity_hom_app_fromSpec","line":353,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.SpecΓIdentity_hom_app_fromSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.SpecΓIdentity_hom_app_fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">SpecΓIdentity_hom_app_fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.ΓSpecIso\">AlgebraicGeometry.Scheme.ΓSpecIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span> <span class=\"fn\">U</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>)</span>.presheaf</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L347-L351","name":"AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_self","line":347,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec_preimage_self\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec_preimage_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L341-L344","name":"AlgebraicGeometry.Scheme.compactSpace_of_isAffine","line":341,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.compactSpace_of_isAffine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.compactSpace_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">compactSpace_of_isAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L337-L339","name":"AlgebraicGeometry.affineOpensRestrict_symm_apply_coe","line":337,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict_symm_apply_coe\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineOpensRestrict_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\">{ <span class=\"fn\">V</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span> // <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">U</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict\">AlgebraicGeometry.affineOpensRestrict</a> <span class=\"fn\">U</span></span>)</span>.symm</span> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span>.ι</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">V</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L332-L334","name":"AlgebraicGeometry.affineOpensRestrict","line":332,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict","doc":"The affine open sets of an open subscheme\ncorresponds to the affine open sets containing in the subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineOpensRestrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">U</span></span>)</span>.affineOpens</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">{ <span class=\"fn\">V</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span> // <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">U</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L331-L331","name":"AlgebraicGeometry.affineOpensRestrict_apply_coe_coe","line":331,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict_apply_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict_apply_coe_coe\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineOpensRestrict_apply_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">U</span></span>)</span>.affineOpens</span></span>),\n  <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.affineOpensRestrict\">AlgebraicGeometry.affineOpensRestrict</a> <span class=\"fn\">U</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\"><span class=\"fn\">U</span>.ι</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L321-L327","name":"AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv","line":321,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv","doc":"The affine open sets of an open subscheme corresponds to\nthe affine open sets containing in the image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsOpenImmersion</span>.<span class=\"name\">affineOpensEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">{ <span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span> // <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">AlgebraicGeometry.Scheme.Hom.opensRange</a> <span class=\"fn\">f</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L320-L320","name":"AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_apply_coe_coe","line":320,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_apply_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_apply_coe_coe\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsOpenImmersion</span>.<span class=\"name\">affineOpensEquiv_apply_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv\">AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">U</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L320-L320","name":"AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_symm_apply_coe","line":320,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv_symm_apply_coe\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsOpenImmersion</span>.<span class=\"name\">affineOpensEquiv_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\">{ <span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span> // <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">AlgebraicGeometry.Scheme.Hom.opensRange</a> <span class=\"fn\">f</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv\">AlgebraicGeometry.IsOpenImmersion.affineOpensEquiv</a> <span class=\"fn\">f</span></span>)</span>.symm</span> <span class=\"fn\">U</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L306-L316","name":"AlgebraicGeometry.Scheme.Hom.isAffineOpen_iff_of_isOpenImmersion","line":306,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.Hom.isAffineOpen_iff_of_isOpenImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.Hom.isAffineOpen_iff_of_isOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">Hom</span>.<span class=\"name\">isAffineOpen_iff_of_isOpenImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.Hom</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.opensFunctor</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L301-L304","name":"AlgebraicGeometry.IsAffineOpen.preimage_of_isIso","line":301,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.preimage_of_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.preimage_of_isIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">preimage_of_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">Y</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L294-L299","name":"AlgebraicGeometry.IsAffineOpen.image_of_isOpenImmersion","line":294,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.image_of_isOpenImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.image_of_isOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">image_of_isOpenImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensFunctor\">AlgebraicGeometry.Scheme.Hom.opensFunctor</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L287-L292","name":"AlgebraicGeometry.IsAffineOpen.isCompact","line":287,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isCompact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isCompact\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isCompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L277-L285","name":"AlgebraicGeometry.IsAffineOpen.map_fromSpec","line":277,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.map_fromSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.map_fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">map_fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">V</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">hV</span>.fromSpec</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L276-L276","name":"AlgebraicGeometry.IsAffineOpen.map_fromSpec_assoc","line":276,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.map_fromSpec_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.map_fromSpec_assoc\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">map_fromSpec_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">V</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.map</span> <span class=\"fn\">f</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">hV</span>.fromSpec</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L274-L274","name":"AlgebraicGeometry.IsAffineOpen.opensRange_fromSpec","line":274,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.opensRange_fromSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.opensRange_fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">opensRange_fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">AlgebraicGeometry.Scheme.Hom.opensRange</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L265-L271","name":"AlgebraicGeometry.IsAffineOpen.range_fromSpec","line":265,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.range_fromSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.range_fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">range_fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span>.val</span>.base</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L259-L262","name":"AlgebraicGeometry.IsAffineOpen.isOpenImmersion_fromSpec","line":259,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isOpenImmersion_fromSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.isOpenImmersion_fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">isOpenImmersion_fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\"><span class=\"fn\">hU</span>.fromSpec</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L253-L257","name":"AlgebraicGeometry.IsAffineOpen.fromSpec","line":253,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec","doc":"The open immersion `Spec Γ(X, U) ⟶ X` for an affine `U`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen.fromSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span>.<span class=\"name\">fromSpec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L233-L246","name":"AlgebraicGeometry.isBasis_basicOpen","line":233,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isBasis_basicOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isBasis_basicOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isBasis_basicOpen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens.IsBasis\">TopologicalSpace.Opens.IsBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L228-L231","name":"AlgebraicGeometry.Scheme.map_PrimeSpectrum_basicOpen_of_affine","line":228,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.map_PrimeSpectrum_basicOpen_of_affine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.map_PrimeSpectrum_basicOpen_of_affine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">map_PrimeSpectrum_basicOpen_of_affine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Γ\">AlgebraicGeometry.Scheme.Γ</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.hom</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.basicOpen</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L221-L226","name":"AlgebraicGeometry.iSup_affineOpens_eq_top","line":221,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.iSup_affineOpens_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.iSup_affineOpens_eq_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">iSup_affineOpens_eq_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>), <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L213-L219","name":"AlgebraicGeometry.isBasis_affine_open","line":213,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isBasis_affine_open","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isBasis_affine_open\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isBasis_affine_open</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens.IsBasis\">TopologicalSpace.Opens.IsBasis</a> <span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L210-L211","name":"AlgebraicGeometry.instIsAffineObjOpenCoverOfIsIsoIdScheme","line":210,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineObjOpenCoverOfIsIsoIdScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineObjOpenCoverOfIsIsoIdScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">instIsAffineObjOpenCoverOfIsIsoIdScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.openCoverOfIsIso\">AlgebraicGeometry.Scheme.openCoverOfIsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.openCoverOfIsIso\">AlgebraicGeometry.Scheme.openCoverOfIsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L206-L208","name":"AlgebraicGeometry.Scheme.isAffine_affineOpenCover","line":206,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineOpenCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineOpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isAffine_affineOpenCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝒰 : <span class=\"fn\"><span class=\"fn\">X</span>.AffineOpenCover</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">𝒰</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.openCover</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L202-L204","name":"AlgebraicGeometry.Scheme.isAffine_affineBasisCover","line":202,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineBasisCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineBasisCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isAffine_affineBasisCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasisCover</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineBasisCover</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L198-L200","name":"AlgebraicGeometry.Scheme.isAffine_affineCover","line":198,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isAffine_affineCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isAffine_affineCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineCover</span>.J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.affineCover</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L193-L196","name":"AlgebraicGeometry.isAffineOpen_top","line":193,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOpen_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOpen_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffineOpen_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L188-L191","name":"AlgebraicGeometry.isAffineOpen_opensRange","line":188,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOpen_opensRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffineOpen_opensRange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffineOpen_opensRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">AlgebraicGeometry.Scheme.Hom.opensRange</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L185-L186","name":"AlgebraicGeometry.instIsAffineToSchemeValOpensMemSetAffineOpens","line":185,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineToSchemeValOpensMemSetAffineOpens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineToSchemeValOpensMemSetAffineOpens\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">instIsAffineToSchemeValOpensMemSetAffineOpens</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L182-L183","name":"AlgebraicGeometry.Scheme.affineOpens","line":182,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineOpens","doc":"The set of affine opens as a subset of `opens X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.affineOpens\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L178-L179","name":"AlgebraicGeometry.IsAffineOpen","line":178,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen","doc":"An open subset of a scheme is affine if the open subscheme is affine. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffineOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">X</span>.Opens</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L168-L173","name":"AlgebraicGeometry.AffineScheme.forgetToScheme_preservesLimits","line":168,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_preservesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_preservesLimits\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme_preservesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">CategoryTheory.Limits.PreservesLimits</a> <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\">AlgebraicGeometry.AffineScheme.forgetToScheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L166-L166","name":"AlgebraicGeometry.AffineScheme.Γ_preservesLimits","line":166,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ_preservesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ_preservesLimits\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Γ_preservesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">CategoryTheory.Limits.PreservesLimits</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ\">AlgebraicGeometry.AffineScheme.Γ</a>.rightOp</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L161-L164","name":"AlgebraicGeometry.AffineScheme.hasLimits","line":161,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.hasLimits\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L157-L159","name":"AlgebraicGeometry.AffineScheme.hasColimits","line":157,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.hasColimits\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L154-L155","name":"AlgebraicGeometry.AffineScheme.ΓIsEquiv","line":154,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.ΓIsEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.ΓIsEquiv\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">ΓIsEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ\">AlgebraicGeometry.AffineScheme.Γ</a>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L152-L152","name":"AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatOpRightOpΓ","line":152,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatOpRightOpΓ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatOpRightOpΓ\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">instIsEquivalenceOppositeCommRingCatOpRightOpΓ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ\">AlgebraicGeometry.AffineScheme.Γ</a>.rightOp</span>.op</span>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L150-L150","name":"AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatRightOpΓ","line":150,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatRightOpΓ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.instIsEquivalenceOppositeCommRingCatRightOpΓ\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">instIsEquivalenceOppositeCommRingCatRightOpΓ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ\">AlgebraicGeometry.AffineScheme.Γ</a>.rightOp</span>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L147-L148","name":"AlgebraicGeometry.AffineScheme.equivCommRingCat","line":147,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.equivCommRingCat","doc":"The category of affine schemes is equivalent to the category of commutative rings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.equivCommRingCat\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">equivCommRingCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L143-L144","name":"AlgebraicGeometry.AffineScheme.Γ","line":143,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ","doc":"The global section functor of an affine scheme. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Γ\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Γ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L139-L140","name":"AlgebraicGeometry.AffineScheme.forgetToScheme_faithful","line":139,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_faithful\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme_faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\">AlgebraicGeometry.AffineScheme.forgetToScheme</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L135-L136","name":"AlgebraicGeometry.AffineScheme.forgetToScheme_full","line":135,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_full\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme_full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\">AlgebraicGeometry.AffineScheme.forgetToScheme</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L131-L132","name":"AlgebraicGeometry.AffineScheme.forgetToScheme","line":131,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme","doc":"The forgetful functor `AffineScheme ⥤ Scheme`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L130-L130","name":"AlgebraicGeometry.AffineScheme.forgetToScheme_obj","line":130,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Spec\">AlgebraicGeometry.Scheme.Spec</a>.essImage</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\">AlgebraicGeometry.AffineScheme.forgetToScheme</a>.obj</span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L130-L130","name":"AlgebraicGeometry.AffineScheme.forgetToScheme_map","line":130,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">forgetToScheme_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a> <span class=\"fn\">CategoryTheory.FullSubcategory.obj</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.forgetToScheme\">AlgebraicGeometry.AffineScheme.forgetToScheme</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L127-L127","name":"AlgebraicGeometry.AffineScheme.Spec_essSurj","line":127,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_essSurj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_essSurj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Spec_essSurj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec\">AlgebraicGeometry.AffineScheme.Spec</a>.EssSurj</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L124-L124","name":"AlgebraicGeometry.AffineScheme.Spec_faithful","line":124,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_faithful\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Spec_faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec\">AlgebraicGeometry.AffineScheme.Spec</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L121-L121","name":"AlgebraicGeometry.AffineScheme.Spec_full","line":121,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec_full\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Spec_full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec\">AlgebraicGeometry.AffineScheme.Spec</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L117-L118","name":"AlgebraicGeometry.AffineScheme.Spec","line":117,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec","doc":"The `Spec` functor into the category of affine schemes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.Spec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">Spec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L110-L112","name":"AlgebraicGeometry.arrowIsoSpecΓOfIsAffine","line":110,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.arrowIsoSpecΓOfIsAffine","doc":"If `f : X ⟶ Y` is a morphism between affine schemes, the corresponding arrow is isomorphic\nto the arrow of the morphism on prime spectra induced by the map on global sections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.arrowIsoSpecΓOfIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">arrowIsoSpecΓOfIsAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">CategoryTheory.Arrow.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">CategoryTheory.Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Γ\">AlgebraicGeometry.Scheme.Γ</a>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.op</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L104-L105","name":"AlgebraicGeometry.isAffine_of_isIso","line":104,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_of_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_of_isIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffine_of_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L101-L102","name":"AlgebraicGeometry.isAffine_Spec","line":101,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_Spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_Spec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffine_Spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L98-L99","name":"AlgebraicGeometry.instIsAffineObjOppositeCommRingCatSchemeSpec","line":98,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineObjOppositeCommRingCatSchemeSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.instIsAffineObjOppositeCommRingCatSchemeSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">instIsAffineObjOppositeCommRingCatSchemeSpec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Spec\">AlgebraicGeometry.Scheme.Spec</a>.obj</span> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L95-L96","name":"AlgebraicGeometry.isAffine_affineScheme","line":95,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_affineScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.isAffine_affineScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isAffine_affineScheme</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L91-L93","name":"AlgebraicGeometry.mem_Spec_essImage","line":91,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.mem_Spec_essImage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.mem_Spec_essImage\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">mem_Spec_essImage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Spec\">AlgebraicGeometry.Scheme.Spec</a>.essImage</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L87-L89","name":"AlgebraicGeometry.AffineScheme.ofHom","line":87,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.ofHom","doc":"Type check a morphism of schemes as a morphism in `AffineScheme`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.ofHom\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.of\">AlgebraicGeometry.AffineScheme.of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.of\">AlgebraicGeometry.AffineScheme.of</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L83-L84","name":"AlgebraicGeometry.AffineScheme.of","line":83,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.of","doc":"Construct an affine scheme from a scheme. Also see `AffineScheme.mk` for a non-typeclass\nversion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.of\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L78-L79","name":"AlgebraicGeometry.AffineScheme.mk","line":78,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.mk","doc":"Construct an affine scheme from a scheme and the information that it is affine.\nAlso see `AffineScheme.of` for a typeclass version. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span> → <a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\">AlgebraicGeometry.AffineScheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L77-L77","name":"AlgebraicGeometry.AffineScheme.mk_obj","line":77,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.mk_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.mk_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span>.<span class=\"name\">mk_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme.mk\">AlgebraicGeometry.AffineScheme.mk</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span>)</span>.obj</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L70-L73","name":"AlgebraicGeometry.Scheme.isoSpec_inv_naturality","line":70,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_inv_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_inv_naturality\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec_inv_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.isoSpec</span>.inv</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.inv</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L69-L69","name":"AlgebraicGeometry.Scheme.isoSpec_inv_naturality_assoc","line":69,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_inv_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_inv_naturality_assoc\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec_inv_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.isoSpec</span>.inv</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.inv</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L65-L67","name":"AlgebraicGeometry.Scheme.isoSpec_hom_naturality","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom_naturality\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec_hom_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.isoSpec</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L64-L64","name":"AlgebraicGeometry.Scheme.isoSpec_hom_naturality_assoc","line":64,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom_naturality_assoc\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec_hom_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.isoSpec</span>.hom</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L61-L62","name":"AlgebraicGeometry.Scheme.isoSpec","line":61,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec","doc":"The canonical isomorphism `X ≅ Spec Γ(X)` for an affine scheme. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">AlgebraicGeometry.Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L60-L60","name":"AlgebraicGeometry.Scheme.isoSpec_hom","line":60,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.Scheme.isoSpec_hom\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isoSpec_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.isoSpec</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/GammaSpecAdjunction.html#AlgebraicGeometry.ΓSpec.adjunction\">AlgebraicGeometry.ΓSpec.adjunction</a>.unit</span>.app</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L55-L55","name":"AlgebraicGeometry.IsAffine.affine","line":55,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine.affine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine.affine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffine</span>.<span class=\"name\">affine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/GammaSpecAdjunction.html#AlgebraicGeometry.ΓSpec.adjunction\">AlgebraicGeometry.ΓSpec.adjunction</a>.unit</span>.app</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L54-L54","name":"AlgebraicGeometry.IsAffine.mk","line":54,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffine</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(affine : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/GammaSpecAdjunction.html#AlgebraicGeometry.ΓSpec.adjunction\">AlgebraicGeometry.ΓSpec.adjunction</a>.unit</span>.app</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L54-L55","name":"AlgebraicGeometry.IsAffine","line":54,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine","doc":"A Scheme is affine if the canonical map `X ⟶ Spec Γ(X)` is an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/AffineScheme.lean#L49-L51","name":"AlgebraicGeometry.AffineScheme","line":49,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme","doc":"The category of affine schemes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.AffineScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">AffineScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}