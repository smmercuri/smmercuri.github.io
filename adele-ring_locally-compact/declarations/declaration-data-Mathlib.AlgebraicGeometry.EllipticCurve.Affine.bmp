{"name":"Mathlib.AlgebraicGeometry.EllipticCurve.Affine","instances":[{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInhabited","className":"Inhabited"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instZero","className":"Zero"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instNeg","className":"Neg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInvolutiveNeg","className":"InvolutiveNeg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAddPoint","className":"Add"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAddZeroClassPoint","className":"AddZeroClass"}],"imports":["Init","Mathlib.Algebra.Polynomial.Bivariate","Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L974-L976","name":"EllipticCurve.Affine.nonsingular","line":974,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.Affine.nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.Affine.nonsingular\"><span class=\"name\">EllipticCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#EllipticCurve\">EllipticCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.toAffine</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L966-L968","name":"EllipticCurve.toAffine","line":966,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.toAffine","doc":"The coercion from an elliptic curve to a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#EllipticCurve.toAffine\"><span class=\"name\">EllipticCurve</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#EllipticCurve\">EllipticCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L959-L959","name":"WeierstrassCurve.Affine.map_addY'","line":959,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY'","doc":"**Alias** of `WeierstrassCurve.Affine.map_negAddY`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addY'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L958-L958","name":"WeierstrassCurve.Affine.baseChange_addY'","line":958,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'","doc":"**Alias** of `WeierstrassCurve.Affine.baseChange_negAddY`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L957-L957","name":"WeierstrassCurve.Affine.nonsingular_add'","line":957,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add'","doc":"**Alias** of `WeierstrassCurve.Affine.nonsingular_negAdd`.\n\n---\n\nThe negated addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L956-L956","name":"WeierstrassCurve.Affine.equation_add'","line":956,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add'","doc":"**Alias** of `WeierstrassCurve.Affine.equation_negAdd`.\n\n---\n\nThe negated addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L955-L955","name":"WeierstrassCurve.Affine.Yeq_of_Yne","line":955,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Yne","doc":"**Alias** of `WeierstrassCurve.Affine.Y_eq_of_Y_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Yeq_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L954-L954","name":"WeierstrassCurve.Affine.Yeq_of_Xeq","line":954,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Xeq","doc":"**Alias** of `WeierstrassCurve.Affine.Y_eq_of_X_eq`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Yeq_of_Xeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Yeq_of_Xeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L953-L953","name":"WeierstrassCurve.Affine.slope_of_Yne_eq_eval","line":953,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne_eq_eval","doc":"**Alias** of `WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne_eq_eval\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yne_eq_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L952-L952","name":"WeierstrassCurve.Affine.slope_of_Xne","line":952,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Xne","doc":"**Alias** of `WeierstrassCurve.Affine.slope_of_X_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Xne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Xne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y₂</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L951-L951","name":"WeierstrassCurve.Affine.slope_of_Yne","line":951,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne","doc":"**Alias** of `WeierstrassCurve.Affine.slope_of_Y_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L950-L950","name":"WeierstrassCurve.Affine.slope_of_Yeq","line":950,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yeq","doc":"**Alias** of `WeierstrassCurve.Affine.slope_of_Y_eq`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L948-L949","name":"WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero","line":948,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero","doc":"**Alias** of `WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add_of_eval_derivative_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add_of_eval_derivative_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.derivative</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L947-L947","name":"WeierstrassCurve.Affine.addY'","line":947,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY'","doc":"**Alias** of `WeierstrassCurve.Affine.negAddY`.\n\n---\n\nThe $Y$-coordinate of the negated addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L938-L941","name":"WeierstrassCurve.Affine.Point.map_baseChange","line":938,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\">WeierstrassCurve.Affine.Point.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\">WeierstrassCurve.Affine.Point.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L935-L936","name":"WeierstrassCurve.Affine.Point.baseChange","line":935,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange","doc":"The group homomorphism from `W⟮F⟯` to `W⟮K⟯` induced by the base change from `F` to `K`,\nwhere `W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L926-L930","name":"WeierstrassCurve.Affine.Point.map_injective","line":926,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_injective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L923-L924","name":"WeierstrassCurve.Affine.Point.map_map","line":923,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">P</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L920-L921","name":"WeierstrassCurve.Affine.Point.map_id","line":920,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_id\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#Algebra.ofId\">Algebra.ofId</a> <span class=\"fn\">F</span> <span class=\"fn\">F</span></span>)</span></span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L916-L918","name":"WeierstrassCurve.Affine.Point.map_some","line":916,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L913-L914","name":"WeierstrassCurve.Affine.Point.map_zero","line":913,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">WeierstrassCurve.Affine.Point.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L896-L911","name":"WeierstrassCurve.Affine.Point.map","line":896,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map","doc":"The group homomorphism from `W⟮F⟯` to `W⟮K⟯` induced by an algebra homomorphism `f : F →ₐ[S] K`,\nwhere `W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L890-L892","name":"WeierstrassCurve.Affine.Point.mapFun","line":890,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.mapFun","doc":"The function from `W⟮F⟯` to `W⟮K⟯` induced by an algebra homomorphism `f : F →ₐ[S] K`,\nwhere `W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.mapFun\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">mapFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">WeierstrassCurve.Affine.Point</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L880-L884","name":"WeierstrassCurve.Affine.baseChange_slope","line":880,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">K</span></span>)</span>.toAffine</span>.slope</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">F</span></span>)</span>.toAffine</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L870-L874","name":"WeierstrassCurve.Affine.baseChange_addY","line":870,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.addY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L864-L868","name":"WeierstrassCurve.Affine.baseChange_negAddY","line":864,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negAddY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L858-L862","name":"WeierstrassCurve.Affine.baseChange_addX","line":858,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.addX</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L852-L856","name":"WeierstrassCurve.Affine.baseChange_addPolynomial","line":852,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.addPolynomial</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.addPolynomial</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L847-L850","name":"WeierstrassCurve.Affine.baseChange_negY","line":847,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.negY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L842-L845","name":"WeierstrassCurve.Affine.baseChange_negPolynomial","line":842,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.negPolynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.negPolynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L836-L840","name":"WeierstrassCurve.Affine.baseChange_nonsingular","line":836,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L831-L833","name":"WeierstrassCurve.Affine.baseChange_polynomialY","line":831,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.polynomialY</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.polynomialY</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L827-L829","name":"WeierstrassCurve.Affine.baseChange_polynomialX","line":827,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.polynomialX</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.polynomialX</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L822-L825","name":"WeierstrassCurve.Affine.baseChange_equation","line":822,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L817-L819","name":"WeierstrassCurve.Affine.baseChange_polynomial","line":817,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">B</span></span>)</span>.toAffine</span>.polynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">A</span></span>)</span>.toAffine</span>.polynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L795-L805","name":"WeierstrassCurve.Affine.map_slope","line":795,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.slope</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L791-L793","name":"WeierstrassCurve.Affine.map_addY","line":791,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.addY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">WeierstrassCurve.toAffine</a> <span class=\"fn\">W</span></span>)</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L786-L789","name":"WeierstrassCurve.Affine.map_negAddY","line":786,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negAddY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.negAddY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L781-L784","name":"WeierstrassCurve.Affine.map_addX","line":781,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.addX</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L775-L779","name":"WeierstrassCurve.Affine.map_addPolynomial","line":775,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.addPolynomial</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L770-L773","name":"WeierstrassCurve.Affine.map_linePolynomial","line":770,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_linePolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_linePolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_linePolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">WeierstrassCurve.Affine.linePolynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">WeierstrassCurve.Affine.linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L766-L768","name":"WeierstrassCurve.Affine.map_negY","line":766,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.negY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L761-L764","name":"WeierstrassCurve.Affine.map_negPolynomial","line":761,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.negPolynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L756-L759","name":"WeierstrassCurve.Affine.map_nonsingular","line":756,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L751-L753","name":"WeierstrassCurve.Affine.map_polynomialY","line":751,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.polynomialY</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L747-L749","name":"WeierstrassCurve.Affine.map_polynomialX","line":747,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.polynomialX</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L743-L745","name":"WeierstrassCurve.Affine.map_equation","line":743,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L739-L740","name":"WeierstrassCurve.Affine.Equation.map","line":739,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Equation</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">WeierstrassCurve.Affine.Equation</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L734-L736","name":"WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y","line":734,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_baseChange_polynomial_X_Y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">Polynomial.X</span></span>)</span> <span class=\"fn\">Polynomial.X</span>\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>)</span>.toAffine</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L730-L732","name":"WeierstrassCurve.Affine.map_polynomial","line":730,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>.toAffine</span>.polynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L718-L718","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Xne'","line":718,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne'","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_of_X_ne'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Xne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L717-L717","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Xne","line":717,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_of_X_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Xne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Xne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L716-L716","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yne'","line":716,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne'","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_self_of_Y_ne'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L715-L715","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yne","line":715,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_self_of_Y_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L714-L714","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yne'","line":714,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne'","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_of_Y_ne'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L713-L713","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yne","line":713,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_of_Y_ne`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L712-L712","name":"WeierstrassCurve.Affine.Point.some_add_self_of_Yeq","line":712,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yeq","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_self_of_Y_eq`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_self_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_self_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L711-L711","name":"WeierstrassCurve.Affine.Point.some_add_some_of_Yeq","line":711,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yeq","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_of_Y_eq`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_add_some_of_Yeq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_add_some_of_Yeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L707-L709","name":"WeierstrassCurve.Affine.Point.add_of_X_ne'","line":707,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_X_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L703-L705","name":"WeierstrassCurve.Affine.Point.add_of_X_ne","line":703,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L698-L700","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_ne'","line":698,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L694-L696","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_ne","line":694,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L688-L691","name":"WeierstrassCurve.Affine.Point.add_of_Y_ne'","line":688,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L683-L686","name":"WeierstrassCurve.Affine.Point.add_of_Y_ne","line":683,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L678-L680","name":"WeierstrassCurve.Affine.Point.add_of_imp","line":678,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_imp\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L673-L675","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_eq","line":673,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L668-L670","name":"WeierstrassCurve.Affine.Point.add_of_Y_eq","line":668,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L664-L665","name":"WeierstrassCurve.Affine.Point.instAddZeroClassPoint","line":664,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClassPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClassPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddZeroClassPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L661-L662","name":"WeierstrassCurve.Affine.Point.add_def","line":661,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.add</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L657-L658","name":"WeierstrassCurve.Affine.Point.instAddPoint","line":657,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddPoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddPoint\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L650-L655","name":"WeierstrassCurve.Affine.Point.add","line":650,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add","doc":"The addition of two nonsingular rational points on `W`.\n\nGiven two nonsingular rational points `P` and `Q` on `W`, use `P + Q` instead of `add P Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L640-L641","name":"WeierstrassCurve.Affine.Point.instInvolutiveNeg","line":640,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNeg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInvolutiveNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg\">InvolutiveNeg</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L637-L638","name":"WeierstrassCurve.Affine.Point.neg_some","line":637,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L633-L634","name":"WeierstrassCurve.Affine.Point.neg_zero","line":633,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">-<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L629-L630","name":"WeierstrassCurve.Affine.Point.neg_def","line":629,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><span class=\"fn\">W</span>.Point</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.neg</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L625-L626","name":"WeierstrassCurve.Affine.Point.instNeg","line":625,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNeg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L621-L623","name":"WeierstrassCurve.Affine.Point.neg","line":621,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg","doc":"The negation of a nonsingular rational point on `W`.\n\nGiven a nonsingular rational point `P` on `W`, use `-P` instead of `neg P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span> → <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L616-L616","name":"WeierstrassCurve.Affine.Point.some_ne_zero","line":616,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">WeierstrassCurve.Affine.Point.some</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L613-L614","name":"WeierstrassCurve.Affine.Point.zero_def","line":613,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">WeierstrassCurve.Affine.Point.zero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L609-L610","name":"WeierstrassCurve.Affine.Point.instZero","line":609,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L606-L607","name":"WeierstrassCurve.Affine.Point.instInhabited","line":606,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabited\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">W</span>.Point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L599-L600","name":"WeierstrassCurve.Affine.«term_⟮_⟯»","line":599,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯»","doc":"For an algebraic extension `S` of `R`, the type of nonsingular `S`-rational points on `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯»\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">«term_⟮_⟯»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L599-L600","name":"WeierstrassCurve.Affine.«term_⟮_⟯».delab","line":599,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯».delab","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯».delab\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">«term_⟮_⟯»</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L597-L597","name":"WeierstrassCurve.Affine.Point.some","line":597,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L596-L596","name":"WeierstrassCurve.Affine.Point.zero","line":596,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.Point</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L595-L597","name":"WeierstrassCurve.Affine.Point","line":595,"kind":"inductive","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point","doc":"A nonsingular rational point on a Weierstrass curve `W` in affine coordinates. This is either\nthe unique point at infinity `WeierstrassCurve.Affine.Point.zero` or the nonsingular affine points\n`WeierstrassCurve.Affine.Point.some` $(x, y)$ satisfying the Weierstrass equation of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L578-L584","name":"WeierstrassCurve.Affine.addY_sub_negY_addY","line":578,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY_sub_negY_addY","doc":"The formula\nψ(P₁ + P₂) = (ψ(P₂)(x(P₁) - x(P₃)) - ψ(P₁)(x(P₂) - x(P₃))) / (x(P₂) - x(P₁)),\nwhere ψ(x,y) = 2y + a₁x + a₃. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY_sub_negY_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY_sub_negY_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L568-L573","name":"WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X","line":568,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X","doc":"The formula y(P₁)(x(P₂) - x(P₃)) + y(P₂)(x(P₃) - x(P₁)) + y(P₃)(x(P₁) - x(P₂)) = 0,\nassuming that P₁ + P₂ + P₃ = O. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">cyclic_sum_Y_mul_X_sub_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L559-L564","name":"WeierstrassCurve.Affine.addX_eq_addX_negY_sub","line":559,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX_eq_addX_negY_sub","doc":"The formula x(P₁ + P₂) = x(P₁ - P₂) - ψ(P₁)ψ(P₂) / (x(P₂) - x(P₁))²,\nwhere ψ(x,y) = 2y + a₁x + a₃. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX_eq_addX_negY_sub\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addX_eq_addX_negY_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L550-L553","name":"WeierstrassCurve.Affine.nonsingular_add","line":550,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add","doc":"The addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L532-L547","name":"WeierstrassCurve.Affine.nonsingular_negAdd","line":532,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd","doc":"The negated addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_negAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L522-L529","name":"WeierstrassCurve.Affine.derivative_addPolynomial_slope","line":522,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">derivative_addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.derivative</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>         <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L517-L520","name":"WeierstrassCurve.Affine.equation_add","line":517,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add","doc":"The addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L509-L514","name":"WeierstrassCurve.Affine.equation_negAdd","line":509,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_negAdd","doc":"The negated addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_negAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_negAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L480-L506","name":"WeierstrassCurve.Affine.addPolynomial_slope","line":480,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">x₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span>)</span></span>)</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L476-L478","name":"WeierstrassCurve.Affine.Y_eq_of_Y_ne","line":476,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_eq_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L470-L474","name":"WeierstrassCurve.Affine.Y_eq_of_X_eq","line":470,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_X_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_X_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_eq_of_X_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L463-L468","name":"WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval","line":463,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_ne_eq_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L459-L461","name":"WeierstrassCurve.Affine.slope_of_X_ne","line":459,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y₂</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L453-L456","name":"WeierstrassCurve.Affine.slope_of_Y_ne","line":453,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₁</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L448-L450","name":"WeierstrassCurve.Affine.slope_of_Y_eq","line":448,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.slope</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L440-L443","name":"WeierstrassCurve.Affine.slope","line":440,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope","doc":"The slope of the line through two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`.\nIf $x_1 \\ne x_2$, then this line is the secant of `W` through $(x_1, y_1)$ and $(x_2, y_2)$,\nand has slope $(y_1 - y_2) / (x_1 - x_2)$. Otherwise, if $y_1 \\ne -y_1 - a_1x_1 - a_3$,\nthen this line is the tangent of `W` at $(x_1, y_1) = (x_2, y_2)$, and has slope\n$(3x_1^2 + 2a_2x_1 + a_4 - a_1y_1) / (2y_1 + a_1x_1 + a_3)$. Otherwise, this line is vertical,\nand has undefined slope, in which case this function returns the value 0.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $y_2$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₂ : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L410-L422","name":"WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero","line":410,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_negAdd_of_eval_derivative_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.derivative</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L407-L408","name":"WeierstrassCurve.Affine.nonsingular_neg","line":407,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg","doc":"The negation of a nonsingular affine point in `W` is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L403-L404","name":"WeierstrassCurve.Affine.nonsingular_neg_of","line":403,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L400-L401","name":"WeierstrassCurve.Affine.equation_neg","line":400,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg","doc":"The negation of an affine point in `W` lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L396-L397","name":"WeierstrassCurve.Affine.equation_neg_of","line":396,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L388-L392","name":"WeierstrassCurve.Affine.equation_add_iff","line":388,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negAddY</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addX</span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">L</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L383-L386","name":"WeierstrassCurve.Affine.nonsingular_neg_iff","line":383,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L378-L381","name":"WeierstrassCurve.Affine.equation_neg_iff","line":378,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L375-L376","name":"WeierstrassCurve.Affine.addY","line":375,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY","doc":"The $Y$-coordinate of the addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L367-L368","name":"WeierstrassCurve.Affine.negAddY","line":367,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY","doc":"The $Y$-coordinate of the negated addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $y_1$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L359-L360","name":"WeierstrassCurve.Affine.addX","line":359,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX","doc":"The $X$-coordinate of the addition of two affine points $(x_1, y_1)$ and $(x_2, y_2)$ in `W`,\nwhere the line through them is not vertical and has a slope of $L$.\n\nThis depends on `W`, and has argument order: $x_1$, $x_2$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₂ : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L345-L352","name":"WeierstrassCurve.Affine.addPolynomial_eq","line":345,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span>,\n        <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">L</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span> }</span>.toPoly</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L337-L343","name":"WeierstrassCurve.Affine.C_addPolynomial","line":337,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">C_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.addPolynomial</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">WeierstrassCurve.Affine.linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">WeierstrassCurve.Affine.linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">L</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L334-L335","name":"WeierstrassCurve.Affine.addPolynomial","line":334,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial","doc":"The polynomial obtained by substituting the line $Y = L*(X - x) + y$, with a slope of $L$\nthat passes through an affine point $(x, y)$, into the polynomial $W(X, Y)$ associated to `W`.\nIf such a line intersects `W` at another point $(x', y')$, then the roots of this polynomial are\nprecisely $x$, $x'$, and the $X$-coordinate of the addition of $(x, y)$ and $(x', y')$.\n\nThis depends on `W`, and has argument order: $x$, $y$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L325-L326","name":"WeierstrassCurve.Affine.linePolynomial","line":325,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial","doc":"The polynomial $L(X - x) + y$ associated to the line $Y = L(X - x) + y$,\nwith a slope of $L$ that passes through an affine point $(x, y)$.\n\nThis does not depend on `W`, and has argument order: $x$, $y$, $L$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">linePolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(L : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L317-L319","name":"WeierstrassCurve.Affine.eval_negPolynomial","line":317,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L312-L314","name":"WeierstrassCurve.Affine.negY_negY","line":312,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.negY</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L309-L310","name":"WeierstrassCurve.Affine.negY","line":309,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY","doc":"The $Y$-coordinate of the negation of an affine point in `W`.\n\nThis depends on `W`, and has argument order: $x$, $y$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L302-L303","name":"WeierstrassCurve.Affine.Y_sub_negPolynomial","line":302,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_sub_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L299-L300","name":"WeierstrassCurve.Affine.Y_sub_polynomialY","line":299,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_sub_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.negPolynomial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L296-L297","name":"WeierstrassCurve.Affine.negPolynomial","line":296,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial","doc":"The polynomial $-Y - a_1X - a_3$ associated to negation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L284-L287","name":"WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","line":284,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","doc":"A Weierstrass curve is nonsingular at every point if its discriminant is non-zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hΔ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.Δ\">WeierstrassCurve.Δ</a> <span class=\"fn\">W</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L277-L281","name":"WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","line":277,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hΔ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.Δ\">WeierstrassCurve.Δ</a> <span class=\"fn\">W</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L270-L275","name":"WeierstrassCurve.Affine.nonsingular_iff_variableChange","line":270,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.variableChange\">WeierstrassCurve.variableChange</a> <span class=\"fn\">W</span> <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span></span>)</span>.toAffine</span>.Nonsingular</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L266-L268","name":"WeierstrassCurve.Affine.nonsingular_zero","line":266,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L259-L263","name":"WeierstrassCurve.Affine.nonsingular_iff","line":259,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L254-L256","name":"WeierstrassCurve.Affine.nonsingular_iff'","line":254,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Nonsingular</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L251-L252","name":"WeierstrassCurve.Affine.Nonsingular","line":251,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular","doc":"The proposition that an affine point $(x, y)$ in `W` is nonsingular.\nIn other words, either $W_X(x, y) \\ne 0$ or $W_Y(x, y) \\ne 0$.\n\nNote that this definition is only mathematically accurate for fields.\nTODO: generalise this definition to be mathematically accurate for a larger class of rings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L244-L244","name":"WeierstrassCurve.Affine.eval_polynomialY_zero","line":244,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY_zero","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomialY_zero`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialY_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L243-L243","name":"WeierstrassCurve.Affine.eval_polynomialY","line":243,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomialY`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L242-L242","name":"WeierstrassCurve.Affine.eval_polynomialX_zero","line":242,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX_zero","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomialX_zero`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialX_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L241-L241","name":"WeierstrassCurve.Affine.eval_polynomialX","line":241,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomialX`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L240-L240","name":"WeierstrassCurve.Affine.eval_polynomial_zero","line":240,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial_zero","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomial_zero`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomial_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L239-L239","name":"WeierstrassCurve.Affine.eval_polynomial","line":239,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_polynomial`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L236-L237","name":"WeierstrassCurve.Affine.evalEval_polynomialY_zero","line":236,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialY_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L229-L233","name":"WeierstrassCurve.Affine.evalEval_polynomialY","line":229,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialY</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L225-L226","name":"WeierstrassCurve.Affine.polynomialY","line":225,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY","doc":"The partial derivative $W_Y(X, Y)$ of $W(X, Y)$ with respect to $Y$.\n\nTODO: define this in terms of `Polynomial.derivative`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L219-L220","name":"WeierstrassCurve.Affine.evalEval_polynomialX_zero","line":219,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialX_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L213-L216","name":"WeierstrassCurve.Affine.evalEval_polynomialX","line":213,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomialX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L209-L210","name":"WeierstrassCurve.Affine.polynomialX","line":209,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX","doc":"The partial derivative $W_X(X, Y)$ of $W(X, Y)$ with respect to $X$.\n\nTODO: define this in terms of `Polynomial.derivative`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L194-L198","name":"WeierstrassCurve.Affine.equation_iff_variableChange","line":194,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.variableChange\">WeierstrassCurve.variableChange</a> <span class=\"fn\">W</span> <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span></span>)</span>.toAffine</span>.Equation</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L191-L192","name":"WeierstrassCurve.Affine.equation_zero","line":191,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L186-L188","name":"WeierstrassCurve.Affine.equation_iff","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L181-L183","name":"WeierstrassCurve.Affine.equation_iff'","line":181,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Equation</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L178-L179","name":"WeierstrassCurve.Affine.Equation","line":178,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation","doc":"The proposition that an affine point $(x, y)$ lies in `W`. In other words, $W(x, y) = 0$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L174-L175","name":"WeierstrassCurve.Affine.evalEval_polynomial_zero","line":174,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomial_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L167-L171","name":"WeierstrassCurve.Affine.evalEval_polynomial","line":167,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L153-L164","name":"WeierstrassCurve.Affine.irreducible_polynomial","line":153,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">irreducible_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Irreducible\">Irreducible</a> <span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L149-L151","name":"WeierstrassCurve.Affine.monic_polynomial","line":149,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">monic_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span>.Monic</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L145-L147","name":"WeierstrassCurve.Affine.natDegree_polynomial","line":145,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">natDegree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span>.natDegree</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L140-L142","name":"WeierstrassCurve.Affine.degree_polynomial","line":140,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">degree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span>.degree</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L135-L137","name":"WeierstrassCurve.Affine.polynomial_ne_zero","line":135,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L128-L133","name":"WeierstrassCurve.Affine.polynomial_eq","line":128,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.polynomial</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">1</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">0</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\">W</span>.a₁</span>, <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\">W</span>.a₃</span> }</span>.toPoly</span>,\n      <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">-<span class=\"fn\">1</span></span>, <span class=\"fn\">b</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₂</span></span>, <span class=\"fn\">c</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₄</span></span>, <span class=\"fn\">d</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W</span>.a₆</span></span> }</span>.toPoly</span> }</span>.toPoly</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L125-L126","name":"WeierstrassCurve.Affine.polynomial","line":125,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial","doc":"The polynomial $W(X, Y) := Y^2 + a_1XY + a_3Y - (X^3 + a_2X^2 + a_4X + a_6)$ associated to a\nWeierstrass curve `W` over `R`. For ease of polynomial manipulation, this is represented as a term\nof type `R[X][X]`, where the inner variable represents $X$ and the outer variable represents $Y$.\nFor clarity, the alternative notations `Y` and `R[X][Y]` are provided in the `Polynomial`\nscope to represent the outer variable and the bivariate polynomial ring `R[X][X]` respectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L109-L110","name":"WeierstrassCurve.toAffine","line":109,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine","doc":"The coercion to a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve\">WeierstrassCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">WeierstrassCurve.Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L105-L106","name":"WeierstrassCurve.Affine","line":105,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine","doc":"An abbreviation for a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}