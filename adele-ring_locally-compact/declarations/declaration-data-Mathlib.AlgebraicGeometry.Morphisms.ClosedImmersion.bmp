{"name":"Mathlib.AlgebraicGeometry.Morphisms.ClosedImmersion","instances":[{"typeNames":[],"name":"AlgebraicGeometry.IsClosedImmersion.instOfIsIsoScheme","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["AlgebraicGeometry.IsClosedImmersion"],"name":"AlgebraicGeometry.IsClosedImmersion.instIsMultiplicativeScheme","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["CategoryTheory.CategoryStruct.comp"],"name":"AlgebraicGeometry.IsClosedImmersion.comp","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["AlgebraicGeometry.IsClosedImmersion"],"name":"AlgebraicGeometry.IsClosedImmersion.respectsIso","className":"CategoryTheory.MorphismProperty.RespectsIso"},{"typeNames":["AlgebraicGeometry.Spec.map"],"name":"AlgebraicGeometry.IsClosedImmersion.spec_of_quotient_mk","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":[],"name":"AlgebraicGeometry.IsClosedImmersion.instQuasiCompact","className":"AlgebraicGeometry.QuasiCompact"},{"typeNames":["AlgebraicGeometry.stalkwise"],"name":"AlgebraicGeometry.isSurjectiveOnStalks_isLocalAtTarget","className":"AlgebraicGeometry.IsLocalAtTarget"},{"typeNames":["AlgebraicGeometry.IsClosedImmersion"],"name":"AlgebraicGeometry.IsClosedImmersion.isLocalAtTarget","className":"AlgebraicGeometry.IsLocalAtTarget"}],"imports":["Init","Mathlib.AlgebraicGeometry.Morphisms.QuasiCompact","Mathlib.RingTheory.LocalProperties","Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L139-L140","name":"AlgebraicGeometry.IsClosedImmersion.isLocalAtTarget","line":139,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.isLocalAtTarget","doc":"Being a closed immersion is local at the target. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.isLocalAtTarget\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">isLocalAtTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.IsLocalAtTarget\">AlgebraicGeometry.IsLocalAtTarget</a> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a></a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L134-L136","name":"AlgebraicGeometry.isSurjectiveOnStalks_isLocalAtTarget","line":134,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.isSurjectiveOnStalks_isLocalAtTarget","doc":"Being surjective on stalks is local at the target. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.isSurjectiveOnStalks_isLocalAtTarget\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isSurjectiveOnStalks_isLocalAtTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.IsLocalAtTarget\">AlgebraicGeometry.IsLocalAtTarget</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Constructors.html#AlgebraicGeometry.stalkwise\">AlgebraicGeometry.stalkwise</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L128-L129","name":"AlgebraicGeometry.IsClosedImmersion.instQuasiCompact","line":128,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instQuasiCompact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instQuasiCompact\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">instQuasiCompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/QuasiCompact.html#AlgebraicGeometry.QuasiCompact\">AlgebraicGeometry.QuasiCompact</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L112-L126","name":"AlgebraicGeometry.IsClosedImmersion.of_comp","line":112,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.of_comp","doc":"If `f ≫ g` is a closed immersion, then `f` is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.of_comp\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L105-L109","name":"AlgebraicGeometry.IsClosedImmersion.of_surjective_of_isAffine","line":105,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.of_surjective_of_isAffine","doc":"Any morphism between affine schemes that is surjective on global sections is a\nclosed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.of_surjective_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">of_surjective_of_isAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Γ\">AlgebraicGeometry.Scheme.Γ</a>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.op</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L99-L101","name":"AlgebraicGeometry.IsClosedImmersion.spec_of_quotient_mk","line":99,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.spec_of_quotient_mk","doc":"For any ideal `I` in a commutative ring `R`, the quotient map `specObj R ⟶ specObj (R ⧸ I)`\nis a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.spec_of_quotient_mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">spec_of_quotient_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">CommRingCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">I</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L85-L95","name":"AlgebraicGeometry.IsClosedImmersion.spec_of_surjective","line":85,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.spec_of_surjective","doc":"Given two commutative rings `R S : CommRingCat` and a surjective morphism\n`f : R ⟶ S`, the induced scheme morphism `specObj S ⟶ specObj R` is a\nclosed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.spec_of_surjective\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">spec_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L79-L80","name":"AlgebraicGeometry.IsClosedImmersion.respectsIso","line":79,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.respectsIso","doc":"Composition with an isomorphism preserves closed immersions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.respectsIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">respectsIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.RespectsIso\">CategoryTheory.MorphismProperty.RespectsIso</a> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a></a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L74-L76","name":"AlgebraicGeometry.IsClosedImmersion.comp","line":74,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.comp","doc":"Composition of closed immersions is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.comp\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L66-L71","name":"AlgebraicGeometry.IsClosedImmersion.instIsMultiplicativeScheme","line":66,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instIsMultiplicativeScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instIsMultiplicativeScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">instIsMultiplicativeScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.IsMultiplicative\">CategoryTheory.MorphismProperty.IsMultiplicative</a> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a></a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L62-L64","name":"AlgebraicGeometry.IsClosedImmersion.instOfIsIsoScheme","line":62,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instOfIsIsoScheme","doc":"Isomorphisms are closed immersions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.instOfIsIsoScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">instOfIsIsoScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L55-L59","name":"AlgebraicGeometry.IsClosedImmersion.eq_inf","line":55,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.eq_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.eq_inf\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">eq_inf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a></a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Constructors.html#AlgebraicGeometry.topologically\">AlgebraicGeometry.topologically</a> <span class=\"fn\">fun {<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>] =&gt; <span class=\"fn\">ClosedEmbedding</span></span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>     <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Constructors.html#AlgebraicGeometry.stalkwise\">AlgebraicGeometry.stalkwise</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L51-L53","name":"AlgebraicGeometry.IsClosedImmersion.surjective_stalkMap","line":51,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.surjective_stalkMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.surjective_stalkMap\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">surjective_stalkMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/RingedSpace/Stalks.html#AlgebraicGeometry.PresheafedSpace.stalkMap\">AlgebraicGeometry.PresheafedSpace.stalkMap</a> <span class=\"fn\"><span class=\"fn\">f</span>.val</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L47-L49","name":"AlgebraicGeometry.IsClosedImmersion.closedEmbedding","line":47,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.closedEmbedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.closedEmbedding\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">closedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L43-L43","name":"AlgebraicGeometry.IsClosedImmersion.surj_on_stalks","line":43,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.surj_on_stalks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.surj_on_stalks\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">surj_on_stalks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/RingedSpace/Stalks.html#AlgebraicGeometry.PresheafedSpace.stalkMap\">AlgebraicGeometry.PresheafedSpace.stalkMap</a> <span class=\"fn\"><span class=\"fn\">f</span>.val</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L42-L42","name":"AlgebraicGeometry.IsClosedImmersion.base_closed","line":42,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.base_closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.base_closed\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">base_closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L41-L41","name":"AlgebraicGeometry.IsClosedImmersion.mk","line":41,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(base_closed : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(surj_on_stalks : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/RingedSpace/Stalks.html#AlgebraicGeometry.PresheafedSpace.stalkMap\">AlgebraicGeometry.PresheafedSpace.stalkMap</a> <span class=\"fn\"><span class=\"fn\">f</span>.val</span> <span class=\"fn\">x</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L41-L43","name":"AlgebraicGeometry.IsClosedImmersion","line":41,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion","doc":"A morphism of schemes `X ⟶ Y` is a closed immersion if the underlying\ntopological map is a closed embedding and the induced stalk maps are surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean#L40-L40","name":"AlgebraicGeometry.isClosedImmersion_iff","line":40,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.isClosedImmersion_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.isClosedImmersion_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isClosedImmersion_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toPresheafedSpace</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/RingedSpace/Stalks.html#AlgebraicGeometry.PresheafedSpace.stalkMap\">AlgebraicGeometry.PresheafedSpace.stalkMap</a> <span class=\"fn\"><span class=\"fn\">f</span>.val</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></span></div></div>"}]}