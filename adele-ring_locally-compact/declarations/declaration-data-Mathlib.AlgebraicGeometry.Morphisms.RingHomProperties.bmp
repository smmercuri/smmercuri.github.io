{"name":"Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties","instances":[{"typeNames":[],"name":"AlgebraicGeometry.HasRingHomProperty.instIsLocalAtSource","className":"AlgebraicGeometry.IsLocalAtSource"},{"typeNames":[],"name":"AlgebraicGeometry.HasRingHomProperty.instContainsIdentitiesScheme","className":"CategoryTheory.MorphismProperty.ContainsIdentities"},{"typeNames":[],"name":"AlgebraicGeometry.HasRingHomProperty.instIsStableUnderCompositionScheme","className":"CategoryTheory.MorphismProperty.IsStableUnderComposition"},{"typeNames":[],"name":"AlgebraicGeometry.HasRingHomProperty.instIsMultiplicativeScheme","className":"CategoryTheory.MorphismProperty.IsMultiplicative"}],"imports":["Init","Mathlib.AlgebraicGeometry.Morphisms.Basic","Mathlib.RingTheory.LocalProperties"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L345-L359","name":"AlgebraicGeometry.HasRingHomProperty.stableUnderBaseChange","line":345,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.stableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.stableUnderBaseChange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">stableUnderBaseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange\">RingHom.StableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.StableUnderBaseChange</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L343-L343","name":"AlgebraicGeometry.HasRingHomProperty.of_isOpenImmersion","line":343,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_isOpenImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_isOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">of_isOpenImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L341-L341","name":"AlgebraicGeometry.HasRingHomProperty.instIsMultiplicativeScheme","line":341,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsMultiplicativeScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsMultiplicativeScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">instIsMultiplicativeScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.IsMultiplicative</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L315-L339","name":"AlgebraicGeometry.HasRingHomProperty.of_comp","line":315,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_comp\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">R </span><span class=\"fn\">S </span><span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] [<span class=\"fn\">inst_2</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">T</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">g</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L294-L313","name":"AlgebraicGeometry.HasRingHomProperty.instIsStableUnderCompositionScheme","line":294,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsStableUnderCompositionScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsStableUnderCompositionScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">instIsStableUnderCompositionScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.IsStableUnderComposition</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L285-L292","name":"AlgebraicGeometry.HasRingHomProperty.instContainsIdentitiesScheme","line":285,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instContainsIdentitiesScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instContainsIdentitiesScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">instContainsIdentitiesScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.ContainsIdentities</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L277-L283","name":"AlgebraicGeometry.HasRingHomProperty.instIsLocalAtSource","line":277,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsLocalAtSource","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.instIsLocalAtSource\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">instIsLocalAtSource</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.IsLocalAtSource\">AlgebraicGeometry.IsLocalAtSource</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L272-L275","name":"AlgebraicGeometry.HasRingHomProperty.iff_of_iSup_eq_top","line":272,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_iSup_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_iSup_eq_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">iff_of_iSup_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span> <span class=\"fn\">⋯</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L264-L270","name":"AlgebraicGeometry.HasRingHomProperty.of_iSup_eq_top","line":264,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_iSup_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_iSup_eq_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">of_iSup_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span>)</span></span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L258-L262","name":"AlgebraicGeometry.HasRingHomProperty.Spec_iff","line":258,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.Spec_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.Spec_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">Spec_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">AlgebraicGeometry.Spec.map</a> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L253-L256","name":"AlgebraicGeometry.HasRingHomProperty.iff_of_isAffine","line":253,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_isAffine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_isAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">iff_of_isAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L249-L251","name":"AlgebraicGeometry.HasRingHomProperty.iff_of_source_openCover","line":249,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_source_openCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_of_source_openCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">iff_of_source_openCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒰 : <span class=\"fn\"><span class=\"fn\">X</span>.OpenCover</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.J</span>), <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.J</span>), <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.map</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L220-L247","name":"AlgebraicGeometry.HasRingHomProperty.of_source_openCover","line":220,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_source_openCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.of_source_openCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">of_source_openCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒰 : <span class=\"fn\"><span class=\"fn\">X</span>.OpenCover</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.J</span>), <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.obj</span> <span class=\"fn\">i</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.J</span>), <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.map</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L217-L218","name":"AlgebraicGeometry.HasRingHomProperty.iff_appLE","line":217,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_appLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.iff_appLE\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">iff_appLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span>) (<span class=\"fn\">V</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>) (<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">U</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span> <span class=\"fn\">e</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L203-L213","name":"AlgebraicGeometry.HasRingHomProperty.comp_of_isOpenImmersion","line":203,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.comp_of_isOpenImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.comp_of_isOpenImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">comp_of_isOpenImmersion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">AlgebraicGeometry.IsOpenImmersion</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L199-L201","name":"AlgebraicGeometry.HasRingHomProperty.app_top","line":199,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.app_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.app_top\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">app_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L195-L197","name":"AlgebraicGeometry.HasRingHomProperty.appLE","line":195,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.appLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.appLE\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">appLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">U</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span> <span class=\"fn\">e</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L188-L193","name":"AlgebraicGeometry.HasRingHomProperty.HasAffineProperty","line":188,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.HasAffineProperty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.HasAffineProperty\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">HasAffineProperty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.HasAffineProperty\">AlgebraicGeometry.HasAffineProperty</a> <span class=\"fn\">P</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally\">AlgebraicGeometry.sourceAffineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L185-L185","name":"AlgebraicGeometry.HasRingHomProperty.eq_affineLocally","line":185,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.eq_affineLocally","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.eq_affineLocally\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">eq_affineLocally</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\">AlgebraicGeometry.affineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L178-L178","name":"AlgebraicGeometry.HasRingHomProperty.eq_affineLocally'","line":178,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.eq_affineLocally'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.eq_affineLocally'\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">eq_affineLocally'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\">AlgebraicGeometry.affineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L177-L177","name":"AlgebraicGeometry.HasRingHomProperty.isLocal_ringHomProperty","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.isLocal_ringHomProperty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.isLocal_ringHomProperty\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">isLocal_ringHomProperty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties.html#RingHom.PropertyIsLocal\">RingHom.PropertyIsLocal</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L175-L175","name":"AlgebraicGeometry.HasRingHomProperty.mk","line":175,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isLocal_ringHomProperty : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties.html#RingHom.PropertyIsLocal\">RingHom.PropertyIsLocal</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(eq_affineLocally' : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\">AlgebraicGeometry.affineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">Q</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\">AlgebraicGeometry.HasRingHomProperty</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L175-L178","name":"AlgebraicGeometry.HasRingHomProperty","line":175,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty","doc":"`HasRingHomProperty P Q` is a type class asserting that `P` is local at the target and the source,\nand for `f : Spec B ⟶ Spec A`, it is equivalent to the ring hom property `Q`.\nTo make the proofs easier, we state it instead as\n1. `Q` is local (See `RingHom.PropertyIsLocal`)\n2. `P f` if and only if `Q` holds for every `Γ(Y, U) ⟶ Γ(X, V)` for all affine `U`, `V`.\nSee `HasRingHomProperty.iff_appLE`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.HasRingHomProperty\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">HasRingHomProperty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L139-L163","name":"AlgebraicGeometry.sourceAffineLocally_isLocal","line":139,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_isLocal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_isLocal\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">sourceAffineLocally_isLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RingHom.RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties.html#RingHom.LocalizationPreserves\">RingHom.LocalizationPreserves</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties.html#RingHom.OfLocalizationSpan\">RingHom.OfLocalizationSpan</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally\">AlgebraicGeometry.sourceAffineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span>.IsLocal</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L134-L137","name":"AlgebraicGeometry.affineLocally_iff_affineOpens_le","line":134,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally_iff_affineOpens_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally_iff_affineOpens_le\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineLocally_iff_affineOpens_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\">AlgebraicGeometry.affineLocally</a> <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.affineOpens</span></span>) (<span class=\"fn\">V</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>) (<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">↑<span class=\"fn\">U</span></span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">U</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span> <span class=\"fn\">e</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L123-L132","name":"AlgebraicGeometry.sourceAffineLocally_morphismRestrict","line":123,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_morphismRestrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_morphismRestrict\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">sourceAffineLocally_morphismRestrict</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">Y</span>.Opens</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffineOpen\">AlgebraicGeometry.IsAffineOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally\">AlgebraicGeometry.sourceAffineLocally</a> <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/AlgebraicGeometry/Restrict.html#AlgebraicGeometry.morphismRestrict\">∣_</a> <span class=\"fn\">U</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">V</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.affineOpens</span></span>) (<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Opens.html#TopologicalSpace.Opens.map\">TopologicalSpace.Opens.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.base</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.appLE\">AlgebraicGeometry.Scheme.Hom.appLE</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">V</span></span>)</span> <span class=\"fn\">e</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L118-L120","name":"AlgebraicGeometry.affineLocally_respectsIso","line":118,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally_respectsIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineLocally_respectsIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RingHom.RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\">AlgebraicGeometry.affineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span>.RespectsIso</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L104-L116","name":"AlgebraicGeometry.sourceAffineLocally_respectsIso","line":104,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally_respectsIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">sourceAffineLocally_respectsIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RingHom.RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally\">AlgebraicGeometry.sourceAffineLocally</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span>.toProperty</span>.RespectsIso</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L101-L102","name":"AlgebraicGeometry.affineLocally","line":101,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally","doc":"For `P` a property of ring homomorphisms, `affineLocally P` holds for `f : X ⟶ Y` if for each\naffine open `U = Spec A ⊆ Y` and `V = Spec B ⊆ f ⁻¹' U`, the ring hom `A ⟶ B` satisfies `P`.\nAlso see `affineLocally_iff_affineOpens_le`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.affineLocally\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">affineLocally</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L95-L96","name":"AlgebraicGeometry.sourceAffineLocally","line":95,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally","doc":"For `P` a property of ring homomorphisms, `sourceAffineLocally P` holds for `f : X ⟶ Y`\nwhenever `P` holds for the restriction of `f` on every affine open subset of `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#AlgebraicGeometry.sourceAffineLocally\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">sourceAffineLocally</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.AffineTargetMorphismProperty\">AlgebraicGeometry.AffineTargetMorphismProperty</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.lean#L68-L83","name":"RingHom.StableUnderBaseChange.pullback_fst_app_top","line":68,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#RingHom.StableUnderBaseChange.pullback_fst_app_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/RingHomProperties.html#RingHom.StableUnderBaseChange.pullback_fst_app_top\"><span class=\"name\">RingHom</span>.<span class=\"name\">StableUnderBaseChange</span>.<span class=\"name\">pullback_fst_app_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange\">RingHom.StableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hP' : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RingHom.RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">AlgebraicGeometry.IsAffine</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">AlgebraicGeometry.Scheme.Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">CategoryTheory.Limits.pullback.fst</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></div></div>"}]}