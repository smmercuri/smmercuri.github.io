{"name":"Mathlib.AlgebraicGeometry.Morphisms.Separated","instances":[{"typeNames":[],"name":"AlgebraicGeometry.IsSeparated.isSeparated_of_mono","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","className":"CategoryTheory.MorphismProperty.RespectsIso"},{"typeNames":[],"name":"AlgebraicGeometry.IsSeparated.instQuasiSeparated","className":"AlgebraicGeometry.QuasiSeparated"}],"imports":["Init","Mathlib.AlgebraicGeometry.Morphisms.ClosedImmersion","Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated","Mathlib.AlgebraicGeometry.Pullbacks","Mathlib.CategoryTheory.MorphismProperty.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L61-L61","name":"AlgebraicGeometry.IsSeparated.instQuasiSeparated","line":61,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instQuasiSeparated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instQuasiSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instQuasiSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/QuasiSeparated.html#AlgebraicGeometry.QuasiSeparated\">AlgebraicGeometry.QuasiSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L57-L59","name":"AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","line":57,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instRespectsIsoScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instRespectsIsoScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.RespectsIso\">CategoryTheory.MorphismProperty.RespectsIso</a> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a></a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L55-L55","name":"AlgebraicGeometry.IsSeparated.isSeparated_of_mono","line":55,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_of_mono","doc":"Monomorphisms are separated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_of_mono\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isSeparated_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L49-L52","name":"AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion","line":49,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isSeparated_eq_diagonal_isClosedImmersion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a></a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.diagonal\">CategoryTheory.MorphismProperty.diagonal</a> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a></a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L43-L43","name":"AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion","line":43,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion","doc":"A morphism is separated if the diagonal map is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">diagonal_isClosedImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L41-L41","name":"AlgebraicGeometry.IsSeparated.mk","line":41,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(diagonal_isClosedImmersion : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#_auto._@.Mathlib.AlgebraicGeometry.Morphisms.Separated._hyg.28\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L41-L43","name":"AlgebraicGeometry.IsSeparated","line":41,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated","doc":"A morphism is separated if the diagonal map is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L40-L40","name":"AlgebraicGeometry.isSeparated_iff","line":40,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isSeparated_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">AlgebraicGeometry.Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">AlgebraicGeometry.IsSeparated</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">AlgebraicGeometry.IsClosedImmersion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#_auto._@.Mathlib.AlgebraicGeometry.Morphisms.Separated._hyg.28\">_auto✝</a></span></span></div></div>"}]}