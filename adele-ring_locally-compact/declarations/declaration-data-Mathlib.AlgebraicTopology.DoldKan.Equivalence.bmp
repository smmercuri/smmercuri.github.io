{"name":"Mathlib.AlgebraicTopology.DoldKan.Equivalence","instances":[],"imports":["Init","Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","Mathlib.AlgebraicTopology.DoldKan.Normalized"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L164-L165","name":"CategoryTheory.Abelian.DoldKan.equivalence_inverse","line":164,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">equivalence_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.equivalence</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Abelian.DoldKan.Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L161-L162","name":"CategoryTheory.Abelian.DoldKan.equivalence","line":161,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence","doc":"The Dold-Kan equivalence for abelian categories "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">equivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L160-L160","name":"CategoryTheory.Abelian.DoldKan.equivalence_functor","line":160,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.equivalence_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">equivalence_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.equivalence</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Abelian.DoldKan.N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L148-L157","name":"CategoryTheory.Abelian.DoldKan.comparisonN","line":148,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN","doc":"The comparison isomorphism between `normalizedMooreComplex A` and\nthe functor `Idempotents.DoldKan.N` from the pseudoabelian case "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">comparisonN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.N</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">CategoryTheory.Idempotents.DoldKan.N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L147-L147","name":"CategoryTheory.Abelian.DoldKan.comparisonN_inv_app_f","line":147,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN_inv_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN_inv_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">comparisonN_inv_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.comparisonN</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\">CategoryTheory.Idempotents.toKaroubiEquivalence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>)</span>.inverse</span>.map</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Normalized.html#AlgebraicTopology.DoldKan.N₁_iso_normalizedMooreComplex_comp_toKaroubi\">AlgebraicTopology.DoldKan.N₁_iso_normalizedMooreComplex_comp_toKaroubi</a> <span class=\"fn\">A</span></span>)</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.f</span>\n      <span class=\"fn\">i</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\">CategoryTheory.Idempotents.toKaroubiEquivalence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>)</span>.unitIso</span>.inv</span>.app</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.N</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.f</span>\n      <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L147-L147","name":"CategoryTheory.Abelian.DoldKan.comparisonN_hom_app_f","line":147,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN_hom_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.comparisonN_hom_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">comparisonN_hom_app_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.comparisonN</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\">CategoryTheory.Idempotents.toKaroubiEquivalence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>)</span>.unitIso</span>.hom</span>.app</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Abelian.DoldKan.N</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.f</span>\n      <span class=\"fn\">i</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\">CategoryTheory.Idempotents.toKaroubiEquivalence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>)</span>.inverse</span>.map</span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Normalized.html#AlgebraicTopology.DoldKan.N₁_iso_normalizedMooreComplex_comp_toKaroubi\">AlgebraicTopology.DoldKan.N₁_iso_normalizedMooreComplex_comp_toKaroubi</a> <span class=\"fn\">A</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.f</span>\n      <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L142-L143","name":"CategoryTheory.Abelian.DoldKan.Γ","line":142,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.Γ","doc":"The functor `Γ` for the equivalence is the same as in the pseudoabelian case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.Γ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/DoldKan/Equivalence.lean#L138-L139","name":"CategoryTheory.Abelian.DoldKan.N","line":138,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.N","doc":"The functor `N` for the equivalence is `normalizedMooreComplex A` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Equivalence.html#CategoryTheory.Abelian.DoldKan.N\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">N</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span></div></div>"}]}