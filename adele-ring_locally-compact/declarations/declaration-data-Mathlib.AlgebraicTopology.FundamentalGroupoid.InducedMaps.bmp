{"name":"Mathlib.AlgebraicTopology.FundamentalGroupoid.InducedMaps","instances":[{"typeNames":["FundamentalGroupoidFunctor.homotopicMapsNatIso"],"name":"FundamentalGroupoidFunctor.instIsIsoFunctorαGroupoidObjTopCatGrpdFundamentalGroupoidFunctorHomotopicMapsNatIso","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.Topology.Homotopy.Equiv","Mathlib.CategoryTheory.Equivalence","Mathlib.AlgebraicTopology.FundamentalGroupoid.Product"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L225-L232","name":"FundamentalGroupoidFunctor.equivOfHomotopyEquiv","line":225,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.equivOfHomotopyEquiv","doc":"Homotopy equivalent topological spaces have equivalent fundamental groupoids. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.equivOfHomotopyEquiv\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">equivOfHomotopyEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hequiv : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Equiv.html#ContinuousMap.HomotopyEquiv\">ContinuousMap.HomotopyEquiv</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">Y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L220-L220","name":"FundamentalGroupoidFunctor.instIsIsoFunctorαGroupoidObjTopCatGrpdFundamentalGroupoidFunctorHomotopicMapsNatIso","line":220,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.instIsIsoFunctorαGroupoidObjTopCatGrpdFundamentalGroupoidFunctorHomotopicMapsNatIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.instIsIsoFunctorαGroupoidObjTopCatGrpdFundamentalGroupoidFunctorHomotopicMapsNatIso\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">instIsIsoFunctorαGroupoidObjTopCatGrpdFundamentalGroupoidFunctorHomotopicMapsNatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.homotopicMapsNatIso\">FundamentalGroupoidFunctor.homotopicMapsNatIso</a> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L215-L218","name":"FundamentalGroupoidFunctor.homotopicMapsNatIso","line":215,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.homotopicMapsNatIso","doc":"Given a homotopy H : f ∼ g, we have an associated natural isomorphism between the induced\nfunctors `f` and `g` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#FundamentalGroupoidFunctor.homotopicMapsNatIso\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">homotopicMapsNatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L187-L198","name":"ContinuousMap.Homotopy.eq_diag_path","line":187,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.eq_diag_path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.eq_diag_path\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eq_diag_path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">⟦<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.evalAt</span> <span class=\"fn\">x₁</span></span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.diagonalPath'</span> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">⟦<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.evalAt</span> <span class=\"fn\">x₀</span></span>⟧</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">g</span></span>)</span>.map</span> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.diagonalPath'</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L176-L184","name":"ContinuousMap.Homotopy.evalAt_eq","line":176,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.evalAt_eq","doc":"Proof that `H.evalAt x = H(0 ⟶ 1, x ⟶ x)`, with the appropriate casts "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.evalAt_eq\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">evalAt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟦<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.evalAt</span> <span class=\"fn\">x</span></span>⟧</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\"><span class=\"fn\">H</span>.uliftMap</span></span>)</span>.map</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.prodToProdTopI\">ContinuousMap.Homotopy.prodToProdTopI</a> <a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.uhpath01\">unitInterval.uhpath01</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L167-L173","name":"ContinuousMap.Homotopy.apply_one_path","line":167,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.apply_one_path","doc":"Proof that `g(p) = H(1 ⟶ 1, p)`, with the appropriate casts "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.apply_one_path\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">apply_one_path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">g</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\"><span class=\"fn\">H</span>.uliftMap</span></span>)</span>.map</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.prodToProdTopI\">ContinuousMap.Homotopy.prodToProdTopI</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">1</span> }</span></span>)</span></span>)</span> <span class=\"fn\">p</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L158-L164","name":"ContinuousMap.Homotopy.apply_zero_path","line":158,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.apply_zero_path","doc":"Proof that `f(p) = H(0 ⟶ 0, p)`, with the appropriate casts "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.apply_zero_path\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">apply_zero_path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\"><span class=\"fn\">H</span>.uliftMap</span></span>)</span>.map</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.prodToProdTopI\">ContinuousMap.Homotopy.prodToProdTopI</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">0</span> }</span></span>)</span></span>)</span> <span class=\"fn\">p</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L154-L155","name":"ContinuousMap.Homotopy.diagonalPath'","line":154,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.diagonalPath'","doc":"The diagonal path, but starting from `f x₀` and going to `g x₁` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.diagonalPath'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">diagonalPath'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₀</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x₁</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L150-L151","name":"ContinuousMap.Homotopy.diagonalPath","line":150,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.diagonalPath","doc":"The diagonal path `d` of a homotopy `H` on a path `p` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.diagonalPath\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">diagonalPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">x₀</span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\">1</span>, <span class=\"fn\">x₁</span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L145-L147","name":"ContinuousMap.Homotopy.prodToProdTopI","line":145,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.prodToProdTopI","doc":"An abbreviation for `prodToProdTop`, with some types already in place to help the\ntypechecker. In particular, the first path should be on the ulifted unit interval. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.prodToProdTopI\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">prodToProdTopI</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b₂ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">a₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">a₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">b₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">b₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\">FundamentalGroupoidFunctor.prodToProdTop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>)</span> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">a₁</span> }</span>, <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">b₁</span> }</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\">FundamentalGroupoidFunctor.prodToProdTop</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>)</span> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">a₂</span> }</span>, <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">b₂</span> }</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L140-L141","name":"ContinuousMap.Homotopy.ulift_apply","line":140,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.ulift_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.ulift_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">ulift_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.uliftMap</span> <span class=\"fn\">(<span class=\"fn\">i</span>, <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.down</span>, <span class=\"fn\">x</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L134-L136","name":"ContinuousMap.Homotopy.uliftMap","line":134,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.uliftMap","doc":"Interpret a homotopy `H : C(I × X, Y)` as a map `C(ULift I × X, Y)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.uliftMap\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">uliftMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.Homotopy</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span>)</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L96-L102","name":"ContinuousMap.Homotopy.eq_path_of_eq_image","line":96,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.eq_path_of_eq_image","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.eq_path_of_eq_image\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eq_path_of_eq_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X₁</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X₂</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">↑<span class=\"fn\">X₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₃ : <span class=\"fn\">↑<span class=\"fn\">X₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₂</span> <span class=\"fn\">x₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">t</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">⟦<span class=\"fn\">p</span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">g</span></span>)</span>.map</span> <span class=\"fn\">⟦<span class=\"fn\">q</span>⟧</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L89-L90","name":"ContinuousMap.Homotopy.heq_path_of_eq_image","line":89,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.heq_path_of_eq_image","doc":"If `f(p(t) = g(q(t))` for two paths `p` and `q`, then the induced path homotopy classes\n`f(p)` and `g(p)` are the same as well, despite having a priori different types "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.heq_path_of_eq_image\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">heq_path_of_eq_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X₁</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">X₂</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">↑<span class=\"fn\">X₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₃ : <span class=\"fn\">↑<span class=\"fn\">X₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₂</span> <span class=\"fn\">x₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">t</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">⟦<span class=\"fn\">p</span>⟧</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.map</span> <span class=\"fn\">g</span></span>)</span>.map</span> <span class=\"fn\">⟦<span class=\"fn\">q</span>⟧</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L80-L82","name":"ContinuousMap.Homotopy.hcast_def","line":80,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast_def\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcast_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx₀ : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\">ContinuousMap.Homotopy.hcast</a> <span class=\"fn\">hx₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L76-L77","name":"ContinuousMap.Homotopy.hcast","line":76,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast","doc":"Abbreviation for `eqToHom` that accepts points in a topological space "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#ContinuousMap.Homotopy.hcast\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₀</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">x₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L62-L63","name":"unitInterval.uhpath01","line":62,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.uhpath01","doc":"The homotopy path class of 0 → 1 in `ULift I` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.uhpath01\"><span class=\"name\">unitInterval</span>.<span class=\"name\">uhpath01</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">0</span> }</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fromTop\">FundamentalGroupoid.fromTop</a> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">1</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L54-L57","name":"unitInterval.upath01","line":54,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.upath01","doc":"The path 0 ⟶ 1 in `ULift I` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.upath01\"><span class=\"name\">unitInterval</span>.<span class=\"name\">upath01</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">0</span> }</span> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">1</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.lean#L48-L51","name":"unitInterval.path01","line":48,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.path01","doc":"The path 0 ⟶ 1 in `I` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/InducedMaps.html#unitInterval.path01\"><span class=\"name\">unitInterval</span>.<span class=\"name\">path01</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></div></div>"}]}