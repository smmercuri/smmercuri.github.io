{"name":"Mathlib.AlgebraicTopology.FundamentalGroupoid.Product","instances":[{"typeNames":["FundamentalGroupoidFunctor.piTopToPiCone"],"name":"FundamentalGroupoidFunctor.instIsIsoFanGrpdObjTopCatFundamentalGroupoidFunctorPiTopToPiCone","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.Groupoid","Mathlib.AlgebraicTopology.FundamentalGroupoid.Basic","Mathlib.Topology.Category.TopCat.Limits.Products","Mathlib.Topology.Homotopy.Product"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L172-L193","name":"FundamentalGroupoidFunctor.prodIso","line":172,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso","doc":"Shows `prodToProdTop` is an isomorphism, whose inverse is precisely the product\nof the induced left and right projections.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">CategoryTheory.Grpd.of</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a>       <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L171-L171","name":"FundamentalGroupoidFunctor.prodIso_hom","line":171,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso_hom\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodIso_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso\">FundamentalGroupoidFunctor.prodIso</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\">FundamentalGroupoidFunctor.prodToProdTop</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L171-L171","name":"FundamentalGroupoidFunctor.prodIso_inv","line":171,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso_inv\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodIso_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodIso\">FundamentalGroupoidFunctor.prodIso</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft\">FundamentalGroupoidFunctor.projLeft</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.prod'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight\">FundamentalGroupoidFunctor.projRight</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L163-L166","name":"FundamentalGroupoidFunctor.prodToProdTop_map","line":163,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop_map\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodToProdTop_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₀ : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><span class=\"fn\">y₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\">FundamentalGroupoidFunctor.prodToProdTop</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.map</span> <span class=\"fn\">(<span class=\"fn\">p₀</span>, <span class=\"fn\">p₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Product.html#Path.Homotopic.prod\">Path.Homotopic.prod</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L149-L161","name":"FundamentalGroupoidFunctor.prodToProdTop","line":149,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop","doc":"The map taking the product of two fundamental groupoids to the fundamental groupoid of the product\nof the two topological spaces. This is in fact an isomorphism (see `prodIso`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodToProdTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span>\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L148-L148","name":"FundamentalGroupoidFunctor.prodToProdTop_obj","line":148,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop_obj\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">prodToProdTop_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.prodToProdTop\">FundamentalGroupoidFunctor.prodToProdTop</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.obj</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.1</span>.as</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.as</span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L140-L142","name":"FundamentalGroupoidFunctor.projRight_map","line":140,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight_map\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">projRight_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight\">FundamentalGroupoidFunctor.projRight</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Product.html#Path.Homotopic.projRight\">Path.Homotopic.projRight</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L135-L137","name":"FundamentalGroupoidFunctor.projLeft_map","line":135,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft_map\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">projLeft_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft\">FundamentalGroupoidFunctor.projLeft</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Product.html#Path.Homotopic.projLeft\">Path.Homotopic.projLeft</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L131-L132","name":"FundamentalGroupoidFunctor.projRight","line":131,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight","doc":"The induced map of the right projection map X × Y → Y "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projRight\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">projRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L127-L128","name":"FundamentalGroupoidFunctor.projLeft","line":127,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft","doc":"The induced map of the left projection map X × Y → X "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.projLeft\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">projLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>)</span></span>)</span></span>\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">A</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L110-L116","name":"FundamentalGroupoidFunctor.preservesProduct","line":110,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.preservesProduct","doc":"The fundamental groupoid functor preserves products "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.preservesProduct\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">preservesProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">CategoryTheory.Limits.PreservesLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">X</span></span>)</span> <a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L105-L107","name":"FundamentalGroupoidFunctor.instIsIsoFanGrpdObjTopCatFundamentalGroupoidFunctorPiTopToPiCone","line":105,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.instIsIsoFanGrpdObjTopCatFundamentalGroupoidFunctorPiTopToPiCone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.instIsIsoFanGrpdObjTopCatFundamentalGroupoidFunctorPiTopToPiCone\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">instIsIsoFanGrpdObjTopCatFundamentalGroupoidFunctorPiTopToPiCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piTopToPiCone\">FundamentalGroupoidFunctor.piTopToPiCone</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L101-L103","name":"FundamentalGroupoidFunctor.piTopToPiCone","line":101,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piTopToPiCone","doc":"This is `piIso.inv` as a cone morphism (in fact, isomorphism) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piTopToPiCone\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piTopToPiCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan.mk\">CategoryTheory.Limits.Fan.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj\">FundamentalGroupoidFunctor.proj</a> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan\">CategoryTheory.Grpd.piLimitFan</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L94-L98","name":"FundamentalGroupoidFunctor.coneDiscreteComp_obj_mapCone","line":94,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.coneDiscreteComp_obj_mapCone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.coneDiscreteComp_obj_mapCone\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">coneDiscreteComp_obj_mapCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.coneDiscreteComp\">FundamentalGroupoidFunctor.coneDiscreteComp</a> <span class=\"fn\">X</span></span>)</span>.functor</span>.obj</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.mapCone</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan\">TopCat.piFan</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan.mk\">CategoryTheory.Limits.Fan.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj\">FundamentalGroupoidFunctor.proj</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L90-L92","name":"FundamentalGroupoidFunctor.coneDiscreteComp","line":90,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.coneDiscreteComp","doc":"Equivalence between the categories of cones over the objects `π Xᵢ` written in two ways "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.coneDiscreteComp\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">coneDiscreteComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">X</span></span>)</span>.comp</span> <a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L68-L83","name":"FundamentalGroupoidFunctor.piIso","line":68,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso","doc":"Shows `piToPiTop` is an isomorphism, whose inverse is precisely the pi product\nof the induced projections. This shows that `fundamentalGroupoidFunctor` preserves products.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">CategoryTheory.Grpd.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L67-L67","name":"FundamentalGroupoidFunctor.piIso_inv","line":67,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso_inv\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso\">FundamentalGroupoidFunctor.piIso</a> <span class=\"fn\">X</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Pi/Basic.html#CategoryTheory.Functor.pi'\">CategoryTheory.Functor.pi'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj\">FundamentalGroupoidFunctor.proj</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L67-L67","name":"FundamentalGroupoidFunctor.piIso_hom","line":67,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso_hom\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piIso\">FundamentalGroupoidFunctor.piIso</a> <span class=\"fn\">X</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop\">FundamentalGroupoidFunctor.piToPiTop</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L55-L62","name":"FundamentalGroupoidFunctor.piToPiTop","line":55,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop","doc":"The map taking the pi product of a family of fundamental groupoids to the fundamental\ngroupoid of the pi product. This is actually an isomorphism (see `piIso`)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piToPiTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span>)</span>\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L54-L54","name":"FundamentalGroupoidFunctor.piToPiTop_obj_as","line":54,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop_obj_as","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop_obj_as\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piToPiTop_obj_as</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop\">FundamentalGroupoidFunctor.piToPiTop</a> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">g</span></span>)</span>.as</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span>)</span>.as</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L54-L54","name":"FundamentalGroupoidFunctor.piToPiTop_map","line":54,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop_map\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">piToPiTop_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span><span class=\"fn\">Y</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span>} (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.piToPiTop\">FundamentalGroupoidFunctor.piToPiTop</a> <span class=\"fn\">X</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Product.html#Path.Homotopic.pi\">Path.Homotopic.pi</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L47-L49","name":"FundamentalGroupoidFunctor.proj_map","line":47,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj_map","doc":"The projection map is precisely `Path.Homotopic.proj` interpreted as a functor "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj_map\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">proj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₀ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">x₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj\">FundamentalGroupoidFunctor.proj</a> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span>.map</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Product.html#Path.Homotopic.proj\">Path.Homotopic.proj</a> <span class=\"fn\">i</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.lean#L42-L43","name":"FundamentalGroupoidFunctor.proj","line":42,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj","doc":"The projection map Π i, X i → X i induces a map π(Π i, X i) ⟶ π(X i).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Product.html#FundamentalGroupoidFunctor.proj\"><span class=\"name\">FundamentalGroupoidFunctor</span>.<span class=\"name\">proj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">TopCat.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>)</span></span>)</span></span>\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid.fundamentalGroupoidFunctor\">FundamentalGroupoid.fundamentalGroupoidFunctor</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></div></div>"}]}