{"name":"Mathlib.AlgebraicTopology.SimplicialSet","instances":[{"typeNames":["SSet"],"name":"SSet.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["SSet"],"name":"SSet.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["SSet"],"name":"SSet.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["SSet"],"name":"SSet.instInhabited","className":"Inhabited"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["SSet.Truncated"],"name":"SSet.Truncated.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["SSet.Truncated"],"name":"SSet.instInhabitedTruncated","className":"Inhabited"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialObject","Mathlib.CategoryTheory.Limits.Shapes.Types","Mathlib.CategoryTheory.Yoneda","Mathlib.Data.Fin.VecNotation","Mathlib.Tactic.FinCases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L363-L370","name":"SSet.Augmented.standardSimplex","line":363,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex","doc":"The functor which sends `[n]` to the simplicial set `Δ[n]` equipped by\nthe obvious augmentation towards the terminal object of the category of sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented\">SSet.Augmented</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L362-L362","name":"SSet.Augmented.standardSimplex_obj_right","line":362,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_right\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex_obj_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Δ : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\">SSet.Augmented.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span>.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal\">⊤_</a> <a href=\"./foundational_types.html\">Type</a> u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L362-L362","name":"SSet.Augmented.standardSimplex_map_right","line":362,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_map_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_map_right\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex_map_right</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>} (<span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)\n  (<span class=\"fn\">a</span> :\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>) =&gt;\n          <span class=\"fn\">{ <span class=\"fn\">left</span> := <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>, <span class=\"fn\">right</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal\">⊤_</a> <a href=\"./foundational_types.html\">Type</a> u</span>,\n            <span class=\"fn\">hom</span> :=\n              <span class=\"fn\">{\n                <span class=\"fn\">app</span> := <span class=\"fn\">fun (<span class=\"fn\">Δ'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) =&gt;\n                  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>)</span>.obj</span>\n                          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span></span>)</span>.obj</span>\n                      <span class=\"fn\">Δ'</span></span>)</span></span></span>,\n                <span class=\"fn\">naturality</span> := <span class=\"fn\">⋯</span> }</span> }</span></span>)</span>\n        <span class=\"fn\">X</span></span>)</span>.right</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\">SSet.Augmented.standardSimplex</a>.map</span> <span class=\"fn\">θ</span></span>)</span>.right</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>) =&gt;\n            <span class=\"fn\">{ <span class=\"fn\">left</span> := <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>, <span class=\"fn\">right</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal\">⊤_</a> <a href=\"./foundational_types.html\">Type</a> u</span>,\n              <span class=\"fn\">hom</span> :=\n                <span class=\"fn\">{\n                  <span class=\"fn\">app</span> := <span class=\"fn\">fun (<span class=\"fn\">Δ'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a>\n                      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>)</span>.obj</span>\n                            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span></span>)</span>.obj</span>\n                        <span class=\"fn\">Δ'</span></span>)</span></span></span>,\n                  <span class=\"fn\">naturality</span> := <span class=\"fn\">⋯</span> }</span> }</span></span>)</span>\n          <span class=\"fn\">X</span></span>)</span>.right</span>\n      <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L362-L362","name":"SSet.Augmented.standardSimplex_obj_left","line":362,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_left\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex_obj_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Δ : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\">SSet.Augmented.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span>.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L362-L362","name":"SSet.Augmented.standardSimplex_map_left","line":362,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_map_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_map_left\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex_map_left</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>} (<span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\">SSet.Augmented.standardSimplex</a>.map</span> <span class=\"fn\">θ</span></span>)</span>.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.map</span> <span class=\"fn\">θ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L362-L362","name":"SSet.Augmented.standardSimplex_obj_hom_app","line":362,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex_obj_hom_app\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span>.<span class=\"name\">standardSimplex_obj_hom_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Δ : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Δ' : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀\n  (<span class=\"fn\">a</span> :\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">Δ'</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented.standardSimplex\">SSet.Augmented.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span>.hom</span>.app</span> <span class=\"fn\">Δ'</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">Δ</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">Δ'</span></span>)</span>\n      <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L353-L354","name":"SSet.Augmented","line":353,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented","doc":"The category of augmented simplicial sets, as a particular case of\naugmented simplicial objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Augmented\"><span class=\"name\">SSet</span>.<span class=\"name\">Augmented</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L348-L349","name":"SSet.instInhabitedTruncated","line":348,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.instInhabitedTruncated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.instInhabitedTruncated\"><span class=\"name\">SSet</span>.<span class=\"name\">instInhabitedTruncated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L345-L346","name":"SSet.sk","line":345,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.sk","doc":"The skeleton functor on simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.sk\"><span class=\"name\">SSet</span>.<span class=\"name\">sk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L340-L342","name":"SSet.Truncated.hom_ext","line":340,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">n_1</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Truncated\">SimplexCategory.Truncated</a> <span class=\"fn\">n</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">n_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.app</span> <span class=\"fn\">n_1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L334-L336","name":"SSet.Truncated.hasColimits","line":334,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hasColimits\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L330-L332","name":"SSet.Truncated.hasLimits","line":330,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.hasLimits\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L326-L328","name":"SSet.Truncated.largeCategory","line":326,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated.largeCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\">SSet.Truncated</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L323-L324","name":"SSet.Truncated","line":323,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated","doc":"Truncated simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.Truncated\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L315-L318","name":"SSet.S1","line":315,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.S1","doc":"The simplicial circle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.S1\"><span class=\"name\">SSet</span>.<span class=\"name\">S1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L288-L306","name":"SSet.horn.hom_ext","line":288,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.hom_ext","doc":"Two morphisms from a horn are equal if they are equal on all suitable faces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(σ₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ₁</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face\">SSet.horn.face</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ₂</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face\">SSet.horn.face</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">σ₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L281-L284","name":"SSet.horn.face","line":281,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face","doc":"The `j`th subface of the `i`-th horn. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L280-L280","name":"SSet.horn.face_coe","line":280,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face_coe\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">face_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.face\">SSet.horn.face</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objEquiv\">SSet.standardSimplex.objEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>)</span>.symm</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.δ\">SimplexCategory.δ</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L254-L277","name":"SSet.horn.primitiveTriangle","line":254,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveTriangle","doc":"The triangle in the standard simplex with vertices `k`, `k+1`, and `k+2`.\n\nThis constructor assumes `0 < i < n`,\nwhich is the type of horn that occurs in the horn-filling condition of quasicategories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveTriangle\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">primitiveTriangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">4</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hₙ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L253-L253","name":"SSet.horn.primitiveTriangle_coe","line":253,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveTriangle_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveTriangle_coe\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">primitiveTriangle_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">4</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hₙ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveTriangle\">SSet.horn.primitiveTriangle</a> <span class=\"fn\">i</span> <span class=\"fn\">h₀</span> <span class=\"fn\">hₙ</span> <span class=\"fn\">k</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.triangle\">SSet.standardSimplex.triangle</a> <span class=\"fn\">⟨<span class=\"fn\">k</span>, <span class=\"fn\">⋯</span>⟩</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">⋯</span>⟩</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">⋯</span>⟩</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L238-L247","name":"SSet.horn.primitiveEdge","line":238,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveEdge","doc":"The edge of `Λ[n, i]` with endpoints `j` and `j+1`.\n\nThis constructor assumes `0 < i < n`,\nwhich is the type of horn that occurs in the horn-filling condition of quasicategories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveEdge\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">primitiveEdge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hₙ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L237-L237","name":"SSet.horn.primitiveEdge_coe_down","line":237,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveEdge_coe_down","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveEdge_coe_down\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">primitiveEdge_coe_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hₙ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.primitiveEdge\">SSet.horn.primitiveEdge</a> <span class=\"fn\">h₀</span> <span class=\"fn\">hₙ</span> <span class=\"fn\">j</span></span>)</span></span>)</span>.down</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.mk\">SimplexCategory.Hom.mk</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">![<span class=\"fn\"><span class=\"fn\">j</span>.castSucc</span>, <span class=\"fn\"><span class=\"fn\">j</span>.succ</span>]</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">⋯</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L229-L231","name":"SSet.horn.edge₃","line":229,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge₃","doc":"Alternative constructor for the edge of `Λ[n, i]` with endpoints `a` and `b`,\nassuming `3 ≤ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge₃\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">edge₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L228-L228","name":"SSet.horn.edge₃_coe_down","line":228,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge₃_coe_down","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge₃_coe_down\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">edge₃_coe_down</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge₃\">SSet.horn.edge₃</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span> <span class=\"fn\">H</span></span>)</span></span>)</span>.down</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.mk\">SimplexCategory.Hom.mk</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">![<span class=\"fn\">a</span>, <span class=\"fn\">b</span>]</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">⋯</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L211-L224","name":"SSet.horn.edge","line":211,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge","doc":"The edge of `Λ[n, i]` with endpoints `a` and `b`.\n\nThis edge only exists if `{i, a, b}` has cardinality less than `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">edge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">i</span>, <span class=\"fn\">a</span>, <span class=\"fn\">b</span>}</span>.card</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L210-L210","name":"SSet.horn.edge_coe","line":210,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge_coe\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">edge_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">i</span>, <span class=\"fn\">a</span>, <span class=\"fn\">b</span>}</span>.card</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.edge\">SSet.horn.edge</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span> <span class=\"fn\">H</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.edge\">SSet.standardSimplex.edge</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L197-L205","name":"SSet.horn.const","line":197,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.const","doc":"The (degenerate) subsimplex of `Λ[n+2, i]` concentrated in vertex `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.const\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">i</span></span>)</span>.obj</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L196-L196","name":"SSet.horn.const_coe","line":196,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.const_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.const_coe\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span>.<span class=\"name\">const_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn.const\">SSet.horn.const</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const\">SSet.standardSimplex.const</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L188-L189","name":"SSet.hornInclusion","line":188,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hornInclusion","doc":"The inclusion of the `i`-th horn of the `n`-th standard simplex into that standard simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hornInclusion\"><span class=\"name\">SSet</span>.<span class=\"name\">hornInclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\">SSet.horn</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L184-L185","name":"Simplicial.«termΛ[_,_]»","line":184,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΛ[_,_]»","doc":"The `i`-th horn `Λ[n, i]` of the standard `n`-simplex "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΛ[_,_]»\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«termΛ[_,_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L184-L185","name":"Simplicial.«termΛ[_,_]».delab","line":184,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΛ[_,_]».delab","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΛ[_,_]».delab\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«termΛ[_,_]»</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L174-L182","name":"SSet.horn","line":174,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn","doc":"`horn n i` (or `Λ[n, i]`) is the `i`-th horn of the `n`-th standard simplex, where `i : n`.\nIt consists of all `m`-simplices `α` of `Δ[n]`\nfor which the union of `{i}` and the range of `α` is not all of `n`\n(when viewing `α` as monotone function `m → n`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.horn\"><span class=\"name\">SSet</span>.<span class=\"name\">horn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L168-L168","name":"SSet.boundaryInclusion","line":168,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.boundaryInclusion","doc":"The inclusion of the boundary of the `n`-th standard simplex into that standard simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.boundaryInclusion\"><span class=\"name\">SSet</span>.<span class=\"name\">boundaryInclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.boundary\">SSet.boundary</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L164-L165","name":"Simplicial.«term∂Δ[_]».delab","line":164,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«term∂Δ[_]».delab","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«term∂Δ[_]».delab\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«term∂Δ[_]»</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L164-L165","name":"Simplicial.«term∂Δ[_]»","line":164,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«term∂Δ[_]»","doc":"The boundary `∂Δ[n]` of the `n`-th standard simplex "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«term∂Δ[_]»\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«term∂Δ[_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L156-L162","name":"SSet.boundary","line":156,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.boundary","doc":"The boundary `∂Δ[n]` of the `n`-th standard simplex consists of\nall `m`-simplices of `standardSimplex n` that are not surjective\n(when viewed as monotone function `m → n`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.boundary\"><span class=\"name\">SSet</span>.<span class=\"name\">boundary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L148-L149","name":"SSet.asOrderHom","line":148,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.asOrderHom","doc":"The `m`-simplices of the `n`-th standard simplex are\nthe monotone maps from `Fin (m+1)` to `Fin (n+1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.asOrderHom\"><span class=\"name\">SSet</span>.<span class=\"name\">asOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">m</span></span>)</span>.len</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L138-L140","name":"SSet.standardSimplex.coe_triangle_down_toOrderHom","line":138,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.coe_triangle_down_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.coe_triangle_down_toOrderHom\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">coe_triangle_down_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hbc : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.toOrderHom\">SimplexCategory.Hom.toOrderHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.triangle\">SSet.standardSimplex.triangle</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">hab</span> <span class=\"fn\">hbc</span></span>)</span>.down</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">![<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L131-L136","name":"SSet.standardSimplex.triangle","line":131,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.triangle","doc":"The triangle in the standard simplex with vertices `a`, `b`, and `c`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.triangle\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hbc : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L126-L128","name":"SSet.standardSimplex.coe_edge_down_toOrderHom","line":126,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.coe_edge_down_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.coe_edge_down_toOrderHom\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">coe_edge_down_toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.toOrderHom\">SimplexCategory.Hom.toOrderHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.edge\">SSet.standardSimplex.edge</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span></span>)</span>.down</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">![<span class=\"fn\">a</span>, <span class=\"fn\">b</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L120-L124","name":"SSet.standardSimplex.edge","line":120,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.edge","doc":"The edge of the standard simplex with endpoints `a` and `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.edge\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">edge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L115-L117","name":"SSet.standardSimplex.const_down_toOrderHom","line":115,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const_down_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const_down_toOrderHom\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">const_down_toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.toOrderHom\">SimplexCategory.Hom.toOrderHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const\">SSet.standardSimplex.const</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span>)</span>.down</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.const\">OrderHom.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">m</span></span>)</span>.len</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L111-L112","name":"SSet.standardSimplex.const","line":111,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const","doc":"The (degenerate) `m`-simplex in the standard simplex concentrated in vertex `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.const\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span>.obj</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L106-L108","name":"SSet.yonedaEquiv","line":106,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.yonedaEquiv","doc":"The canonical bijection `(standardSimplex.obj n ⟶ X) ≃ X.obj (op n)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.yonedaEquiv\"><span class=\"name\">SSet</span>.<span class=\"name\">yonedaEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L100-L103","name":"SSet.standardSimplex.map_apply","line":100,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.map_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">m₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">m₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objEquiv\">SSet.standardSimplex.objEquiv</a> <span class=\"fn\">n</span> <span class=\"fn\">m₂</span></span>)</span>.symm</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objEquiv\">SSet.standardSimplex.objEquiv</a> <span class=\"fn\">n</span> <span class=\"fn\">m₁</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L95-L98","name":"SSet.standardSimplex.objMk","line":95,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objMk","doc":"Constructor for simplices of the standard simplex which takes a `OrderHom` as an input. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objMk\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">objMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">m</span></span>)</span>.len</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.len</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L90-L92","name":"SSet.standardSimplex.objEquiv","line":90,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objEquiv","doc":"Simplices of the standard simplex identify to morphisms in `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.objEquiv\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">objEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L85-L87","name":"SSet.standardSimplex.map_id","line":85,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex.map_id\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span>.<span class=\"name\">map_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.Hom.mk\">SimplexCategory.Hom.mk</a> <span class=\"fn\">OrderHom.id</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\">SSet.standardSimplex</a>.obj</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L77-L78","name":"SSet.instInhabited","line":77,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.instInhabited\"><span class=\"name\">SSet</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L74-L75","name":"Simplicial.«termΔ[_]»","line":74,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΔ[_]»","doc":"The `n`-th standard simplex `Δ[n]` associated with a nonempty finite linear order `n`\nis the Yoneda embedding of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΔ[_]»\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«termΔ[_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L74-L75","name":"Simplicial.«termΔ[_]».delab","line":74,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΔ[_]».delab","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#Simplicial.«termΔ[_]».delab\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«termΔ[_]»</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L71-L72","name":"SSet.standardSimplex","line":71,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex","doc":"The `n`-th standard simplex `Δ[n]` associated with a nonempty finite linear order `n`\nis the Yoneda embedding of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.standardSimplex\"><span class=\"name\">SSet</span>.<span class=\"name\">standardSimplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L66-L67","name":"SSet.uliftFunctor","line":66,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.uliftFunctor","doc":"The ulift functor `SSet.{u} ⥤ SSet.{max u v}` on simplicial sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.uliftFunctor\"><span class=\"name\">SSet</span>.<span class=\"name\">uliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L62-L63","name":"SSet.hom_ext","line":62,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.app</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L56-L58","name":"SSet.hasColimits","line":56,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hasColimits\"><span class=\"name\">SSet</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L52-L54","name":"SSet.hasLimits","line":52,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.hasLimits\"><span class=\"name\">SSet</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L48-L50","name":"SSet.largeCategory","line":48,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet.largeCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/AlgebraicTopology/SimplicialSet.lean#L43-L44","name":"SSet","line":43,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet","doc":"The category of simplicial sets.\nThis is the category of contravariant functors from\n`SimplexCategory` to `Type u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\"><span class=\"name\">SSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}