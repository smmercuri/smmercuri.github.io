{"name":"Mathlib.Analysis.BoxIntegral.Basic","instances":[],"imports":["Init","Mathlib.Analysis.BoxIntegral.Partition.Filter","Mathlib.Analysis.BoxIntegral.Partition.Measure","Mathlib.Analysis.Oscillation","Mathlib.Topology.UniformSpace.Compact","Mathlib.Data.Bool.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L869-L875","name":"BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO","line":869,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO","doc":"Suppose that there exists a nonnegative box-additive function `B` with the following property.\n\nFor every `c : ℝ≥0`, a point `x ∈ I.Icc`, and a positive `ε` there exists `δ > 0` such that for any\nbox `J ≤ I` such that\n\n- `J.Icc ⊆ Metric.closedBall x δ`;\n- if `l.bDistortion` (i.e., `l = ⊥`), then the distortion of `J` is less than or equal to `c`,\n\nthe distance between the term `vol J (f x)` of an integral sum corresponding to `J` and `g J` is\nless than or equal to `ε * B J`.\n\nThen `f` is McShane integrable on `I` with integral `g I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">mcShane_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB0 : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a> →\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.McShane\">BoxIntegral.IntegrationParams.McShane</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L844-L855","name":"BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO","line":844,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO","doc":"A function `f` has Henstock (or `⊥`) integral over `I` is equal to the value of a box-additive\nfunction `g` on `I` provided that `vol J (f x)` is sufficiently close to `g J` for sufficiently\nsmall boxes `J ∋ x`. This lemma is useful to prove, e.g., to prove the Divergence theorem for\nintegral along `⊥`.\n\nLet `l` be either `BoxIntegral.IntegrationParams.Henstock` or `⊥`. Let `g` a box-additive function\non subboxes of `I`. Suppose that there exists a nonnegative box-additive function `B` and a\ncountable set `s` with the following property.\n\nFor every `c : ℝ≥0`, a point `x ∈ I.Icc`, and a positive `ε` there exists `δ > 0` such that for any\nbox `J ≤ I` such that\n\n- `x ∈ J.Icc ⊆ Metric.closedBall x δ`;\n- if `l.bDistortion` (i.e., `l = ⊥`), then the distortion of `J` is less than or equal to `c`,\n\nthe distance between the term `vol J (f x)` of an integral sum corresponding to `J` and `g J` is\nless than or equal to `ε` if `x ∈ s` and is less than or equal to `ε * B J` otherwise.\n\nThen `f` is integrable on `I` along `l` with integral `g I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_le_Henstock_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.Henstock\">BoxIntegral.IntegrationParams.Henstock</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB0 : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span>.Countable</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>),\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span></span> →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bDistortion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.distortion</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>),\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span></span> →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bDistortion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.distortion</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L752-L823","name":"BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO","line":752,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO","doc":"This is an auxiliary lemma used to prove two statements at once. Use one of the next two\nlemmas instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_bRiemann_eq_false_of_forall_isLittleO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bRiemann</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB0 : <span class=\"fn\">∀ (<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span>.Countable</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlH : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Nonempty</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bHenstock</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>),\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span></span> →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bDistortion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.distortion</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H₂ : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>),\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>,\n    <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n      <span class=\"fn\">∃ <span class=\"fn\">δ</span> &gt; <span class=\"fn\">0</span>,\n        <span class=\"fn\">∀ <span class=\"fn\">J</span> ≤ <span class=\"fn\">I</span>,\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">δ</span></span></span> →\n            <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bHenstock</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span></span>)</span> →\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.bDistortion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.distortion</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">J</span></span></span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L737-L746","name":"BoxIntegral.integrable_of_continuousOn","line":737,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_continuousOn","doc":"A continuous function is box-integrable with respect to any locally finite measure.\n\nThis is true for any volume with bounded variation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_continuousOn\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L727-L731","name":"BoxIntegral.integrable_of_bounded_and_ae_continuous","line":727,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuous","doc":"A function that is bounded on a box `I` and a.e. continuous is integrable on `I`.\n\nThis is a version of `integrable_of_bounded_and_ae_continuousWithinAt` with a stronger continuity\nassumption so that the user does not need to specialize the continuity assumption to each box on\nwhich the theorem is to be applied. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuous\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_bounded_and_ae_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\">∃ (<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\">∀ᵐ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) ∂<span class=\"fn\">μ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L617-L720","name":"BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt","line":617,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt","doc":"A function that is bounded and a.e. continuous on a box `I` is integrable on `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_of_bounded_and_ae_continuousWithinAt\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_of_bounded_and_ae_continuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\">∃ (<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\">∀ᵐ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) ∂<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.restrict</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L597-L602","name":"BoxIntegral.Integrable.toBoxAdditive","line":597,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive","doc":"If `f` is integrable on `I`, then `fun J ↦ integral J l f vol` is box-additive on subboxes of\n`I`: if `π₁`, `π₂` are two prepartitions of `I` covering the same part of `I`, the sum of integrals\nof `f` over the boxes of `π₁` is equal to the sum of integrals of `f` over the boxes of `π₂`.\n\nSee also `BoxIntegral.Integrable.sum_integral_congr` for an unbundled version. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">toBoxAdditive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">F</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L596-L596","name":"BoxIntegral.Integrable.toBoxAdditive_apply","line":596,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.toBoxAdditive_apply\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">toBoxAdditive_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.toBoxAdditive</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L584-L589","name":"BoxIntegral.Integrable.sum_integral_congr","line":584,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sum_integral_congr","doc":"If `f` is integrable on `I`, then `fun J ↦ integral J l f vol` is box-additive on subboxes of\n`I`: if `π₁`, `π₂` are two prepartitions of `I` covering the same part of `I`, the sum of integrals\nof `f` over the boxes of `π₁` is equal to the sum of integrals of `f` over the boxes of `π₂`.\n\nSee also `BoxIntegral.Integrable.toBoxAdditive` for a bundled version. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sum_integral_congr\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">sum_integral_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.iUnion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.iUnion</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₁</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₂</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L570-L577","name":"BoxIntegral.Integrable.tendsto_integralSum_sum_integral","line":570,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_sum_integral","doc":"Integral sum of `f` over a tagged prepartition `π` such that `π.Union = π₀.Union` tends to the\nsum of integrals of `f` over the boxes of `π₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_sum_integral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_sum_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π₀ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <span class=\"fn\">π₀</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₀</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L563-L566","name":"BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet","line":563,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet","doc":"**Henstock-Sacks inequality**. Let `r : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `r`, the integral sum of `f` over this partition differs from the\nintegral of `f` by at most `ε`. Then for any tagged *prepartition* `π` subordinate to `r`, the\nintegral sum of `f` over this prepartition differs from the integral of `f` over the part of `I`\ncovered by `π` by at most `ε`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion;\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_sum_integral_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L505-L548","name":"BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq","line":505,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq","doc":"**Henstock-Sacks inequality**. Let `r : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `r`, the integral sum of `f` over this partition differs from the\nintegral of `f` by at most `ε`. Then for any tagged *prepartition* `π` subordinate to `r`, the\nintegral sum of `f` over this prepartition differs from the integral of `f` over the part of `I`\ncovered by `π` by at most `ε`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion;\n- takes an extra argument `π₀ : prepartition I` and an assumption `π.Union = π₀.Union` instead of\n  using `π.to_prepartition`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₀ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.iUnion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₀</span>.iUnion</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π₀</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L484-L488","name":"BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single","line":484,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single","doc":"If `f` is integrable on a box `I`, then integral sums of `f` over tagged prepartitions\nthat cover exactly a subbox `J ≤ I` tend to the integral of `f` over `J` along `l`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilteriUnion_single\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_toFilteriUnion_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.single\">BoxIntegral.Prepartition.single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L479-L480","name":"BoxIntegral.Integrable.to_subbox","line":479,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox","doc":"If `f` is integrable on a box `I`, then it is integrable on any subbox of `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">to_subbox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L471-L476","name":"BoxIntegral.Integrable.to_subbox_aux","line":471,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.to_subbox_aux\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">to_subbox_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">y</span> : <span class=\"fn\">F</span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">J</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition.single\">BoxIntegral.Prepartition.single</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span> <span class=\"fn\">hJ</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">y</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L462-L467","name":"BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion","line":462,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion","doc":"If `f` is integrable on a box `I` along `l`, then for any fixed subset `s` of `I` that can be\nrepresented as a finite union of boxes, the integral sums of `f` over tagged prepartitions that\ncover exactly `s` form a Cauchy “sequence” along `l`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.cauchy_map_integralSum_toFilteriUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">cauchy_map_integralSum_toFilteriUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π₀ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <span class=\"fn\">π₀</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L448-L457","name":"BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity","line":448,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity","doc":"If `f` is integrable on `I` along `l`, then for two sufficiently fine tagged prepartitions\n(in the sense of the filter `BoxIntegral.IntegrationParams.toFilter l I`) such that they cover\nthe same part of `I`, the integral sums of `f` over `π₁` and `π₂` are very close to each other.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">tendsto_integralSum_toFilter_prod_self_inf_iUnion_eq_uniformity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a>\n  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">π</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span></span>) =&gt;\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\"><span class=\"fn\">π</span>.1</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\"><span class=\"fn\">π</span>.2</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilter</span> <span class=\"fn\">I</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilter</span> <span class=\"fn\">I</span></span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a>\n      <span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span></span> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.1</span>.iUnion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.2</span>.iUnion</span></span>}</span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L425-L443","name":"BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet","line":425,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet","doc":"**Henstock-Sacks inequality**. Let `r₁ r₂ : ℝⁿ → (0, ∞)` be a function such that for any tagged\n*partition* of `I` subordinate to `rₖ`, `k=1,2`, the integral sum of `f` over this partition differs\nfrom the integral of `f` by at most `εₖ`. Then for any two tagged *prepartition* `π₁ π₂` subordinate\nto `r₁` and `r₂` respectively and covering the same part of `I`, the integral sums of `f` over these\nprepartitions differ from each other by at most `ε₁ + ε₂`.\n\nThe actual statement\n\n- uses `BoxIntegral.Integrable.convergenceR` instead of a predicate assumption on `r`;\n- uses `BoxIntegral.IntegrationParams.MemBaseSet` instead of “subordinate to `r`” to\n  account for additional requirements like being a Henstock partition or having a bounded\n  distortion.\n\nSee also `BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet_of_iUnion_eq` and\n`BoxIntegral.Integrable.dist_integralSum_sum_integral_le_of_memBaseSet`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₁ : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₂ : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpos₁ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpos₂ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε₁</span> <span class=\"fn\">c₁</span></span>)</span> <span class=\"fn\">π₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε₂</span> <span class=\"fn\">c₂</span></span>)</span> <span class=\"fn\">π₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(HU : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.iUnion</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.iUnion</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ε₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ε₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L403-L407","name":"BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet","line":403,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.dist_integralSum_integral_le_of_memBaseSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">dist_integralSum_integral_le_of_memBaseSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπp : <span class=\"fn\"><span class=\"fn\">π</span>.IsPartition</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L398-L401","name":"BoxIntegral.Integrable.convergenceR_cond","line":398,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR_cond","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR_cond\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">convergenceR_cond</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.RCond</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.convergenceR</span> <span class=\"fn\">ε</span> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L392-L394","name":"BoxIntegral.Integrable.convergenceR","line":392,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR","doc":"If `ε > 0`, then `BoxIntegral.Integrable.convergenceR` is a function `r : ℝ≥0 → ℝⁿ → (0, ∞)`\nsuch that for every `c : ℝ≥0`, for every tagged partition `π` subordinate to `r` (and satisfying\nadditional distortion estimates if `BoxIntegral.IntegrationParams.bDistortion l = true`), the\ncorresponding integral sum is `ε`-close to the integral.\n\nIf `BoxIntegral.IntegrationParams.bRiemann = true`, then `r c x` does not depend on `x`. If\n`ε ≤ 0`, then we use `r c x = 1`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.convergenceR\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">convergenceR</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L350-L353","name":"BoxIntegral.norm_integral_le_of_le_const","line":350,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_le_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_le_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">norm_integral_le_of_le_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span>.toReal</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L338-L348","name":"BoxIntegral.norm_integral_le_of_norm_le","line":338,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_norm_le","doc":"If `‖f x‖ ≤ g x` on `[l, u]` and `g` is integrable, then the norm of the integral of `f` is less\nthan or equal to the integral of `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.norm_integral_le_of_norm_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">norm_integral_le_of_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hle : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L329-L334","name":"BoxIntegral.integral_nonneg","line":329,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_nonneg","doc":"The integral of a nonnegative function w.r.t. a volume generated by a locally-finite measure is\nnonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_nonneg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.toBoxAdditive</span>.toSMul</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L318-L323","name":"BoxIntegral.integral_smul","line":318,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L313-L315","name":"BoxIntegral.Integrable.of_smul","line":313,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">of_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L310-L311","name":"BoxIntegral.Integrable.smul","line":310,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L305-L308","name":"BoxIntegral.HasIntegral.smul","line":305,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L298-L303","name":"BoxIntegral.HasIntegral.sum","line":298,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sum\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L295-L296","name":"BoxIntegral.integral_zero","line":295,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L292-L293","name":"BoxIntegral.integrable_zero","line":292,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L289-L290","name":"BoxIntegral.hasIntegral_zero","line":289,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L286-L287","name":"BoxIntegral.integrable_const","line":286,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L283-L284","name":"BoxIntegral.integral_const","line":283,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L278-L280","name":"BoxIntegral.hasIntegral_const","line":278,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_const\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L274-L276","name":"BoxIntegral.integral_sub","line":274,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L270-L272","name":"BoxIntegral.Integrable.sub","line":270,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L267-L268","name":"BoxIntegral.HasIntegral.sub","line":267,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.sub\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L263-L265","name":"BoxIntegral.integral_neg","line":263,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L259-L260","name":"BoxIntegral.integrable_neg","line":259,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L255-L256","name":"BoxIntegral.Integrable.of_neg","line":255,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.of_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">of_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L252-L253","name":"BoxIntegral.Integrable.neg","line":252,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L249-L250","name":"BoxIntegral.HasIntegral.neg","line":249,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L245-L247","name":"BoxIntegral.integral_add","line":245,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral_add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L241-L243","name":"BoxIntegral.Integrable.add","line":241,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L237-L239","name":"BoxIntegral.HasIntegral.add","line":237,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L234-L235","name":"BoxIntegral.HasIntegral.integral_eq","line":234,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integral_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integral_eq\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">integral_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L231-L232","name":"BoxIntegral.HasIntegral.integrable","line":231,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integrable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.integrable\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">integrable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L228-L229","name":"BoxIntegral.HasIntegral.unique","line":228,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.unique\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y' : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L225-L226","name":"BoxIntegral.Integrable.mono","line":225,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l' : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hle : <span class=\"fn\"><span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l'</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L220-L223","name":"BoxIntegral.Integrable.hasIntegral","line":220,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.hasIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable.hasIntegral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">hasIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L216-L218","name":"BoxIntegral.HasIntegral.mono","line":216,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l₁ : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l₂ : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l₁</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">l₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l₂</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L202-L214","name":"BoxIntegral.integrable_iff_cauchy_basis","line":202,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy_basis","doc":"In a complete space, a function is integrable if and only if its integral sums form a Cauchy\nnet. Here we restate this fact in terms of `∀ ε > 0, ∃ r, ...`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy_basis\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_iff_cauchy_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.RCond</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>) (<span class=\"fn\">π₁ </span><span class=\"fn\">π₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c₁</span></span>)</span> <span class=\"fn\">π₁</span></span> →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.IsPartition</span> →\n              <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c₂</span></span>)</span> <span class=\"fn\">π₂</span></span> →\n                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.IsPartition</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L196-L198","name":"BoxIntegral.integrable_iff_cauchy","line":196,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integrable_iff_cauchy\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integrable_iff_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\">BoxIntegral.Integrable</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L187-L194","name":"BoxIntegral.HasIntegral.of_mul","line":187,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_mul","doc":"Quite often it is more natural to prove an estimate of the form `a * ε`, not `ε` in the RHS of\n`BoxIntegral.hasIntegral_iff`, so we provide this auxiliary lemma.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.of_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span> →\n    <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.RCond</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>) (<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">π</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.IsPartition</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L179-L183","name":"BoxIntegral.hasIntegral_iff","line":179,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_iff","doc":"The `ε`-`δ` definition of `BoxIntegral.HasIntegral`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.hasIntegral_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegral_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.RCond</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>) (<span class=\"fn\">π</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>),\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.MemBaseSet</span> <span class=\"fn\">I</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">π</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.IsPartition</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L174-L176","name":"BoxIntegral.HasIntegral.tendsto","line":174,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.tendsto","doc":"Reinterpret `BoxIntegral.HasIntegral` as `Filter.Tendsto`, e.g., dot-notation theorems\nthat are shadowed in the `BoxIntegral.HasIntegral` namespace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral.tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toFilteriUnion</span> <span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L164-L165","name":"BoxIntegral.integral","line":164,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral","doc":"The integral of a function `f` over a box `I` along a filter `l` w.r.t. a volume `vol`.\nReturns zero on non-integrable functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L159-L160","name":"BoxIntegral.Integrable","line":159,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable","doc":"A function is integrable if there exists a vector that satisfies the `HasIntegral`\npredicate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.Integrable\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Integrable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L153-L155","name":"BoxIntegral.HasIntegral","line":153,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral","doc":"The predicate `HasIntegral I l f vol y` says that `y` is the integral of `f` over `I` along `l`\nw.r.t. volume `vol`. This means that integral sums of `f` tend to `𝓝 y` along\n`BoxIntegral.IntegrationParams.toFilteriUnion I ⊤`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L139-L141","name":"BoxIntegral.integralSum_smul","line":139,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_smul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L134-L136","name":"BoxIntegral.integralSum_neg","line":134,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_neg\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L129-L131","name":"BoxIntegral.integralSum_add","line":129,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_add\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">g</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L120-L126","name":"BoxIntegral.integralSum_disjUnion","line":120,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_disjUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_disjUnion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_disjUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">π₁</span>.iUnion</span> <span class=\"fn\"><span class=\"fn\">π₂</span>.iUnion</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.disjUnion</span> <span class=\"fn\">π₂</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L109-L117","name":"BoxIntegral.integralSum_sub_partitions","line":109,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_sub_partitions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_sub_partitions\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_sub_partitions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">π₁</span>.IsPartition</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">π₂</span>.IsPartition</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₁</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.toPrepartition</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">π₂</span>.toPrepartition</span></span>)</span>.boxes</span>,\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₁</span>.infPrepartition</span> <span class=\"fn\"><span class=\"fn\">π₂</span>.toPrepartition</span></span>)</span>.tag</span> <span class=\"fn\">J</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">vol</span> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π₂</span>.infPrepartition</span> <span class=\"fn\"><span class=\"fn\">π₁</span>.toPrepartition</span></span>)</span>.tag</span> <span class=\"fn\">J</span></span>)</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L104-L107","name":"BoxIntegral.integralSum_fiberwise","line":104,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_fiberwise","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_fiberwise\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_fiberwise</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">y</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">π</span>.boxes</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.filter</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L99-L102","name":"BoxIntegral.integralSum_inf_partition","line":99,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_inf_partition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_inf_partition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_inf_partition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{π' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">π'</span>.IsPartition</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.infPrepartition</span> <span class=\"fn\">π'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L87-L97","name":"BoxIntegral.integralSum_biUnion_partition","line":87,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnion_partition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnion_partition\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_biUnion_partition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(πi : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπi : <span class=\"fn\">∀ <span class=\"fn\">J</span> ∈ <span class=\"fn\">π</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">πi</span> <span class=\"fn\">J</span></span>)</span>.IsPartition</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.biUnionPrepartition</span> <span class=\"fn\">πi</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">π</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L81-L85","name":"BoxIntegral.integralSum_biUnionTagged","line":81,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnionTagged","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum_biUnionTagged\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum_biUnionTagged</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Basic.html#BoxIntegral.Prepartition\">BoxIntegral.Prepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(πi : <span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.biUnionTagged</span> <span class=\"fn\">πi</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">J</span> ∈ <span class=\"fn\"><span class=\"fn\">π</span>.boxes</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\">BoxIntegral.integralSum</a> <span class=\"fn\">f</span> <span class=\"fn\">vol</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">πi</span> <span class=\"fn\">J</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/BoxIntegral/Basic.lean#L78-L79","name":"BoxIntegral.integralSum","line":78,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum","doc":"The integral sum of `f : ℝⁿ → E` over a tagged prepartition `π` w.r.t. box-additive volume `vol`\nwith codomain `E →L[ℝ] F` is the sum of `vol J (f (π.tag J))` over all boxes of `π`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integralSum\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">integralSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(vol : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap\">BoxIntegral.BoxAdditiveMap</a> <span class=\"fn\">ι</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Tagged.html#BoxIntegral.TaggedPrepartition\">BoxIntegral.TaggedPrepartition</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>"}]}