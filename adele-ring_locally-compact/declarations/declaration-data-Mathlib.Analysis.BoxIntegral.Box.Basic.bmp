{"name":"Mathlib.Analysis.BoxIntegral.Box.Basic","instances":[{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instInhabitedBox","className":"Inhabited"},{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instMembershipForAllRealBox","className":"Membership"},{"typeNames":["BoxIntegral.Box","Set"],"name":"BoxIntegral.Box.instCoeTCBoxSetForAllReal","className":"CoeTC"},{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instLEBox","className":"LE"},{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instPartialOrderBox","className":"PartialOrder"},{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instSupBox","className":"Sup"},{"typeNames":["BoxIntegral.Box"],"name":"BoxIntegral.Box.instSemilatticeSupBox","className":"SemilatticeSup"},{"typeNames":["WithBot","Set"],"name":"BoxIntegral.Box.withBotCoe","className":"CoeTC"},{"typeNames":["WithBot"],"name":"BoxIntegral.Box.WithBot.inf","className":"Inf"},{"typeNames":["WithBot"],"name":"BoxIntegral.Box.instLatticeWithBotBox","className":"Lattice"}],"imports":["Init","Mathlib.Data.Set.Intervals.Monotone","Mathlib.Topology.MetricSpace.Basic","Mathlib.Topology.MetricSpace.Bounded","Mathlib.Topology.Order.MonotoneConvergence"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L528-L536","name":"BoxIntegral.Box.diam_Icc_le_of_distortion_le","line":528,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.diam_Icc_le_of_distortion_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.diam_Icc_le_of_distortion_le\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">diam_Icc_le_of_distortion_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">BoxIntegral.Box.distortion</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Bounded.html#Metric.diam\">Metric.diam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L521-L525","name":"BoxIntegral.Box.dist_le_distortion_mul","line":521,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.dist_le_distortion_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.dist_le_distortion_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">dist_le_distortion_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">BoxIntegral.Box.distortion</a> <span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L510-L518","name":"BoxIntegral.Box.nndist_le_distortion_mul","line":510,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nndist_le_distortion_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nndist_le_distortion_mul\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">nndist_le_distortion_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#NNDist.nndist\">nndist</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">BoxIntegral.Box.distortion</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#NNDist.nndist\">nndist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L496-L507","name":"BoxIntegral.Box.distortion_eq_of_sub_eq_div","line":496,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion_eq_of_sub_eq_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion_eq_of_sub_eq_div\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">distortion_eq_of_sub_eq_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.upper</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.lower</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">BoxIntegral.Box.distortion</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\">BoxIntegral.Box.distortion</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L492-L493","name":"BoxIntegral.Box.distortion","line":492,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion","doc":"The distortion of a box `I` is the maximum of the ratios of the lengths of its edges.\nIt is defined as the maximum of the ratios\n`nndist I.lower I.upper / nndist (I.lower i) (I.upper i)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.distortion\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">distortion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L472-L482","name":"BoxIntegral.Box.exists_seq_mono_tendsto","line":472,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_seq_mono_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_seq_mono_tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">exists_seq_mono_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (J : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Ioo</span> <span class=\"fn\">I</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.lower</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">J</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.upper</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">J</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L455-L469","name":"BoxIntegral.Box.iUnion_Ioo_of_tendsto","line":455,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.iUnion_Ioo_of_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.iUnion_Ioo_of_tendsto\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">iUnion_Ioo_of_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.lower</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.upper</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Ioo</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Ioo</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L451-L452","name":"BoxIntegral.Box.Ioo_subset_Icc","line":451,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo_subset_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Ioo</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L447-L448","name":"BoxIntegral.Box.Ioo_subset_coe","line":447,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo_subset_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo_subset_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Ioo</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L441-L444","name":"BoxIntegral.Box.Ioo","line":441,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo","doc":"The interior of a box. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Ioo\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Ioo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L428-L432","name":"BoxIntegral.Box.continuousOn_face_Icc","line":428,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.continuousOn_face_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.continuousOn_face_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">continuousOn_face_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> → <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">Fin.insertNth</a> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L419-L425","name":"BoxIntegral.Box.mapsTo_insertNth_face","line":419,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mapsTo_insertNth_face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">Fin.insertNth</a> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L413-L416","name":"BoxIntegral.Box.mapsTo_insertNth_face_Icc","line":413,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mapsTo_insertNth_face_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mapsTo_insertNth_face_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.insertNth\">Fin.insertNth</a> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L409-L410","name":"BoxIntegral.Box.monotone_face","line":409,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_face","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">monotone_face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L404-L406","name":"BoxIntegral.Box.face_mono","line":404,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mono\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">J</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L399-L400","name":"BoxIntegral.Box.face_mk","line":399,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">{ <span class=\"fn\">lower</span> := <span class=\"fn\">l</span>, <span class=\"fn\">upper</span> := <span class=\"fn\">u</span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">h</span> }</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">lower</span> := <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/OrderHom.html#Fin.succAbove\">Fin.succAbove</a> <span class=\"fn\">i</span></span></span>, <span class=\"fn\">upper</span> := <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/OrderHom.html#Fin.succAbove\">Fin.succAbove</a> <span class=\"fn\">i</span></span></span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L394-L395","name":"BoxIntegral.Box.face","line":394,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face","doc":"Face of a box in `ℝⁿ⁺¹ = Fin (n + 1) → ℝ`: the box in `ℝⁿ = Fin n → ℝ` with corners at\n`I.lower ∘ Fin.succAbove i` and `I.upper ∘ Fin.succAbove i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L393-L393","name":"BoxIntegral.Box.face_lower","line":393,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_lower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span>.lower</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/OrderHom.html#Fin.succAbove\">Fin.succAbove</a> <span class=\"fn\">i</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L393-L393","name":"BoxIntegral.Box.face_upper","line":393,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">face_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.face\">BoxIntegral.Box.face</a> <span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span>.upper</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/OrderHom.html#Fin.succAbove\">Fin.succAbove</a> <span class=\"fn\">i</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L381-L383","name":"BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter","line":381,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.not_disjoint_coe_iff_nonempty_inter\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">not_disjoint_coe_iff_nonempty_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L377-L378","name":"BoxIntegral.Box.disjoint_coe","line":377,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">disjoint_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L371-L374","name":"BoxIntegral.Box.disjoint_withBotCoe","line":371,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_withBotCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.disjoint_withBotCoe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">disjoint_withBotCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">I</span> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L357-L368","name":"BoxIntegral.Box.instLatticeWithBotBox","line":357,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLatticeWithBotBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLatticeWithBotBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instLatticeWithBotBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L345-L354","name":"BoxIntegral.Box.coe_inf","line":345,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inf\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L339-L342","name":"BoxIntegral.Box.WithBot.inf","line":339,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.WithBot.inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.WithBot.inf\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">WithBot</span>.<span class=\"name\">inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L331-L336","name":"BoxIntegral.Box.coe_mk'","line":331,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_mk'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">BoxIntegral.Box.mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L322-L327","name":"BoxIntegral.Box.mk'_eq_coe","line":322,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">BoxIntegral.Box.mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L316-L318","name":"BoxIntegral.Box.mk'_eq_bot","line":316,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'_eq_bot\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\">BoxIntegral.Box.mk'</a> <span class=\"fn\">l</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L311-L312","name":"BoxIntegral.Box.mk'","line":311,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'","doc":"Make a `WithBot (Box ι)` from a pair of corners `l u : ι → ℝ`. If `l i < u i` for all `i`,\nthen the result is `⟨l, u, _⟩ : Box ι`, otherwise it is `⊥`. In any case, the result interpreted\nas a set in `ι → ℝ` is the set `{x : ι → ℝ | ∀ i, x i ∈ Ioc (l i) (u i)}`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk'\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L304-L305","name":"BoxIntegral.Box.withBotCoe_inj","line":304,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_inj\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L297-L300","name":"BoxIntegral.Box.withBotCoe_subset_iff","line":297,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_subset_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe_subset_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe_subset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L291-L293","name":"BoxIntegral.Box.biUnion_coe_eq_coe","line":291,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.biUnion_coe_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.biUnion_coe_eq_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">biUnion_coe_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>), <span class=\"fn\">⋃ (_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span>), <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L282-L288","name":"BoxIntegral.Box.isSome_iff","line":282,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isSome_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isSome_iff\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isSome_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.isSome\">Option.isSome</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L279-L279","name":"BoxIntegral.Box.coe_coe","line":279,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L275-L275","name":"BoxIntegral.Box.coe_bot","line":275,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_bot\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L270-L271","name":"BoxIntegral.Box.withBotCoe","line":270,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotCoe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L268-L268","name":"BoxIntegral.Box.withBotToSet","line":268,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotToSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.withBotToSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">withBotToSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(o : <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithBot\">WithBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L251-L258","name":"BoxIntegral.Box.instSemilatticeSupBox","line":251,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSemilatticeSupBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSemilatticeSupBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instSemilatticeSupBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L247-L249","name":"BoxIntegral.Box.instSupBox","line":247,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSupBox","doc":"`I ⊔ J` is the least box that includes both `I` and `J`. Since `↑I ∪ ↑J` is usually not a box,\n`↑(I ⊔ J)` is larger than `↑I ∪ ↑J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instSupBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instSupBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Sup\">Sup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L236-L237","name":"BoxIntegral.Box.coe_subset_Icc","line":236,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_subset_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L232-L233","name":"BoxIntegral.Box.monotone_upper","line":232,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.monotone_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">monotone_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L228-L229","name":"BoxIntegral.Box.antitone_lower","line":228,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.antitone_lower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.antitone_lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">antitone_lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Antitone\">Antitone</a> <span class=\"fn\">fun (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L224-L225","name":"BoxIntegral.Box.le_iff_Icc","line":224,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_iff_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L220-L221","name":"BoxIntegral.Box.Icc_eq_pi","line":220,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_eq_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_eq_pi\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc_eq_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L216-L217","name":"BoxIntegral.Box.isCompact_Icc","line":216,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isCompact_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.isCompact_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">isCompact_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L212-L213","name":"BoxIntegral.Box.lower_mem_Icc","line":212,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_mem_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_mem_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_mem_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L207-L208","name":"BoxIntegral.Box.upper_mem_Icc","line":207,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem_Icc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem_Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper_mem_Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L203-L203","name":"BoxIntegral.Box.Icc_def","line":203,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">BoxIntegral.Box.Icc</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L199-L200","name":"BoxIntegral.Box.Icc","line":199,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc","doc":"Closed box corresponding to `I : BoxIntegral.Box ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">Icc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L195-L196","name":"BoxIntegral.Box.instPartialOrderBox","line":195,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instPartialOrderBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instPartialOrderBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instPartialOrderBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L191-L192","name":"BoxIntegral.Box.ne_of_disjoint_coe","line":191,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ne_of_disjoint_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ne_of_disjoint_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">ne_of_disjoint_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L187-L188","name":"BoxIntegral.Box.ext","line":187,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.ext\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L182-L183","name":"BoxIntegral.Box.coe_inj","line":182,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_inj\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L174-L178","name":"BoxIntegral.Box.injective_coe","line":174,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.injective_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.injective_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">injective_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">BoxIntegral.Box.toSet</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L170-L171","name":"BoxIntegral.Box.le_iff_bounds","line":170,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_bounds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_iff_bounds\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_iff_bounds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.lower</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">J</span>.upper</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L167-L167","name":"BoxIntegral.Box.coe_subset_coe","line":167,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_subset_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_subset_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L153-L161","name":"BoxIntegral.Box.le_TFAE","line":153,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_TFAE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_TFAE\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_TFAE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/TFAE.html#List.TFAE\">List.TFAE</a> <span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\"><span class=\"fn\">J</span>.lower</span> <span class=\"fn\"><span class=\"fn\">J</span>.upper</span></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.lower</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.lower</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">J</span>.upper</span></span></span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L150-L150","name":"BoxIntegral.Box.le_def","line":150,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.le_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">le_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L147-L148","name":"BoxIntegral.Box.instLEBox","line":147,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLEBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instLEBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instLEBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L143-L144","name":"BoxIntegral.Box.empty_ne_coe","line":143,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.empty_ne_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.empty_ne_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">empty_ne_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L138-L139","name":"BoxIntegral.Box.coe_ne_empty","line":138,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_ne_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_ne_empty\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_ne_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L133-L134","name":"BoxIntegral.Box.nonempty_coe","line":133,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nonempty_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.nonempty_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">nonempty_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L129-L130","name":"BoxIntegral.Box.exists_mem","line":129,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.exists_mem\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">exists_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L125-L126","name":"BoxIntegral.Box.upper_mem","line":125,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper_mem\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L120-L121","name":"BoxIntegral.Box.coe_eq_pi","line":120,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_eq_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.coe_eq_pi\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">coe_eq_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L116-L117","name":"BoxIntegral.Box.mem_univ_Ioc","line":116,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_univ_Ioc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_univ_Ioc\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_univ_Ioc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L113-L113","name":"BoxIntegral.Box.mem_def","line":113,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_def\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L110-L110","name":"BoxIntegral.Box.mem_coe","line":110,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_coe\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L106-L106","name":"BoxIntegral.Box.mem_mk","line":106,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mem_mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mem_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">{ <span class=\"fn\">lower</span> := <span class=\"fn\">l</span>, <span class=\"fn\">upper</span> := <span class=\"fn\">u</span>, <span class=\"fn\">lower_lt_upper</span> := <span class=\"fn\">H</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L102-L103","name":"BoxIntegral.Box.instCoeTCBoxSetForAllReal","line":102,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instCoeTCBoxSetForAllReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instCoeTCBoxSetForAllReal\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instCoeTCBoxSetForAllReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L100-L100","name":"BoxIntegral.Box.toSet","line":100,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.toSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.toSet\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L95-L96","name":"BoxIntegral.Box.instMembershipForAllRealBox","line":95,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instMembershipForAllRealBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instMembershipForAllRealBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instMembershipForAllRealBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L91-L92","name":"BoxIntegral.Box.lower_ne_upper","line":91,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_ne_upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_ne_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_ne_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.upper</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L87-L88","name":"BoxIntegral.Box.lower_le_upper","line":87,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_le_upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_le_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_le_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.lower</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">I</span>.upper</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L84-L85","name":"BoxIntegral.Box.instInhabitedBox","line":84,"kind":"instance","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instInhabitedBox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.instInhabitedBox\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">instInhabitedBox</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L75-L75","name":"BoxIntegral.Box.lower_lt_upper","line":75,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_lt_upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower_lt_upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower_lt_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.lower</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.upper</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L74-L74","name":"BoxIntegral.Box.upper","line":74,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.upper\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L74-L74","name":"BoxIntegral.Box.lower","line":74,"kind":"def","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.lower\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L73-L73","name":"BoxIntegral.Box.mk","line":73,"kind":"ctor","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.mk\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lower : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(upper : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lower_lt_upper : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">lower</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">upper</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/BoxIntegral/Box/Basic.lean#L73-L75","name":"BoxIntegral.Box","line":73,"kind":"structure","docLink":"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box","doc":"A nontrivial rectangular box in `ι → ℝ` with corners `lower` and `upper`. Represents the product\nof half-open intervals `(lower i, upper i]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">Box</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"}]}