{"name":"Mathlib.Analysis.Normed.Group.Hom","instances":[{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.funLike","className":"DFunLike"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toAddMonoidHomClass","className":"AddMonoidHomClass"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.hasOpNorm","className":"Norm"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.add","className":"Add"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.zero","className":"Zero"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.inhabited","className":"Inhabited"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.neg","className":"Neg"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.sub","className":"Sub"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.smul","className":"SMul"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.smulCommClass","className":"SMulCommClass"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.isScalarTower","className":"IsScalarTower"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.isCentralScalar","className":"IsCentralScalar"},{"typeNames":["Nat","NormedAddGroupHom"],"name":"NormedAddGroupHom.nsmul","className":"SMul"},{"typeNames":["Int","NormedAddGroupHom"],"name":"NormedAddGroupHom.zsmul","className":"SMul"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toAddCommGroup","className":"AddCommGroup"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toSeminormedAddCommGroup","className":"SeminormedAddCommGroup"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.toNormedAddCommGroup","className":"NormedAddCommGroup"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.distribMulAction","className":"DistribMulAction"},{"typeNames":["NormedAddGroupHom"],"name":"NormedAddGroupHom.module","className":"Module"}],"imports":["Init","Mathlib.Analysis.Normed.Group.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L992-L994","name":"NormedAddGroupHom.Equalizer.norm_map_le","line":992,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_map_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_map_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">norm_map_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f₁</span> <span class=\"fn\">g₁</span></span>)</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span> <span class=\"fn\">hf</span> <span class=\"fn\">hg</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L987-L989","name":"NormedAddGroupHom.Equalizer.map_normNoninc","line":987,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_normNoninc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_normNoninc\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">map_normNoninc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span> <span class=\"fn\">hf</span> <span class=\"fn\">hg</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L982-L984","name":"NormedAddGroupHom.Equalizer.norm_lift_le","line":982,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_lift_le","doc":"If `φ` satisfies `‖φ‖ ≤ C`, then the same is true for the lifted morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.norm_lift_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">norm_lift_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">φ</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\">NormedAddGroupHom.Equalizer.lift</a> <span class=\"fn\">φ</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L976-L978","name":"NormedAddGroupHom.Equalizer.lift_normNoninc","line":976,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_normNoninc","doc":"The lifting of a norm nonincreasing morphism is norm nonincreasing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_normNoninc\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">lift_normNoninc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\">NormedAddGroupHom.Equalizer.lift</a> <span class=\"fn\">φ</span> <span class=\"fn\">h</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L972-L972","name":"NormedAddGroupHom.Equalizer.ι_normNoninc","line":972,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_normNoninc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_normNoninc\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">ι_normNoninc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L964-L969","name":"NormedAddGroupHom.Equalizer.map_comp_map","line":964,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_comp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_comp_map\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">map_comp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₃ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₃</span> <span class=\"fn\">W₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₃ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₃</span> <span class=\"fn\">W₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₂</span> <span class=\"fn\">W₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ'</span> <span class=\"fn\">f₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₃</span> <span class=\"fn\">φ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ'</span> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₃</span> <span class=\"fn\">φ'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">φ'</span> <span class=\"fn\">ψ'</span> <span class=\"fn\">hf'</span> <span class=\"fn\">hg'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span> <span class=\"fn\">hf</span> <span class=\"fn\">hg</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">φ'</span> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ'</span> <span class=\"fn\">ψ</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L959-L961","name":"NormedAddGroupHom.Equalizer.comm_sq₂","line":959,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comm_sq₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comm_sq₂\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">comm_sq₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₃ : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₃ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₃</span> <span class=\"fn\">W₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ' : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₂</span> <span class=\"fn\">W₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ'</span> <span class=\"fn\">f₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₃</span> <span class=\"fn\">φ'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ'</span> <span class=\"fn\">ψ</span></span>)</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">φ'</span> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L954-L956","name":"NormedAddGroupHom.Equalizer.map_id","line":954,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map_id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">W₁</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f₁</span> <span class=\"fn\">g₁</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L948-L950","name":"NormedAddGroupHom.Equalizer.ι_comp_map","line":948,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_map\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">ι_comp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f₂</span> <span class=\"fn\">g₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\">NormedAddGroupHom.Equalizer.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span> <span class=\"fn\">hf</span> <span class=\"fn\">hg</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f₁</span> <span class=\"fn\">g₁</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L937-L941","name":"NormedAddGroupHom.Equalizer.map","line":937,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map","doc":"Given `φ : NormedAddGroupHom V₁ V₂` and `ψ : NormedAddGroupHom W₁ W₂` such that\n`ψ.comp f₁ = f₂.comp φ` and `ψ.comp g₁ = g₂.comp φ`, the induced morphism\n`NormedAddGroupHom (f₁.equalizer g₁) (f₂.equalizer g₂)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.map\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₁ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W₂ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">W₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">W₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">W₁</span> <span class=\"fn\">W₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">ψ</span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f₁</span> <span class=\"fn\">g₁</span></span>)</span></span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f₂</span> <span class=\"fn\">g₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L923-L931","name":"NormedAddGroupHom.Equalizer.liftEquiv","line":923,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv","doc":"The lifting property of the equalizer as an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">liftEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span> }</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L922-L922","name":"NormedAddGroupHom.Equalizer.liftEquiv_apply","line":922,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">liftEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\">{ <span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span> // <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NormedAddGroupHom.Equalizer.liftEquiv</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\">NormedAddGroupHom.Equalizer.lift</a> <span class=\"fn\">↑<span class=\"fn\">φ</span></span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L922-L922","name":"NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe","line":922,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">liftEquiv_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NormedAddGroupHom.Equalizer.liftEquiv</span>.symm</span> <span class=\"fn\">ψ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">ψ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L915-L918","name":"NormedAddGroupHom.Equalizer.ι_comp_lift","line":915,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι_comp_lift\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">ι_comp_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\">NormedAddGroupHom.Equalizer.lift</a> <span class=\"fn\">φ</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L899-L911","name":"NormedAddGroupHom.Equalizer.lift","line":899,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift","doc":"If `φ : NormedAddGroupHom V₁ V` is such that `f.comp φ = g.comp φ`, the induced morphism\n`NormedAddGroupHom V₁ (f.equalizer g)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L898-L898","name":"NormedAddGroupHom.Equalizer.lift_apply_coe","line":898,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift_apply_coe\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">lift_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">φ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.lift\">NormedAddGroupHom.Equalizer.lift</a> <span class=\"fn\">φ</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">v</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L888-L891","name":"NormedAddGroupHom.Equalizer.comp_ι_eq","line":888,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comp_ι_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.comp_ι_eq\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">comp_ι_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\">NormedAddGroupHom.Equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L884-L885","name":"NormedAddGroupHom.Equalizer.ι","line":884,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι","doc":"The inclusion of `f.equalizer g` as a `NormedAddGroupHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.Equalizer.ι\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">(<span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\">NormedAddGroupHom.equalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L877-L878","name":"NormedAddGroupHom.equalizer","line":877,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer","doc":"The equalizer of two morphisms `f g : NormedAddGroupHom V W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.equalizer\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">equalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L862-L863","name":"NormedAddGroupHom.normNoninc_of_isometry","line":862,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.normNoninc_of_isometry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.normNoninc_of_isometry\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">normNoninc_of_isometry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L857-L859","name":"NormedAddGroupHom.isometry_comp","line":857,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_comp\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">isometry_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L853-L854","name":"NormedAddGroupHom.isometry_id","line":853,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isometry_id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">isometry_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L849-L850","name":"NormedAddGroupHom.norm_eq_of_isometry","line":849,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_eq_of_isometry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_eq_of_isometry\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_eq_of_isometry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L841-L842","name":"NormedAddGroupHom.NormNoninc.neg_iff","line":841,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.neg_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.neg_iff\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span>.<span class=\"name\">neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L836-L837","name":"NormedAddGroupHom.NormNoninc.comp","line":836,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.comp\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L833-L833","name":"NormedAddGroupHom.NormNoninc.id","line":833,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L830-L830","name":"NormedAddGroupHom.NormNoninc.zero","line":830,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L823-L827","name":"NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one","line":823,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span>.<span class=\"name\">normNoninc_iff_norm_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\">NormedAddGroupHom.NormNoninc</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L817-L818","name":"NormedAddGroupHom.NormNoninc","line":817,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc","doc":"A `NormedAddGroupHom` is *norm-nonincreasing* if `‖f v‖ ≤ ‖v‖` for all `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.NormNoninc\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">NormNoninc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L808-L809","name":"NormedAddGroupHom.range_comp_incl_top","line":808,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range_comp_incl_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range_comp_incl_top\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">range_comp_incl_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\">NormedAddGroupHom.incl</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L802-L804","name":"NormedAddGroupHom.incl_range","line":802,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_range\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">incl_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\">NormedAddGroupHom.incl</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L797-L799","name":"NormedAddGroupHom.comp_range","line":797,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_range\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">comp_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup.map\">AddSubgroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom\">NormedAddGroupHom.toAddMonoidHom</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L793-L794","name":"NormedAddGroupHom.mem_range_self","line":793,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range_self\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mem_range_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L789-L789","name":"NormedAddGroupHom.mem_range","line":789,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_range\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mem_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\">NormedAddGroupHom.range</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (w : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L785-L786","name":"NormedAddGroupHom.range","line":785,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range","doc":"The image of a bounded group homomorphism. Naturally endowed with a\n`SeminormedAddCommGroup` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.range\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L769-L771","name":"NormedAddGroupHom.isClosed_ker","line":769,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isClosed_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isClosed_ker\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">isClosed_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L765-L766","name":"NormedAddGroupHom.coe_ker","line":765,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_ker\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L760-L762","name":"NormedAddGroupHom.ker_zero","line":760,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker_zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ker_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L754-L756","name":"NormedAddGroupHom.ker.incl_comp_lift","line":754,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.incl_comp_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.incl_comp_lift\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ker</span>.<span class=\"name\">incl_comp_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\">NormedAddGroupHom.incl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift\">NormedAddGroupHom.ker.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L747-L750","name":"NormedAddGroupHom.ker.lift","line":747,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift","doc":"Given a normed group hom `f : V₁ → V₂` satisfying `g.comp f = 0` for some `g : V₂ → V₃`,\nthe corestriction of `f` to the kernel of `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ker</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L746-L746","name":"NormedAddGroupHom.ker.lift_apply_coe","line":746,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift_apply_coe\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ker</span>.<span class=\"name\">lift_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker.lift\">NormedAddGroupHom.ker.lift</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">v</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L740-L741","name":"NormedAddGroupHom.mem_ker","line":740,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mem_ker\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mem_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\">NormedAddGroupHom.ker</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L736-L737","name":"NormedAddGroupHom.ker","line":736,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker","doc":"The kernel of a bounded group homomorphism. Naturally endowed with a\n`SeminormedAddCommGroup` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ker\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L723-L724","name":"NormedAddGroupHom.norm_incl","line":723,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_incl\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">V'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\">NormedAddGroupHom.incl</a> <span class=\"fn\">V'</span></span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L717-L720","name":"NormedAddGroupHom.incl","line":717,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl","doc":"The inclusion of an `AddSubgroup`, as bounded group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">(<span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L716-L716","name":"NormedAddGroupHom.incl_apply","line":716,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">incl_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.incl\">NormedAddGroupHom.incl</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">self</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L703-L705","name":"NormedAddGroupHom.coe_comp","line":703,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_comp\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L696-L700","name":"NormedAddGroupHom.comp_assoc","line":696,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_assoc\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₄ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₄</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₃</span> <span class=\"fn\">V₄</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L691-L693","name":"NormedAddGroupHom.zero_comp","line":691,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_comp\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">zero_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">0</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L685-L687","name":"NormedAddGroupHom.comp_zero","line":685,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">comp_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L669-L681","name":"NormedAddGroupHom.compHom","line":669,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.compHom","doc":"Composition of normed groups hom as an additive group morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.compHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">compHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L662-L665","name":"NormedAddGroupHom.norm_comp_le_of_le'","line":662,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le'\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_comp_le_of_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C₃ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">C₃</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">C₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">C₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">g</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L657-L659","name":"NormedAddGroupHom.norm_comp_le_of_le","line":657,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le_of_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_comp_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">g</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">C₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L652-L654","name":"NormedAddGroupHom.norm_comp_le","line":652,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_comp_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_comp_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">g</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L643-L649","name":"NormedAddGroupHom.comp","line":643,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp","doc":"The composition of continuous normed group homs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L642-L642","name":"NormedAddGroupHom.comp_apply","line":642,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₃ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₂</span> <span class=\"fn\">V₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.comp\">NormedAddGroupHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L634-L636","name":"NormedAddGroupHom.module","line":634,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.module","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.module\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">module</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L630-L632","name":"NormedAddGroupHom.distribMulAction","line":630,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.distribMulAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.distribMulAction\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">distribMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L623-L624","name":"NormedAddGroupHom.sum_apply","line":623,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sum_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sum_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">sum_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">v</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L618-L620","name":"NormedAddGroupHom.coe_sum","line":618,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sum\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L611-L614","name":"NormedAddGroupHom.coeAddHom","line":611,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom","doc":"Coercion of a `NormedAddGroupHom` is an `AddMonoidHom`. Similar to `AddMonoidHom.coeFn`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coeAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><span class=\"fn\">V₁</span> → <span class=\"fn\">V₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L610-L610","name":"NormedAddGroupHom.coeAddHom_apply","line":610,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coeAddHom_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coeAddHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>) (<span class=\"fn\">a_1</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">NormedAddGroupHom.coeAddHom</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L599-L606","name":"NormedAddGroupHom.toNormedAddCommGroup","line":599,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toNormedAddCommGroup","doc":"Normed group homomorphisms themselves form a normed group with respect to\nthe operator norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toNormedAddCommGroup\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toNormedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L589-L594","name":"NormedAddGroupHom.toSeminormedAddCommGroup","line":589,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toSeminormedAddCommGroup","doc":"Normed group homomorphisms themselves form a seminormed group with respect to\nthe operator norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toSeminormedAddCommGroup\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toSeminormedAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L583-L585","name":"NormedAddGroupHom.toAddCommGroup","line":583,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddCommGroup","doc":"Homs between two given normed groups form a commutative additive group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddCommGroup\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L575-L576","name":"NormedAddGroupHom.zsmul_apply","line":575,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">zsmul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L570-L571","name":"NormedAddGroupHom.coe_zsmul","line":570,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zsmul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L558-L566","name":"NormedAddGroupHom.zsmul","line":558,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zsmul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L554-L555","name":"NormedAddGroupHom.nsmul_apply","line":554,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">nsmul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L549-L550","name":"NormedAddGroupHom.coe_nsmul","line":549,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_nsmul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L537-L545","name":"NormedAddGroupHom.nsmul","line":537,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.nsmul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L531-L533","name":"NormedAddGroupHom.isCentralScalar","line":531,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isCentralScalar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isCentralScalar\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">isCentralScalar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L527-L529","name":"NormedAddGroupHom.isScalarTower","line":527,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isScalarTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.isScalarTower\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">isScalarTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L523-L525","name":"NormedAddGroupHom.smulCommClass","line":523,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smulCommClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smulCommClass\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">smulCommClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L519-L520","name":"NormedAddGroupHom.smul_apply","line":519,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L514-L515","name":"NormedAddGroupHom.coe_smul","line":514,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_smul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L499-L511","name":"NormedAddGroupHom.smul","line":499,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.smul\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Algebra.html#BoundedSMul\">BoundedSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L485-L487","name":"NormedAddGroupHom.sub_apply","line":485,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">sub_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L480-L481","name":"NormedAddGroupHom.coe_sub","line":480,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_sub\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L472-L477","name":"NormedAddGroupHom.sub","line":472,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub","doc":"Subtraction of normed group homs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.sub\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L464-L465","name":"NormedAddGroupHom.opNorm_neg","line":464,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_neg\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L459-L461","name":"NormedAddGroupHom.neg_apply","line":459,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L454-L455","name":"NormedAddGroupHom.coe_neg","line":454,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_neg\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L450-L451","name":"NormedAddGroupHom.neg","line":450,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg","doc":"Opposite of a normed group hom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.neg\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L442-L443","name":"NormedAddGroupHom.coe_id","line":442,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L436-L439","name":"NormedAddGroupHom.norm_id","line":436,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id","doc":"If a normed space is non-trivial, then the norm of the identity equals `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L428-L432","name":"NormedAddGroupHom.norm_id_of_nontrivial_seminorm","line":428,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_of_nontrivial_seminorm","doc":"If there is an element with norm different from `0`, then the norm of the identity equals `1`.\n(Since we are working with seminorms supposing that the space is non-trivial is not enough.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_of_nontrivial_seminorm\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_id_of_nontrivial_seminorm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∃ (x : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L422-L423","name":"NormedAddGroupHom.norm_id_le","line":422,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_le","doc":"The norm of the identity is at most `1`. It is in fact `1`, except when the norm of every\nelement vanishes, where it is `0`. (Since we are working with seminorms this can happen even if the\nspace is non-trivial.) It means that one can not do better than an inequality in general. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_id_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_id_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L415-L416","name":"NormedAddGroupHom.id","line":415,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id","doc":"The identity as a continuous normed group hom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L414-L414","name":"NormedAddGroupHom.id_apply","line":414,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.id\">NormedAddGroupHom.id</a> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L402-L403","name":"NormedAddGroupHom.zero_apply","line":402,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">zero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L397-L398","name":"NormedAddGroupHom.coe_zero","line":397,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L383-L393","name":"NormedAddGroupHom.opNorm_zero_iff","line":383,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero_iff","doc":"For normed groups, an operator is zero iff its norm vanishes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero_iff\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L371-L379","name":"NormedAddGroupHom.opNorm_zero","line":371,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero","doc":"The norm of the `0` operator is `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">0</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L367-L368","name":"NormedAddGroupHom.inhabited","line":367,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.inhabited\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L364-L365","name":"NormedAddGroupHom.zero","line":364,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.zero\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L356-L358","name":"NormedAddGroupHom.add_apply","line":356,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add_apply\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L351-L352","name":"NormedAddGroupHom.coe_add","line":351,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_add\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L336-L337","name":"NormedAddGroupHom.opNorm_add_le","line":336,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_add_le","doc":"The operator norm satisfies the triangle inequality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_add_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">g</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L326-L333","name":"NormedAddGroupHom.add","line":326,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add","doc":"Addition of normed group homs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.add\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L319-L319","name":"AddMonoidHom.mkNormedAddGroupHom_norm_le'","line":319,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le'","doc":"**Alias** of `NormedAddGroupHom.mkNormedAddGroupHom_norm_le'`.\n\n---\n\nIf a bounded group homomorphism map is constructed from a group homomorphism\nvia the constructor `AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound\ngiven to the constructor or zero if this bound is negative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le'\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mkNormedAddGroupHom_norm_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\">AddMonoidHom.mkNormedAddGroupHom</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L316-L316","name":"AddMonoidHom.mkNormedAddGroupHom_norm_le","line":316,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le","doc":"**Alias** of `NormedAddGroupHom.mkNormedAddGroupHom_norm_le`.\n\n---\n\nIf a bounded group homomorphism map is constructed from a group homomorphism via the constructor\n`AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound given to the constructor\nif it is nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom_norm_le\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mkNormedAddGroupHom_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\">AddMonoidHom.mkNormedAddGroupHom</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L310-L313","name":"NormedAddGroupHom.mkNormedAddGroupHom_norm_le'","line":310,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le'","doc":"If a bounded group homomorphism map is constructed from a group homomorphism\nvia the constructor `AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound\ngiven to the constructor or zero if this bound is negative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le'\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mkNormedAddGroupHom_norm_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\">AddMonoidHom.mkNormedAddGroupHom</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L303-L305","name":"NormedAddGroupHom.ofLipschitz_norm_le","line":303,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz_norm_le","doc":"If a bounded group homomorphism map is constructed from a group homomorphism via the constructor\n`NormedAddGroupHom.ofLipschitz`, then its norm is bounded by the bound given to the constructor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz_norm_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ofLipschitz_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">K</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz\">NormedAddGroupHom.ofLipschitz</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L296-L298","name":"NormedAddGroupHom.mkNormedAddGroupHom_norm_le","line":296,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le","doc":"If a bounded group homomorphism map is constructed from a group homomorphism via the constructor\n`AddMonoidHom.mkNormedAddGroupHom`, then its norm is bounded by the bound given to the constructor\nif it is nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mkNormedAddGroupHom_norm_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mkNormedAddGroupHom_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\">AddMonoidHom.mkNormedAddGroupHom</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">h</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L288-L290","name":"NormedAddGroupHom.opNorm_le_of_lipschitz","line":288,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_of_lipschitz","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_of_lipschitz\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_le_of_lipschitz</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">K</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L281-L285","name":"NormedAddGroupHom.opNorm_eq_of_bounds","line":281,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_eq_of_bounds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_eq_of_bounds\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_eq_of_bounds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M_nonneg : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_above : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_below : <span class=\"fn\">∀ <span class=\"fn\">N</span> ≥ <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L277-L278","name":"NormedAddGroupHom.opNorm_le_bound","line":277,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_bound","doc":"If one controls the norm of every `f x`, then one controls the norm of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_le_bound\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_le_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hMp : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hM : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L272-L273","name":"NormedAddGroupHom.ratio_le_opNorm","line":272,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ratio_le_opNorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ratio_le_opNorm\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ratio_le_opNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L268-L269","name":"NormedAddGroupHom.continuous","line":268,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.continuous\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L263-L264","name":"NormedAddGroupHom.uniformContinuous","line":263,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.uniformContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.uniformContinuous\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">uniformContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L257-L260","name":"NormedAddGroupHom.lipschitz","line":257,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.lipschitz","doc":"continuous linear maps are Lipschitz continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.lipschitz\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">lipschitz</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L252-L253","name":"NormedAddGroupHom.le_of_opNorm_le","line":252,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_of_opNorm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_of_opNorm_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">le_of_opNorm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L248-L249","name":"NormedAddGroupHom.le_opNorm_of_le","line":248,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm_of_le\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">le_opNorm_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">V₁</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L237-L245","name":"NormedAddGroupHom.le_opNorm","line":237,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm","doc":"The fundamental property of the operator norm: `‖f x‖ ≤ ‖f‖ * ‖x‖`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.le_opNorm\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">le_opNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">V₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L232-L233","name":"NormedAddGroupHom.opNorm_nonneg","line":232,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm_nonneg\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L227-L229","name":"NormedAddGroupHom.bounds_bddBelow","line":227,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_bddBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_bddBelow\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">bounds_bddBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L221-L224","name":"NormedAddGroupHom.bounds_nonempty","line":221,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bounds_nonempty\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">bounds_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L215-L216","name":"NormedAddGroupHom.norm_def","line":215,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.norm_def\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">norm_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">f</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L211-L212","name":"NormedAddGroupHom.hasOpNorm","line":211,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.hasOpNorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.hasOpNorm\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">hasOpNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm\">Norm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L207-L208","name":"NormedAddGroupHom.opNorm","line":207,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm","doc":"The operator norm of a seminormed group homomorphism is the inf of all its bounds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.opNorm\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">opNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L198-L200","name":"NormedAddGroupHom.SurjectiveOnWith.surjOn","line":198,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.surjOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.surjOn\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">SurjectiveOnWith</span>.<span class=\"name\">surjOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\">NormedAddGroupHom.SurjectiveOnWith</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.SurjOn\">Set.SurjOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Set.univ</span> <span class=\"fn\">↑<span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L190-L195","name":"NormedAddGroupHom.SurjectiveOnWith.exists_pos","line":190,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.exists_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.exists_pos\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">SurjectiveOnWith</span>.<span class=\"name\">exists_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\">NormedAddGroupHom.SurjectiveOnWith</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ C' &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\">NormedAddGroupHom.SurjectiveOnWith</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">C'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L180-L187","name":"NormedAddGroupHom.SurjectiveOnWith.mono","line":180,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith.mono\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">SurjectiveOnWith</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C' : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\">NormedAddGroupHom.SurjectiveOnWith</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\">NormedAddGroupHom.SurjectiveOnWith</a> <span class=\"fn\">f</span> <span class=\"fn\">K</span> <span class=\"fn\">C'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L176-L177","name":"NormedAddGroupHom.SurjectiveOnWith","line":176,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith","doc":"A normed group hom is surjective on the subgroup `K` with constant `C` if every element\n`x` of `K` has a preimage whose norm is bounded above by `C*‖x‖`. This is a more\nabstract version of `f` having a right inverse defined on `K` with operator norm\nat most `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.SurjectiveOnWith\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">SurjectiveOnWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L168-L169","name":"NormedAddGroupHom.antilipschitz_of_norm_ge","line":168,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.antilipschitz_of_norm_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.antilipschitz_of_norm_ge\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">antilipschitz_of_norm_ge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Antilipschitz.html#AntilipschitzWith\">AntilipschitzWith</a> <span class=\"fn\">K</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L163-L165","name":"NormedAddGroupHom.bound","line":163,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L158-L160","name":"NormedAddGroupHom.mk_toAddMonoidHom","line":158,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk_toAddMonoidHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk_toAddMonoidHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mk_toAddMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> → <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\">∀ (<span class=\"fn\">v₁ </span>v₂ : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\">∃ (C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom\">NormedAddGroupHom.toAddMonoidHom</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_add'</span> := <span class=\"fn\">h₁</span>, <span class=\"fn\">bound'</span> := <span class=\"fn\">h₂</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.mk'\">AddMonoidHom.mk'</a> <span class=\"fn\">f</span> <span class=\"fn\">h₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L152-L154","name":"NormedAddGroupHom.toAddMonoidHom_injective","line":152,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom_injective\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toAddMonoidHom_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">NormedAddGroupHom.toAddMonoidHom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L148-L149","name":"NormedAddGroupHom.coe_toAddMonoidHom","line":148,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_toAddMonoidHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_toAddMonoidHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_toAddMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom\">NormedAddGroupHom.toAddMonoidHom</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L143-L144","name":"NormedAddGroupHom.toAddMonoidHom","line":143,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom","doc":"The group homomorphism underlying a bounded group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toAddMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L138-L139","name":"NormedAddGroupHom.coe_mkNormedAddGroupHom'","line":138,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom'\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_mkNormedAddGroupHom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom'\">AddMonoidHom.mkNormedAddGroupHom'</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">hC</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L133-L134","name":"NormedAddGroupHom.coe_mkNormedAddGroupHom","line":133,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mkNormedAddGroupHom\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_mkNormedAddGroupHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\">AddMonoidHom.mkNormedAddGroupHom</a> <span class=\"fn\">f</span> <span class=\"fn\">C</span> <span class=\"fn\">hC</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L128-L129","name":"NormedAddGroupHom.coe_mk","line":128,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_mk\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> → <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\">∀ (<span class=\"fn\">v₁ </span>v₂ : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">h₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_add'</span> := <span class=\"fn\">h₁</span>, <span class=\"fn\">bound'</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L123-L124","name":"NormedAddGroupHom.toFun_eq_coe","line":123,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun_eq_coe\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toFun_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L116-L117","name":"NormedAddGroupHom.ext_iff","line":116,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext_iff\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L112-L113","name":"NormedAddGroupHom.ext","line":112,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ext\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V₁</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L107-L108","name":"NormedAddGroupHom.coe_inj_iff","line":107,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj_iff\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_inj_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L103-L104","name":"NormedAddGroupHom.coe_injective","line":103,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_injective\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">NormedAddGroupHom.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L99-L100","name":"NormedAddGroupHom.coe_inj","line":99,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.coe_inj\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L93-L95","name":"NormedAddGroupHom.toAddMonoidHomClass","line":93,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHomClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toAddMonoidHomClass\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toAddMonoidHomClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHomClass\">AddMonoidHomClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L88-L90","name":"NormedAddGroupHom.funLike","line":88,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.funLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.funLike\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">funLike</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span>)</span> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L85-L86","name":"NormedAddGroupHom.ofLipschitz","line":85,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz","doc":"A Lipschitz continuous additive homomorphism is a normed additive group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.ofLipschitz\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">ofLipschitz</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V₁</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">V₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">K</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V₁</span> <span class=\"fn\">V₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L67-L74","name":"exists_pos_bound_of_bound","line":67,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#exists_pos_bound_of_bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#exists_pos_bound_of_bound\"><span class=\"name\">exists_pos_bound_of_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">V</span> → <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (N : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L60-L62","name":"AddMonoidHom.mkNormedAddGroupHom'","line":60,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom'","doc":"Associate to a group homomorphism a bounded group homomorphism under a norm control condition.\n\nSee `AddMonoidHom.mkNormedAddGroupHom` for a version that uses `ℝ` for the bound. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom'\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mkNormedAddGroupHom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L53-L54","name":"AddMonoidHom.mkNormedAddGroupHom","line":53,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom","doc":"Associate to a group homomorphism a bounded group homomorphism under a norm control condition.\n\nSee `AddMonoidHom.mkNormedAddGroupHom'` for a version that uses `ℝ≥0` for the bound. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#AddMonoidHom.mkNormedAddGroupHom\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">mkNormedAddGroupHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L42-L42","name":"NormedAddGroupHom.bound'","line":42,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound'","doc":"A `NormedAddGroupHom` is bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.bound'\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">bound'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L40-L40","name":"NormedAddGroupHom.map_add'","line":40,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.map_add'","doc":"A `NormedAddGroupHom` is additive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.map_add'\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">map_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v₁ : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v₂ : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">v₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L38-L38","name":"NormedAddGroupHom.toFun","line":38,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun","doc":"The function underlying a `NormedAddGroupHom` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.toFun\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">V</span> → <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L35-L35","name":"NormedAddGroupHom.mk","line":35,"kind":"ctor","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom.mk\"><span class=\"name\">NormedAddGroupHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\">V</span> → <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_add' : <span class=\"fn\">∀ (<span class=\"fn\">v₁ </span>v₂ : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">v₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">v₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">v₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bound' : <span class=\"fn\">∃ (C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">v</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">v</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\">NormedAddGroupHom</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Analysis/Normed/Group/Hom.lean#L35-L42","name":"NormedAddGroupHom","line":35,"kind":"structure","docLink":"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom","doc":"A morphism of seminormed abelian groups is a bounded group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Group/Hom.html#NormedAddGroupHom\"><span class=\"name\">NormedAddGroupHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}