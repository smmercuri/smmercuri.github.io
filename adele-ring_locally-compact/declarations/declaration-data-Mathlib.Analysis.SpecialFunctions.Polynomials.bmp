{"name":"Mathlib.Analysis.SpecialFunctions.Polynomials","instances":[],"imports":["Init","Mathlib.Algebra.Polynomial.Roots","Mathlib.Analysis.Asymptotics.AsymptoticEquivalent","Mathlib.Analysis.Asymptotics.SpecificAsymptotics"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L207-L216","name":"Polynomial.isBigO_of_degree_le","line":207,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isBigO_of_degree_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isBigO_of_degree_le\"><span class=\"name\">Polynomial</span>.<span class=\"name\">isBigO_of_degree_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Q</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L198-L203","name":"Polynomial.abs_div_tendsto_atTop_of_degree_gt","line":198,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_div_tendsto_atTop_of_degree_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_div_tendsto_atTop_of_degree_gt\"><span class=\"name\">Polynomial</span>.<span class=\"name\">abs_div_tendsto_atTop_of_degree_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hQ : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\">|<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span>|</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L189-L196","name":"Polynomial.div_tendsto_atBot_of_degree_gt","line":189,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atBot_of_degree_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atBot_of_degree_gt\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_atBot_of_degree_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hQ : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnps : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atBot</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L177-L187","name":"Polynomial.div_tendsto_atBot_of_degree_gt'","line":177,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atBot_of_degree_gt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atBot_of_degree_gt'\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_atBot_of_degree_gt'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hneg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atBot</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L168-L175","name":"Polynomial.div_tendsto_atTop_of_degree_gt","line":168,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atTop_of_degree_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atTop_of_degree_gt\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_atTop_of_degree_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hQ : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnng : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L156-L166","name":"Polynomial.div_tendsto_atTop_of_degree_gt'","line":156,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atTop_of_degree_gt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_atTop_of_degree_gt'\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_atTop_of_degree_gt'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L150-L154","name":"Polynomial.div_tendsto_leadingCoeff_div_of_degree_eq","line":150,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_leadingCoeff_div_of_degree_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_leadingCoeff_div_of_degree_eq\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_leadingCoeff_div_of_degree_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L134-L148","name":"Polynomial.div_tendsto_zero_iff_degree_lt","line":134,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_zero_iff_degree_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_zero_iff_degree_lt\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_zero_iff_degree_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hQ : <span class=\"fn\"><span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Q</span>.degree</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L124-L132","name":"Polynomial.div_tendsto_zero_of_degree_lt","line":124,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_zero_of_degree_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.div_tendsto_zero_of_degree_lt\"><span class=\"name\">Polynomial</span>.<span class=\"name\">div_tendsto_zero_of_degree_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Q</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L112-L122","name":"Polynomial.isEquivalent_atTop_div","line":112,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isEquivalent_atTop_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isEquivalent_atTop_div\"><span class=\"name\">Polynomial</span>.<span class=\"name\">isEquivalent_atTop_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Asymptotics/AsymptoticEquivalent.html#Asymptotics.IsEquivalent\">Asymptotics.IsEquivalent</a> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">Q</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt;\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span>.leadingCoeff</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.natDegree</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Q</span>.natDegree</span></span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L94-L106","name":"Polynomial.tendsto_nhds_iff","line":94,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_nhds_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_nhds_iff\"><span class=\"name\">Polynomial</span>.<span class=\"name\">tendsto_nhds_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">𝕜</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L90-L92","name":"Polynomial.abs_tendsto_atTop_iff","line":90,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_tendsto_atTop_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_tendsto_atTop_iff\"><span class=\"name\">Polynomial</span>.<span class=\"name\">abs_tendsto_atTop_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span>|</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L82-L88","name":"Polynomial.abs_isBoundedUnder_iff","line":82,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_isBoundedUnder_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_isBoundedUnder_iff\"><span class=\"name\">Polynomial</span>.<span class=\"name\">abs_isBoundedUnder_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/LiminfLimsup.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span>|</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.degree</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L76-L80","name":"Polynomial.abs_tendsto_atTop","line":76,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_tendsto_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.abs_tendsto_atTop\"><span class=\"name\">Polynomial</span>.<span class=\"name\">abs_tendsto_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span>|</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L72-L74","name":"Polynomial.tendsto_atBot_of_leadingCoeff_nonpos","line":72,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atBot_of_leadingCoeff_nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atBot_of_leadingCoeff_nonpos\"><span class=\"name\">Polynomial</span>.<span class=\"name\">tendsto_atBot_of_leadingCoeff_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnps : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atBot</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L67-L70","name":"Polynomial.tendsto_atBot_iff_leadingCoeff_nonpos","line":67,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atBot_iff_leadingCoeff_nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atBot_iff_leadingCoeff_nonpos\"><span class=\"name\">Polynomial</span>.<span class=\"name\">tendsto_atBot_iff_leadingCoeff_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atBot</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L59-L65","name":"Polynomial.tendsto_atTop_iff_leadingCoeff_nonneg","line":59,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atTop_iff_leadingCoeff_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atTop_iff_leadingCoeff_nonneg\"><span class=\"name\">Polynomial</span>.<span class=\"name\">tendsto_atTop_iff_leadingCoeff_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L53-L57","name":"Polynomial.tendsto_atTop_of_leadingCoeff_nonneg","line":53,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atTop_of_leadingCoeff_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.tendsto_atTop_of_leadingCoeff_nonneg\"><span class=\"name\">Polynomial</span>.<span class=\"name\">tendsto_atTop_of_leadingCoeff_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hdeg : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">P</span>.degree</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnng : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L39-L51","name":"Polynomial.isEquivalent_atTop_lead","line":39,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isEquivalent_atTop_lead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.isEquivalent_atTop_lead\"><span class=\"name\">Polynomial</span>.<span class=\"name\">isEquivalent_atTop_lead</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Asymptotics/AsymptoticEquivalent.html#Asymptotics.IsEquivalent\">Asymptotics.IsEquivalent</a> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">P</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) =&gt;\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.leadingCoeff</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">P</span>.natDegree</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Analysis/SpecialFunctions/Polynomials.lean#L32-L33","name":"Polynomial.eventually_no_roots","line":32,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.eventually_no_roots","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Polynomials.html#Polynomial.eventually_no_roots\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eventually_no_roots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Order/Basic.html#NormedLinearOrderedField\">NormedLinearOrderedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <span class=\"fn\">𝕜</span>) in <span class=\"fn\">Filter.atTop</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.IsRoot</span> <span class=\"fn\">x</span></span></span></span></div></div>"}]}