{"name":"Mathlib.CategoryTheory.Abelian.DiagramLemmas.Four","instances":[],"imports":["Init","Mathlib.Algebra.Homology.ExactSequence","Mathlib.CategoryTheory.Abelian.Refinements"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L216-L226","name":"CategoryTheory.Abelian.epi_of_epi_of_epi_of_epi","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_epi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_epi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">epi_of_epi_of_epi_of_epi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L202-L214","name":"CategoryTheory.Abelian.mono_of_mono_of_mono_of_mono","line":202,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_mono_of_mono_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_mono_of_mono_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">mono_of_mono_of_mono_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L196-L200","name":"CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono","line":196,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">epi_of_mono_of_epi_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L182-L194","name":"CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono'","line":182,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_mono_of_epi_of_mono'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">epi_of_mono_of_epi_of_mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L176-L180","name":"CategoryTheory.Abelian.mono_of_epi_of_epi_of_mono","line":176,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_epi_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_epi_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">mono_of_epi_of_epi_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L162-L174","name":"CategoryTheory.Abelian.mono_of_epi_of_epi_mono'","line":162,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_epi_mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_epi_mono'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">mono_of_epi_of_epi_mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L139-L148","name":"CategoryTheory.Abelian.isIso_of_epi_of_isIso_of_isIso_of_mono","line":139,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.isIso_of_epi_of_isIso_of_isIso_of_mono","doc":"The five lemma. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.isIso_of_epi_of_isIso_of_isIso_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">isIso_of_epi_of_isIso_of_isIso_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L119-L124","name":"CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono","line":119,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">epi_of_epi_of_epi_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L92-L117","name":"CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono'","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.epi_of_epi_of_epi_of_mono'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">epi_of_epi_of_epi_of_mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\">CategoryTheory.ComposableArrows.mk₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\">CategoryTheory.ComposableArrows.mk₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L83-L88","name":"CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">mono_of_epi_of_mono_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\">R₁</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">R₂</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.lean#L60-L81","name":"CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono'","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/DiagramLemmas/Four.html#CategoryTheory.Abelian.mono_of_epi_of_mono_of_mono'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Abelian</span>.<span class=\"name\">mono_of_epi_of_mono_of_mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">R₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₁' : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\">CategoryTheory.ComposableArrows.mk₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₁</span>.map'</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR₂ : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\">CategoryTheory.ComposableArrows.mk₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span>.map'</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span>.Exact</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"}]}