{"name":"Mathlib.CategoryTheory.Category.Bipointed","instances":[{"typeNames":["Bipointed","_builtin_typeu"],"name":"Bipointed.instCoeSortBipointedType","className":"CoeSort"},{"typeNames":["Bipointed"],"name":"Bipointed.instInhabitedBipointed","className":"Inhabited"},{"typeNames":["Bipointed.Hom"],"name":"Bipointed.Hom.instInhabitedHom","className":"Inhabited"},{"typeNames":["Bipointed"],"name":"Bipointed.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["Bipointed"],"name":"Bipointed.concreteCategory","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.Category.Pointed"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L237-L253","name":"pointedToBipointedSndBipointedToPointedSndAdjunction","line":237,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_snd` and `BipointedToPointed_snd`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction\"><span class=\"name\">pointedToBipointedSndBipointedToPointedSndAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L216-L232","name":"pointedToBipointedFstBipointedToPointedFstAdjunction","line":216,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_fst` and `BipointedToPointed_fst`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction\"><span class=\"name\">pointedToBipointedFstBipointedToPointedFstAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L207-L211","name":"pointedToBipointedCompBipointedToPointedSnd","line":207,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd","doc":"`BipointedToPointed_snd` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L206-L206","name":"pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","line":206,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L206-L206","name":"pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","line":206,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L198-L202","name":"pointedToBipointedCompBipointedToPointedFst","line":198,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst","doc":"`BipointedToPointed_fst` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L197-L197","name":"pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L197-L197","name":"pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L191-L193","name":"pointedToBipointedSnd_comp_swap","line":191,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap\"><span class=\"name\">pointedToBipointedSnd_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L185-L187","name":"pointedToBipointedFst_comp_swap","line":185,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap\"><span class=\"name\">pointedToBipointedFst_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L177-L181","name":"pointedToBipointedSnd","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd","doc":"The functor from `Pointed` to `Bipointed` which adds a first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\"><span class=\"name\">pointedToBipointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L169-L173","name":"pointedToBipointedFst","line":169,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst","doc":"The functor from `Pointed` to `Bipointed` which adds a second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\"><span class=\"name\">pointedToBipointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L163-L165","name":"pointedToBipointed","line":163,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed","doc":"The functor from `Pointed` to `Bipointed` which bipoints the point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\"><span class=\"name\">pointedToBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L157-L159","name":"swap_comp_bipointedToPointedSnd","line":157,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd\"><span class=\"name\">swap_comp_bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L151-L153","name":"swap_comp_bipointedToPointedFst","line":151,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst\"><span class=\"name\">swap_comp_bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L145-L147","name":"bipointedToPointedSnd_comp_forget","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget\"><span class=\"name\">bipointedToPointedSnd_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L139-L141","name":"bipointedToPointedFst_comp_forget","line":139,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget\"><span class=\"name\">bipointedToPointedFst_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L133-L135","name":"bipointedToPointedSnd","line":133,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\"><span class=\"name\">bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L127-L129","name":"bipointedToPointedFst","line":127,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\"><span class=\"name\">bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L120-L121","name":"Bipointed.swapEquiv_symm","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_symm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.symm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L109-L116","name":"Bipointed.swapEquiv","line":109,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv","doc":"The equivalence between `Bipointed` and itself induced by `Prod.swap` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_inverse_obj_X","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_inverse_map_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_counitIso_hom_app_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.counitIso</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_counitIso_inv_app_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.counitIso</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_unitIso_hom_app_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.unitIso</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.toFun</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span></span>)</span></span>)</span>.toFun</span>\n        <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_functor_obj_X","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_inverse_obj_toProd","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.inverse</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_functor_map_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_unitIso_inv_app_toFun","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.unitIso</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span>.toFun</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L108-L108","name":"Bipointed.swapEquiv_functor_obj_toProd","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">Bipointed.swapEquiv</a>.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L102-L104","name":"Bipointed.swap","line":102,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap","doc":"Swaps the pointed elements of a bipointed type. `Prod.swap` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L101-L101","name":"Bipointed.swap_obj_toProd","line":101,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Prod/Basic.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toProd</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L101-L101","name":"Bipointed.swap_obj_X","line":101,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L101-L101","name":"Bipointed.swap_map_toFun","line":101,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L93-L97","name":"Bipointed.concreteCategory","line":93,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.concreteCategory\"><span class=\"name\">Bipointed</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L87-L90","name":"Bipointed.largeCategory","line":87,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory\"><span class=\"name\">Bipointed</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L79-L82","name":"Bipointed.Hom.comp","line":79,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp","doc":"Composition of morphisms of `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L78-L78","name":"Bipointed.Hom.comp_toFun","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\">Bipointed.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.toFun</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L74-L75","name":"Bipointed.Hom.instInhabitedHom","line":74,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabitedHom\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L70-L71","name":"Bipointed.Hom.id","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id","doc":"The identity morphism of `X : Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L69-L69","name":"Bipointed.Hom.id_toFun","line":69,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\">Bipointed.Hom.id</a> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L63-L63","name":"Bipointed.Hom.map_snd","line":63,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L62-L62","name":"Bipointed.Hom.map_fst","line":62,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L61-L61","name":"Bipointed.Hom.toFun","line":61,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun","doc":"The underlying function of a morphism of bipointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L59-L59","name":"Bipointed.Hom.mk","line":59,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_fst : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_snd : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProd</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toProd</span>.2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L59-L63","name":"Bipointed.Hom","line":59,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom","doc":"Morphisms in `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L58-L58","name":"Bipointed.Hom.ext_iff","line":58,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L58-L58","name":"Bipointed.Hom.ext","line":58,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Bipointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L54-L55","name":"Bipointed.instInhabitedBipointed","line":54,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabitedBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabitedBipointed\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instInhabitedBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L51-L51","name":"Prod.Bipointed","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed","doc":"**Alias** of `Bipointed.of`.\n\n---\n\nTurns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed\"><span class=\"name\">Prod</span>.<span class=\"name\">Bipointed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L47-L48","name":"Bipointed.coe_of","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\">Bipointed.of</a> <span class=\"fn\">to_prod</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L42-L43","name":"Bipointed.of","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of","doc":"Turns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(to_prod : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L39-L39","name":"Bipointed.instCoeSortBipointedType","line":39,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortBipointedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortBipointedType\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instCoeSortBipointedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_3)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L34-L34","name":"Bipointed.toProd","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd","doc":"The two points of a bipointed type, bundled together as a pair. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">self</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L32-L32","name":"Bipointed.X","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X","doc":"The underlying type of a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L30-L30","name":"Bipointed.mk","line":30,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toProd : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/Bipointed.lean#L30-L34","name":"Bipointed","line":30,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed","doc":"The category of bipointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\"><span class=\"name\">Bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}