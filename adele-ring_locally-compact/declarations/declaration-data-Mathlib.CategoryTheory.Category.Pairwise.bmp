{"name":"Mathlib.CategoryTheory.Category.Pairwise","instances":[{"typeNames":["CategoryTheory.Pairwise"],"name":"CategoryTheory.Pairwise.pairwiseInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Pairwise.Hom"],"name":"CategoryTheory.Pairwise.homInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Pairwise"],"name":"CategoryTheory.Pairwise.instCategory","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.Order.CompleteLattice","Mathlib.CategoryTheory.Category.Preorder","Mathlib.CategoryTheory.Limits.IsLimit"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L149-L154","name":"CategoryTheory.Pairwise.coconeIsColimit","line":149,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.coconeIsColimit","doc":"Given a function `U : ι → α` for `[CompleteLattice α]`,\n`iInf U` provides a limit cone over `diagram U`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.coconeIsColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">coconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone\">CategoryTheory.Pairwise.cocone</a> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L142-L144","name":"CategoryTheory.Pairwise.cocone","line":142,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone","doc":"Given a function `U : ι → α` for `[CompleteLattice α]`,\n`iSup U` provides a cocone over `diagram U`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">cocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagram\">CategoryTheory.Pairwise.diagram</a> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L141-L141","name":"CategoryTheory.Pairwise.cocone_ι_app","line":141,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone_ι_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">cocone_ι_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(o : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone\">CategoryTheory.Pairwise.cocone</a> <span class=\"fn\">U</span></span>)</span>.ι</span>.app</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.coconeιApp\">CategoryTheory.Pairwise.coconeιApp</a> <span class=\"fn\">U</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L141-L141","name":"CategoryTheory.Pairwise.cocone_pt","line":141,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">cocone_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.cocone\">CategoryTheory.Pairwise.cocone</a> <span class=\"fn\">U</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L134-L136","name":"CategoryTheory.Pairwise.coconeιApp","line":134,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.coconeιApp","doc":"Auxiliary definition for `cocone`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.coconeιApp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">coconeιApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(o : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramObj\">CategoryTheory.Pairwise.diagramObj</a> <span class=\"fn\">U</span> <span class=\"fn\">o</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L121-L123","name":"CategoryTheory.Pairwise.diagram","line":121,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagram","doc":"Given a function `U : ι → α` for `[SemilatticeInf α]`, we obtain a functor `Pairwise ι ⥤ α`,\nsending `single i` to `U i` and `pair i j` to `U i ⊓ U j`,\nand the morphisms to the obvious inequalities.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">diagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeInf\">SemilatticeInf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L106-L110","name":"CategoryTheory.Pairwise.diagramMap","line":106,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramMap","doc":"Auxiliary definition for `diagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">diagramMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeInf\">SemilatticeInf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">o₂</span></span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramObj\">CategoryTheory.Pairwise.diagramObj</a> <span class=\"fn\">U</span> <span class=\"fn\">o₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramObj\">CategoryTheory.Pairwise.diagramObj</a> <span class=\"fn\">U</span> <span class=\"fn\">o₂</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L100-L102","name":"CategoryTheory.Pairwise.diagramObj","line":100,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramObj","doc":"Auxiliary definition for `diagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.diagramObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">diagramObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeInf\">SemilatticeInf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L85-L88","name":"CategoryTheory.Pairwise.instCategory","line":85,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.instCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">instCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, v}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L81-L82","name":"CategoryTheory.Pairwise.pairwiseCases","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pairwiseCases","doc":"A helper tactic for `aesop_cat` and `Pairwise`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pairwiseCases\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">pairwiseCases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L71-L75","name":"CategoryTheory.Pairwise.comp","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.comp","doc":"Composition of morphisms in `Pairwise ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₃ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o₁</span>.Hom</span> <span class=\"fn\">o₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o₂</span>.Hom</span> <span class=\"fn\">o₃</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o₁</span>.Hom</span> <span class=\"fn\">o₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L66-L68","name":"CategoryTheory.Pairwise.id","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.id","doc":"The identity morphism in `Pairwise ι`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(o : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.Hom</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L61-L62","name":"CategoryTheory.Pairwise.homInhabited","line":61,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.homInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.homInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">homInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">default</span></span>)</span>.Hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">default</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L57-L57","name":"CategoryTheory.Pairwise.Hom.right","line":57,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">Hom</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair\">CategoryTheory.Pairwise.pair</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span>.Hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L56-L56","name":"CategoryTheory.Pairwise.Hom.left","line":56,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">Hom</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair\">CategoryTheory.Pairwise.pair</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span>.Hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L55-L55","name":"CategoryTheory.Pairwise.Hom.id_pair","line":55,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.id_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.id_pair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair\">CategoryTheory.Pairwise.pair</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span>.Hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair\">CategoryTheory.Pairwise.pair</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L54-L54","name":"CategoryTheory.Pairwise.Hom.id_single","line":54,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.id_single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom.id_single\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">i</span></span>)</span>.Hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\">CategoryTheory.Pairwise.single</a> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L53-L57","name":"CategoryTheory.Pairwise.Hom","line":53,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom","doc":"Morphisms in the category `Pairwise ι`. The only non-identity morphisms are\n`left i j : single i ⟶ pair i j` and `right i j : single j ⟶ pair i j`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L47-L48","name":"CategoryTheory.Pairwise.pairwiseInhabited","line":47,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pairwiseInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pairwiseInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">pairwiseInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L41-L41","name":"CategoryTheory.Pairwise.pair","line":41,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.pair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L40-L40","name":"CategoryTheory.Pairwise.single","line":40,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise.single\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\">CategoryTheory.Pairwise</a> <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Category/Pairwise.lean#L39-L41","name":"CategoryTheory.Pairwise","line":39,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise","doc":"An inductive type representing either a single term of a type `ι`, or a pair of terms.\nWe use this as the objects of a category to describe the sheaf condition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pairwise.html#CategoryTheory.Pairwise\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pairwise</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"}]}