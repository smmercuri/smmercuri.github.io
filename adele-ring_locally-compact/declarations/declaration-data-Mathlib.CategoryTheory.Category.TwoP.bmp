{"name":"Mathlib.CategoryTheory.Category.TwoP","instances":[{"typeNames":["TwoP","_builtin_typeu"],"name":"TwoP.instCoeSortTwoPType","className":"CoeSort"},{"typeNames":["TwoP"],"name":"TwoP.instInhabitedTwoP","className":"Inhabited"},{"typeNames":["TwoP"],"name":"TwoP.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["TwoP"],"name":"TwoP.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["TwoP","Bipointed"],"name":"TwoP.hasForgetToBipointed","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.CategoryTheory.Category.Bipointed","Mathlib.Data.TwoPointing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L177-L193","name":"pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction","doc":"Adding a first point is left adjoint to forgetting the first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction\"><span class=\"name\">pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L157-L173","name":"pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction","line":157,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction","doc":"Adding a second point is left adjoint to forgetting the second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction\"><span class=\"name\">pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L151-L153","name":"pointedToTwoPSnd_comp_forget_to_bipointed","line":151,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_forget_to_bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_forget_to_bipointed\"><span class=\"name\">pointedToTwoPSnd_comp_forget_to_bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L145-L147","name":"pointedToTwoPFst_comp_forget_to_bipointed","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_forget_to_bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_forget_to_bipointed\"><span class=\"name\">pointedToTwoPFst_comp_forget_to_bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L140-L141","name":"pointedToTwoPSnd_comp_swap","line":140,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_swap\"><span class=\"name\">pointedToTwoPSnd_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L135-L136","name":"pointedToTwoPFst_comp_swap","line":135,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_swap\"><span class=\"name\">pointedToTwoPFst_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L127-L131","name":"pointedToTwoPSnd","line":127,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd","doc":"The functor from `Pointed` to `TwoP` which adds a first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\"><span class=\"name\">pointedToTwoPSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L126-L126","name":"pointedToTwoPSnd_obj_toTwoPointing_toProd","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_toTwoPointing_toProd\"><span class=\"name\">pointedToTwoPSnd_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTwoPointing</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">none</span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\"><span class=\"fn\">X</span>.point</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L126-L126","name":"pointedToTwoPSnd_map_toFun","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_map_toFun\"><span class=\"name\">pointedToTwoPSnd_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L126-L126","name":"pointedToTwoPSnd_obj_X","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_X\"><span class=\"name\">pointedToTwoPSnd_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L118-L122","name":"pointedToTwoPFst","line":118,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst","doc":"The functor from `Pointed` to `TwoP` which adds a second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\"><span class=\"name\">pointedToTwoPFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L117-L117","name":"pointedToTwoPFst_map_toFun","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_map_toFun\"><span class=\"name\">pointedToTwoPFst_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L117-L117","name":"pointedToTwoPFst_obj_toTwoPointing_toProd","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_toTwoPointing_toProd\"><span class=\"name\">pointedToTwoPFst_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTwoPointing</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\"><span class=\"fn\">X</span>.point</span></span>, <span class=\"fn\">none</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L117-L117","name":"pointedToTwoPFst_obj_X","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_X\"><span class=\"name\">pointedToTwoPFst_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L111-L113","name":"TwoP_swap_comp_forget_to_Bipointed","line":111,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP_swap_comp_forget_to_Bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP_swap_comp_forget_to_Bipointed\"><span class=\"name\">TwoP_swap_comp_forget_to_Bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span>)</span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L104-L105","name":"TwoP.swapEquiv_symm","line":104,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_symm\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_symm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.symm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L93-L100","name":"TwoP.swapEquiv","line":93,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv","doc":"The equivalence between `TwoP` and itself induced by `Prod.swap` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_functor_map_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">X</span></span>)</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.functor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_unitIso_hom_app_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_hom_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_unitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.unitIso</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.toFun</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span></span>)</span></span>)</span>.toFun</span>\n        <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_counitIso_inv_app_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_inv_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_counitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.counitIso</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_unitIso_inv_app_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_inv_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_unitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.X</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.unitIso</span>.inv</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">id</span>, <span class=\"fn\">map_fst</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_snd</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span>)</span>.toFun</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_inverse_map_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">X</span></span>)</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.inverse</span>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_inverse_obj_X","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.inverse</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_counitIso_hom_app_toFun","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_hom_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_counitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.counitIso</span>.hom</span>.app</span> <span class=\"fn\">X</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_functor_obj_X","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.inverse</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTwoPointing</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toTwoPointing</span>.toProd</span>.2</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toTwoPointing</span>.toProd</span>.1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L92","name":"TwoP.swapEquiv_functor_obj_toTwoPointing_toProd","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_toTwoPointing_toProd\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">TwoP.swapEquiv</a>.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTwoPointing</span>.toProd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toTwoPointing</span>.toProd</span>.2</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toTwoPointing</span>.toProd</span>.1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L86-L88","name":"TwoP.swap","line":86,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap","doc":"Swaps the pointed elements of a two-pointed type. `TwoPointing.swap` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L85-L85","name":"TwoP.swap_obj_toTwoPointing","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_toTwoPointing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_toTwoPointing\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_obj_toTwoPointing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTwoPointing</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.swap\">TwoPointing.swap</a> <span class=\"fn\"><span class=\"fn\">X</span>.toTwoPointing</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L85-L85","name":"TwoP.swap_map_toFun","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">X</span></span>)</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.map</span> <span class=\"fn\">f</span></span>)</span>.toFun</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L85-L85","name":"TwoP.swap_obj_X","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L80","name":"TwoP.hasForgetToBipointed","line":79,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.hasForgetToBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.hasForgetToBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">hasForgetToBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L75-L76","name":"TwoP.concreteCategory","line":75,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.concreteCategory\"><span class=\"name\">TwoP</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L71-L72","name":"TwoP.largeCategory","line":71,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.largeCategory\"><span class=\"name\">TwoP</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L67-L68","name":"TwoP.coe_toBipointed","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_toBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_toBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">coe_toBipointed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">TwoP.toBipointed</a> <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L62-L63","name":"TwoP.toBipointed","line":62,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed","doc":"Turns a two-pointed type into a bipointed type, by forgetting that the pointed elements are\ndistinct. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">toBipointed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L57-L58","name":"TwoP.instInhabitedTwoP","line":57,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instInhabitedTwoP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instInhabitedTwoP\"><span class=\"name\">TwoP</span>.<span class=\"name\">instInhabitedTwoP</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L54-L54","name":"TwoPointing.TwoP","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoPointing.TwoP","doc":"**Alias** of `TwoP.of`.\n\n---\n\nTurns a two-pointing into a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoPointing.TwoP\"><span class=\"name\">TwoPointing</span>.<span class=\"name\">TwoP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toTwoPointing : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L50-L51","name":"TwoP.coe_of","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_of\"><span class=\"name\">TwoP</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toTwoPointing : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of\">TwoP.of</a> <span class=\"fn\">toTwoPointing</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L45-L46","name":"TwoP.of","line":45,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of","doc":"Turns a two-pointing into a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of\"><span class=\"name\">TwoP</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toTwoPointing : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L41-L42","name":"TwoP.instCoeSortTwoPType","line":41,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instCoeSortTwoPType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instCoeSortTwoPType\"><span class=\"name\">TwoP</span>.<span class=\"name\">instCoeSortTwoPType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_3)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L36-L36","name":"TwoP.toTwoPointing","line":36,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing","doc":"The two points of a bipointed type, bundled together as a pair of distinct elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\"><span class=\"name\">TwoP</span>.<span class=\"name\">toTwoPointing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\"><span class=\"fn\">self</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L34-L34","name":"TwoP.X","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X","doc":"The underlying type of a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\"><span class=\"name\">TwoP</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L32-L32","name":"TwoP.mk","line":32,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.mk\"><span class=\"name\">TwoP</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toTwoPointing : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Category/TwoP.lean#L32-L36","name":"TwoP","line":32,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP","doc":"The category of two-pointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\"><span class=\"name\">TwoP</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}