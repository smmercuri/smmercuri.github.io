{"name":"Mathlib.CategoryTheory.ComposableArrows","instances":[],"imports":["Init","Mathlib.CategoryTheory.Category.Preorder","Mathlib.CategoryTheory.EqToHom","Mathlib.CategoryTheory.Functor.Const","Mathlib.Tactic.FinCases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L884-L886","name":"CategoryTheory.Functor.mapComposableArrows","line":884,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows","doc":"The functor `ComposableArrows C n ⥤ ComposableArrows D n` obtained by postcomposition\nwith a functor `C ⥤ D`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComposableArrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">D</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L883-L883","name":"CategoryTheory.Functor.mapComposableArrows_obj_obj","line":883,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComposableArrows_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows\">CategoryTheory.Functor.mapComposableArrows</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L883-L883","name":"CategoryTheory.Functor.mapComposableArrows_map_app","line":883,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComposableArrows_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">C</span></span>} (<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows\">CategoryTheory.Functor.mapComposableArrows</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">α</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.app</span> <span class=\"fn\">X_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L883-L883","name":"CategoryTheory.Functor.mapComposableArrows_obj_map","line":883,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComposableArrows_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows\">CategoryTheory.Functor.mapComposableArrows</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L871-L873","name":"CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_arrow","line":871,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_arrow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_arrow\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mkOfObjOfMapSucc_arrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapSucc : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.38791\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.arrow\">CategoryTheory.ComposableArrows.arrow</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc\">CategoryTheory.ComposableArrows.mkOfObjOfMapSucc</a> <span class=\"fn\">obj</span> <span class=\"fn\">mapSucc</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁\">CategoryTheory.ComposableArrows.mk₁</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">mapSucc</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L867-L869","name":"CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_map_succ","line":867,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_map_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_map_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mkOfObjOfMapSucc_map_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapSucc : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.38645\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc\">CategoryTheory.ComposableArrows.mkOfObjOfMapSucc</a> <span class=\"fn\">obj</span> <span class=\"fn\">mapSucc</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">mapSucc</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L864-L865","name":"CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_obj","line":864,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mkOfObjOfMapSucc_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapSucc : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc\">CategoryTheory.ComposableArrows.mkOfObjOfMapSucc</a> <span class=\"fn\">obj</span> <span class=\"fn\">mapSucc</span></span>)</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L859-L861","name":"CategoryTheory.ComposableArrows.mkOfObjOfMapSucc","line":859,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc","doc":"Given `obj : Fin (n + 1) → C` and `mapSucc i : obj i.castSucc ⟶ obj i.succ`\nfor all `i : Fin n`, this is `F : ComposableArrows C n` such that `F.obj i` is\ndefinitionally equal to `obj i` and such that `F.map' i (i + 1) = mapSucc ⟨i, hi⟩`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mkOfObjOfMapSucc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapSucc : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L837-L854","name":"CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_exists","line":837,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mkOfObjOfMapSucc_exists\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mkOfObjOfMapSucc_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapSucc : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>) (e : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">i</span></span></span></span>),\n  <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">mapSucc</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.inv</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n          <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L830-L831","name":"CategoryTheory.ComposableArrows.arrow","line":830,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.arrow","doc":"The `i`th arrow of `F : ComposableArrows C n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.arrow\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">arrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.37955\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L823-L827","name":"CategoryTheory.ComposableArrows.mk₅_surjective","line":823,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₅_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₅_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₅_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X₀ : <span class=\"fn\">C</span>) (X₁ : <span class=\"fn\">C</span>) (X₂ : <span class=\"fn\">C</span>) (X₃ : <span class=\"fn\">C</span>) (X₄ : <span class=\"fn\">C</span>) (X₅ : <span class=\"fn\">C</span>) (f₀ : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>) (f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>) (f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>) (f₃ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span></span>) (f₄\n  : <span class=\"fn\"><span class=\"fn\">X₄</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₅</span></span>), <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₅\">CategoryTheory.ComposableArrows.mk₅</a> <span class=\"fn\">f₀</span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">f₃</span> <span class=\"fn\">f₄</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L812-L821","name":"CategoryTheory.ComposableArrows.ext₅","line":812,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₅","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₅\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₅</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₀</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₃</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₄</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L795-L810","name":"CategoryTheory.ComposableArrows.isoMk₅","line":795,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅","doc":"Constructor for isomorphisms in `ComposableArrows C 5`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₅</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₅</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L794-L794","name":"CategoryTheory.ComposableArrows.isoMk₅_hom","line":794,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₅_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₅</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅\">CategoryTheory.ComposableArrows.isoMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₅</span>.hom</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L794-L794","name":"CategoryTheory.ComposableArrows.isoMk₅_inv","line":794,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₅_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₅</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₅\">CategoryTheory.ComposableArrows.isoMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₅</span>.inv</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L787-L791","name":"CategoryTheory.ComposableArrows.hom_ext₅","line":787,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₅","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₅\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₅</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L781-L782","name":"CategoryTheory.ComposableArrows.homMk₅_app_five","line":781,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_five","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_five\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_five</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">5</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₅</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L777-L778","name":"CategoryTheory.ComposableArrows.homMk₅_app_four","line":777,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_four\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_four</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">4</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₄</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L773-L774","name":"CategoryTheory.ComposableArrows.homMk₅_app_three","line":773,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_three\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_three</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">3</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L769-L770","name":"CategoryTheory.ComposableArrows.homMk₅_app_two","line":769,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_two\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">2</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L766-L766","name":"CategoryTheory.ComposableArrows.homMk₅_app_one","line":766,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L763-L763","name":"CategoryTheory.ComposableArrows.homMk₅_app_zero","line":763,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\">CategoryTheory.ComposableArrows.homMk₅</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">app₅</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span> <span class=\"fn\">w₄</span></span>)</span>.app</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L760-L760","name":"CategoryTheory.ComposableArrows.homMk₅","line":760,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅","doc":"Constructor for morphisms in `ComposableArrows C 5`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₅\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₅</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₅ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₅</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₄</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">5</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L741-L745","name":"CategoryTheory.ComposableArrows.mk₄_surjective","line":741,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₄_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₄_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₄_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X₀ : <span class=\"fn\">C</span>) (X₁ : <span class=\"fn\">C</span>) (X₂ : <span class=\"fn\">C</span>) (X₃ : <span class=\"fn\">C</span>) (X₄ : <span class=\"fn\">C</span>) (f₀ : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>) (f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>) (f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>) (f₃ : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span></span>),\n  <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₄\">CategoryTheory.ComposableArrows.mk₄</a> <span class=\"fn\">f₀</span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">f₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L731-L739","name":"CategoryTheory.ComposableArrows.ext₄","line":731,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₄","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₀</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₃</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L716-L729","name":"CategoryTheory.ComposableArrows.isoMk₄","line":716,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄","doc":"Constructor for isomorphisms in `ComposableArrows C 4`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L715-L715","name":"CategoryTheory.ComposableArrows.isoMk₄_hom","line":715,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₄_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄\">CategoryTheory.ComposableArrows.isoMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L715-L715","name":"CategoryTheory.ComposableArrows.isoMk₄_inv","line":715,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₄_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₄\">CategoryTheory.ComposableArrows.isoMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₄</span>.inv</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L708-L712","name":"CategoryTheory.ComposableArrows.map'_inv_eq_inv_map'","line":708,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_inv_eq_inv_map'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_inv_eq_inv_map'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">map'_inv_eq_inv_map'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">h</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app'</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">h</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app'</span>.inv</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app</span>.inv</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L702-L706","name":"CategoryTheory.ComposableArrows.hom_ext₄","line":702,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₄","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L696-L697","name":"CategoryTheory.ComposableArrows.homMk₄_app_four","line":696,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_four\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄_app_four</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">4</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₄</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L692-L693","name":"CategoryTheory.ComposableArrows.homMk₄_app_three","line":692,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_three\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄_app_three</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">3</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L688-L689","name":"CategoryTheory.ComposableArrows.homMk₄_app_two","line":688,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_two\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄_app_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">2</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L685-L685","name":"CategoryTheory.ComposableArrows.homMk₄_app_one","line":685,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄_app_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.app</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L682-L682","name":"CategoryTheory.ComposableArrows.homMk₄_app_zero","line":682,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\">CategoryTheory.ComposableArrows.homMk₄</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">app₄</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span> <span class=\"fn\">w₃</span></span>)</span>.app</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L679-L679","name":"CategoryTheory.ComposableArrows.homMk₄","line":679,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄","doc":"Constructor for morphisms in `ComposableArrows C 4`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₄</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₃</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">4</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L662-L665","name":"CategoryTheory.ComposableArrows.mk₃_surjective","line":662,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₃_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₃_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₃_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X₀ : <span class=\"fn\">C</span>) (X₁ : <span class=\"fn\">C</span>) (X₂ : <span class=\"fn\">C</span>) (X₃ : <span class=\"fn\">C</span>) (f₀ : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>) (f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>) (f₂ : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>),\n  <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₃\">CategoryTheory.ComposableArrows.mk₃</a> <span class=\"fn\">f₀</span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L654-L660","name":"CategoryTheory.ComposableArrows.ext₃","line":654,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₀</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₂</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L639-L652","name":"CategoryTheory.ComposableArrows.isoMk₃","line":639,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃","doc":"Constructor for isomorphisms in `ComposableArrows C 3`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L638-L638","name":"CategoryTheory.ComposableArrows.isoMk₃_hom","line":638,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₃_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃\">CategoryTheory.ComposableArrows.isoMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L638-L638","name":"CategoryTheory.ComposableArrows.isoMk₃_inv","line":638,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₃_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₃\">CategoryTheory.ComposableArrows.isoMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₃</span>.inv</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L631-L635","name":"CategoryTheory.ComposableArrows.hom_ext₃","line":631,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L625-L626","name":"CategoryTheory.ComposableArrows.homMk₃_app_three","line":625,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_three\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₃_app_three</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">3</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L621-L622","name":"CategoryTheory.ComposableArrows.homMk₃_app_two","line":621,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_two\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₃_app_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">2</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L618-L618","name":"CategoryTheory.ComposableArrows.homMk₃_app_one","line":618,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₃_app_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.app</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L615-L615","name":"CategoryTheory.ComposableArrows.homMk₃_app_zero","line":615,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₃_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\">CategoryTheory.ComposableArrows.homMk₃</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">app₃</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span> <span class=\"fn\">w₂</span></span>)</span>.app</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L612-L612","name":"CategoryTheory.ComposableArrows.homMk₃","line":612,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃","doc":"Constructor for morphisms in `ComposableArrows C 3`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₃ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₂</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L597-L599","name":"CategoryTheory.ComposableArrows.mk₂_surjective","line":597,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₂_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X₀ : <span class=\"fn\">C</span>) (X₁ : <span class=\"fn\">C</span>) (X₂ : <span class=\"fn\">C</span>) (f₀ : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>) (f₁ : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>), <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\">CategoryTheory.ComposableArrows.mk₂</a> <span class=\"fn\">f₀</span> <span class=\"fn\">f₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L591-L595","name":"CategoryTheory.ComposableArrows.ext₂","line":591,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₀</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₁</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L580-L589","name":"CategoryTheory.ComposableArrows.isoMk₂","line":580,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂","doc":"Constructor for isomorphisms in `ComposableArrows C 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L579-L579","name":"CategoryTheory.ComposableArrows.isoMk₂_inv","line":579,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₂_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂\">CategoryTheory.ComposableArrows.isoMk₂</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\">CategoryTheory.ComposableArrows.homMk₂</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.inv</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.inv</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L579-L579","name":"CategoryTheory.ComposableArrows.isoMk₂_hom","line":579,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₂_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₂\">CategoryTheory.ComposableArrows.isoMk₂</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\">CategoryTheory.ComposableArrows.homMk₂</a> <span class=\"fn\"><span class=\"fn\">app₀</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₁</span>.hom</span> <span class=\"fn\"><span class=\"fn\">app₂</span>.hom</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L573-L576","name":"CategoryTheory.ComposableArrows.hom_ext₂","line":573,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L568-L568","name":"CategoryTheory.ComposableArrows.homMk₂_app_two","line":568,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_two\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₂_app_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\">CategoryTheory.ComposableArrows.homMk₂</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">2</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L565-L565","name":"CategoryTheory.ComposableArrows.homMk₂_app_one","line":565,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₂_app_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\">CategoryTheory.ComposableArrows.homMk₂</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span>)</span>.app</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L562-L562","name":"CategoryTheory.ComposableArrows.homMk₂_app_zero","line":562,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₂_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\">CategoryTheory.ComposableArrows.homMk₂</a> <span class=\"fn\">app₀</span> <span class=\"fn\">app₁</span> <span class=\"fn\">app₂</span> <span class=\"fn\">w₀</span> <span class=\"fn\">w₁</span></span>)</span>.app</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">app₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L559-L559","name":"CategoryTheory.ComposableArrows.homMk₂","line":559,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂","doc":"Constructor for morphisms in `ComposableArrows C 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">f</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">g</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">app₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">app₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">g</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L546-L548","name":"CategoryTheory.ComposableArrows.precomp_surjective","line":546,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">precomp_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F₀ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>) (X₀ : <span class=\"fn\">C</span>) (f₀ : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F₀</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp\">CategoryTheory.ComposableArrows.precomp</a> <span class=\"fn\">F₀</span> <span class=\"fn\">f₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L525-L544","name":"CategoryTheory.ComposableArrows.ext_succ","line":525,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h₀</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L507-L523","name":"CategoryTheory.ComposableArrows.isoMkSucc","line":507,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc","doc":"Inductive construction of isomorphisms in `ComposableArrows C (n + 1)`: in order to\nconstruct an isomorphism `F ≅ G`, it suffices to provide `α : F.obj' 0 ≅ G.obj' 0` and\n`β : F.δ₀ ≅ G.δ₀` such that `F.map' 0 1 ≫ app' β.hom 0 = α.hom ≫ G.map' 0 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMkSucc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\"><span class=\"fn\">β</span>.hom</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">α</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L506-L506","name":"CategoryTheory.ComposableArrows.isoMkSucc_inv","line":506,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMkSucc_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\"><span class=\"fn\">β</span>.hom</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">α</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc\">CategoryTheory.ComposableArrows.isoMkSucc</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">w</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc\">CategoryTheory.ComposableArrows.homMkSucc</a> <span class=\"fn\"><span class=\"fn\">α</span>.inv</span> <span class=\"fn\"><span class=\"fn\">β</span>.inv</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L506-L506","name":"CategoryTheory.ComposableArrows.isoMkSucc_hom","line":506,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMkSucc_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\"><span class=\"fn\">β</span>.hom</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">α</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMkSucc\">CategoryTheory.ComposableArrows.isoMkSucc</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">w</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc\">CategoryTheory.ComposableArrows.homMkSucc</a> <span class=\"fn\"><span class=\"fn\">α</span>.hom</span> <span class=\"fn\"><span class=\"fn\">β</span>.hom</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L495-L501","name":"CategoryTheory.ComposableArrows.hom_ext_succ","line":495,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δ₀Functor</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δ₀Functor</span>.map</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L490-L491","name":"CategoryTheory.ComposableArrows.homMkSucc_app_succ","line":490,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc_app_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc_app_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMkSucc_app_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">β</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc\">CategoryTheory.ComposableArrows.homMkSucc</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">w</span></span>)</span>.app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">β</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L487-L487","name":"CategoryTheory.ComposableArrows.homMkSucc_app_zero","line":487,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc_app_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc_app_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMkSucc_app_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">β</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc\">CategoryTheory.ComposableArrows.homMkSucc</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">w</span></span>)</span>.app</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L476-L484","name":"CategoryTheory.ComposableArrows.homMkSucc","line":476,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc","doc":"Inductive construction of morphisms in `ComposableArrows C (n + 1)`: in order to construct\na morphism `F ⟶ G`, it suffices to provide `α : F.obj' 0 ⟶ G.obj' 0` and `β : F.δ₀ ⟶ G.δ₀`\nsuch that `F.map' 0 1 ≫ app' β 0 = α ≫ G.map' 0 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMkSucc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMkSucc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">β</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L464-L464","name":"CategoryTheory.ComposableArrows.δlast","line":464,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlast","doc":"The `ComposableArrows C n` obtained by forgetting the first arrow. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlast\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δlast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L460-L461","name":"CategoryTheory.ComposableArrows.δlastFunctor","line":460,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor","doc":"The functor `ComposableArrows C (n + 1) ⥤ ComposableArrows C n` which forgets\nthe last arrow. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δlastFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L459-L459","name":"CategoryTheory.ComposableArrows.δlastFunctor_map_app","line":459,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δlastFunctor_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δlastFunctor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">X_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L459-L459","name":"CategoryTheory.ComposableArrows.δlastFunctor_obj_obj","line":459,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δlastFunctor_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δlastFunctor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L459-L459","name":"CategoryTheory.ComposableArrows.δlastFunctor_obj_map","line":459,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δlastFunctor_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δlastFunctor_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δlastFunctor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L453-L455","name":"Fin.castSuccFunctor","line":453,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor","doc":"The functor `Fin n ⥤ Fin (n + 1)` which sends `i` to `i.castSucc`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor\"><span class=\"name\">Fin</span>.<span class=\"name\">castSuccFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L452-L452","name":"Fin.castSuccFunctor_obj","line":452,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor_obj\"><span class=\"name\">Fin</span>.<span class=\"name\">castSuccFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor\">Fin.castSuccFunctor</a> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L452-L452","name":"Fin.castSuccFunctor_map","line":452,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor_map\"><span class=\"name\">Fin</span>.<span class=\"name\">castSuccFunctor_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>} (<span class=\"fn\">hij</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.castSuccFunctor\">Fin.castSuccFunctor</a> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">hij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">hij</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L449-L449","name":"CategoryTheory.ComposableArrows.precomp_δ₀","line":449,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_δ₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_δ₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">precomp_δ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp\">CategoryTheory.ComposableArrows.precomp</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L446-L446","name":"CategoryTheory.ComposableArrows.δ₀","line":446,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀","doc":"The `ComposableArrows C n` obtained by forgetting the first arrow. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L442-L443","name":"CategoryTheory.ComposableArrows.δ₀Functor","line":442,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor","doc":"The functor `ComposableArrows C (n + 1) ⥤ ComposableArrows C n` which forgets\nthe first arrow. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δ₀Functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L441-L441","name":"CategoryTheory.ComposableArrows.δ₀Functor_map_app","line":441,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δ₀Functor_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δ₀Functor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">X_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L441-L441","name":"CategoryTheory.ComposableArrows.δ₀Functor_obj_obj","line":441,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δ₀Functor_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δ₀Functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L441-L441","name":"CategoryTheory.ComposableArrows.δ₀Functor_obj_map","line":441,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀Functor_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">δ₀Functor_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ComposableArrows.δ₀Functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">CategoryTheory.homOfLE</a> <span class=\"fn\">⋯</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L435-L437","name":"Fin.succFunctor","line":435,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor","doc":"The functor `Fin n ⥤ Fin (n + 1)` which sends `i` to `i.succ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor\"><span class=\"name\">Fin</span>.<span class=\"name\">succFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L434-L434","name":"Fin.succFunctor_map","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor_map\"><span class=\"name\">Fin</span>.<span class=\"name\">succFunctor_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor\">Fin.succFunctor</a> <span class=\"fn\">n</span></span>)</span>.map</span> <span class=\"fn\">hij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">CategoryTheory.homOfLE</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L434-L434","name":"Fin.succFunctor_obj","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor_obj\"><span class=\"name\">Fin</span>.<span class=\"name\">succFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#Fin.succFunctor\">Fin.succFunctor</a> <span class=\"fn\">n</span></span>)</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">Fin.succ</a> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L428-L431","name":"CategoryTheory.ComposableArrows.whiskerLeftFunctor","line":428,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor","doc":"The functor `ComposableArrows C m ⥤ ComposableArrows C n` obtained by precomposition with\na functor `Fin (n + 1) ⥤ Fin (m + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeftFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L427-L427","name":"CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_map","line":427,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeftFunctor_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor\">CategoryTheory.ComposableArrows.whiskerLeftFunctor</a> <span class=\"fn\">Φ</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Φ</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L427-L427","name":"CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_obj","line":427,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeftFunctor_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor\">CategoryTheory.ComposableArrows.whiskerLeftFunctor</a> <span class=\"fn\">Φ</span></span>)</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Φ</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L427-L427","name":"CategoryTheory.ComposableArrows.whiskerLeftFunctor_map_app","line":427,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeftFunctor_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeftFunctor\">CategoryTheory.ComposableArrows.whiskerLeftFunctor</a> <span class=\"fn\">Φ</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Φ</span>.obj</span> <span class=\"fn\">X_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L422-L423","name":"CategoryTheory.ComposableArrows.whiskerLeft","line":422,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft","doc":"The map `ComposableArrows C m → ComposableArrows C n` obtained by precomposition with\na functor `Fin (n + 1) ⥤ Fin (m + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L421-L421","name":"CategoryTheory.ComposableArrows.whiskerLeft_map","line":421,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeft_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft\">CategoryTheory.ComposableArrows.whiskerLeft</a> <span class=\"fn\">F</span> <span class=\"fn\">Φ</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Φ</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L421-L421","name":"CategoryTheory.ComposableArrows.whiskerLeft_obj","line":421,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">whiskerLeft_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft\">CategoryTheory.ComposableArrows.whiskerLeft</a> <span class=\"fn\">F</span> <span class=\"fn\">Φ</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Φ</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L389-L392","name":"CategoryTheory.ComposableArrows.mk₅","line":389,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₅","doc":"Constructor for `ComposableArrows C 5`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₅\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₅</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₄ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₅ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">X₄</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₅</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">5</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L383-L385","name":"CategoryTheory.ComposableArrows.mk₄","line":383,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₄","doc":"Constructor for `ComposableArrows C 4`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₄ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L378-L379","name":"CategoryTheory.ComposableArrows.mk₃","line":378,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₃","doc":"Constructor for `ComposableArrows C 3`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₃ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">3</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L373-L374","name":"CategoryTheory.ComposableArrows.mk₂","line":373,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂","doc":"Constructor for `ComposableArrows C 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₂ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L365-L369","name":"CategoryTheory.ComposableArrows.precomp","line":365,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp","doc":"\"Precomposition\" of `F : ComposableArrows C n` by a morphism `f : X ⟶ F.left`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">precomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L364-L364","name":"CategoryTheory.ComposableArrows.precomp_map","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">precomp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp\">CategoryTheory.ComposableArrows.precomp</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">X_1</span> <span class=\"fn\">Y</span> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L364-L364","name":"CategoryTheory.ComposableArrows.precomp_obj","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">precomp_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.precomp\">CategoryTheory.ComposableArrows.precomp</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L335-L359","name":"CategoryTheory.ComposableArrows.Precomp.map_comp","line":335,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hjk : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L329-L333","name":"CategoryTheory.ComposableArrows.Precomp.map_id","line":329,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L326-L327","name":"CategoryTheory.ComposableArrows.Precomp.map_one_succ","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_one_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_one_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_one_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hj</span> }</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L321-L323","name":"CategoryTheory.ComposableArrows.Precomp.map_succ_succ","line":321,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_succ_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_succ_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_succ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hj</span> }</span> <span class=\"fn\">hij</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L317-L318","name":"CategoryTheory.ComposableArrows.Precomp.map_zero_succ_succ","line":317,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_succ_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_succ_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_zero_succ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hj</span> }</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L314-L314","name":"CategoryTheory.ComposableArrows.Precomp.map_zero_one'","line":314,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_one'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_zero_one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L311-L311","name":"CategoryTheory.ComposableArrows.Precomp.map_zero_one","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_zero_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L308-L308","name":"CategoryTheory.ComposableArrows.Precomp.map_one_one","line":308,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_one_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_one_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_one_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L305-L305","name":"CategoryTheory.ComposableArrows.Precomp.map_zero_zero","line":305,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map_zero_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map_zero_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\">CategoryTheory.ComposableArrows.Precomp.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L298-L302","name":"CategoryTheory.ComposableArrows.Precomp.map","line":298,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map","doc":"Auxiliary definition for the action on maps of the functor `F.precomp f`.\nIt sends `0 ≤ 1` to `f` and `i + 1 ≤ j + 1` to `F.map' i j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L292-L292","name":"CategoryTheory.ComposableArrows.Precomp.obj_succ","line":292,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">obj_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">hi</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L289-L289","name":"CategoryTheory.ComposableArrows.Precomp.obj_one","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_one\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">obj_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L286-L286","name":"CategoryTheory.ComposableArrows.Precomp.obj_zero","line":286,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">obj_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\">CategoryTheory.ComposableArrows.Precomp.obj</a> <span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L281-L283","name":"CategoryTheory.ComposableArrows.Precomp.obj","line":281,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj","doc":"The map `Fin (n + 1 + 1) → C` which \"shifts\" `F.obj'` to the right and inserts `X` in\nthe zeroth position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Precomp.obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Precomp</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L270-L271","name":"CategoryTheory.ComposableArrows.mk₁_surjective","line":270,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₁_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X₀ : <span class=\"fn\">C</span>) (X₁ : <span class=\"fn\">C</span>) (f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>), <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁\">CategoryTheory.ComposableArrows.mk₁</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L263-L268","name":"CategoryTheory.ComposableArrows.ext₁","line":263,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.right\">CategoryTheory.ComposableArrows.right</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.right\">CategoryTheory.ComposableArrows.right</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom\">CategoryTheory.ComposableArrows.hom</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">left</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom\">CategoryTheory.ComposableArrows.hom</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L261-L261","name":"CategoryTheory.ComposableArrows.map'_eq_hom₁","line":261,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_eq_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_eq_hom₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">map'_eq_hom₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom\">CategoryTheory.ComposableArrows.hom</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L252-L259","name":"CategoryTheory.ComposableArrows.isoMk₁","line":252,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁","doc":"Constructor for isomorphisms in `ComposableArrows C 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">right</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">left</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.4448\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L251-L251","name":"CategoryTheory.ComposableArrows.isoMk₁_inv_app","line":251,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₁_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">right</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">left</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.4448\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁\">CategoryTheory.ComposableArrows.isoMk₁</a> <span class=\"fn\">left</span> <span class=\"fn\">right</span> <span class=\"fn\">w</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">left</span>.inv</span>\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">1</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">right</span>.inv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L251-L251","name":"CategoryTheory.ComposableArrows.isoMk₁_hom_app","line":251,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₁_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\"><span class=\"fn\">right</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">left</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.4448\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₁\">CategoryTheory.ComposableArrows.isoMk₁</a> <span class=\"fn\">left</span> <span class=\"fn\">right</span> <span class=\"fn\">w</span></span>)</span>.hom</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">left</span>.hom</span>\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">1</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">right</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L242-L248","name":"CategoryTheory.ComposableArrows.hom_ext₁","line":242,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L230-L239","name":"CategoryTheory.ComposableArrows.homMk₁","line":230,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₁","doc":"Constructor for morphisms in `ComposableArrows C 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">right</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">left</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.3982\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L229-L229","name":"CategoryTheory.ComposableArrows.homMk₁_app","line":229,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₁_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₁_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₁_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">right</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">left</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.3982\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₁\">CategoryTheory.ComposableArrows.homMk₁</a> <span class=\"fn\">left</span> <span class=\"fn\">right</span> <span class=\"fn\">w</span></span>)</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\">left</span>\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">1</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\">right</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L225-L226","name":"CategoryTheory.ComposableArrows.mk₀_surjective","line":225,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₀_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (X : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L221-L223","name":"CategoryTheory.ComposableArrows.ext₀","line":221,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L217-L219","name":"CategoryTheory.ComposableArrows.isoMk₀","line":217,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀","doc":"Constructor for isomorphisms in `ComposableArrows C 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L216-L216","name":"CategoryTheory.ComposableArrows.isoMk₀_inv_app","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₀_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀\">CategoryTheory.ComposableArrows.isoMk₀</a> <span class=\"fn\">e</span></span>)</span>.inv</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">e</span>.inv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L216-L216","name":"CategoryTheory.ComposableArrows.isoMk₀_hom_app","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk₀_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk₀\">CategoryTheory.ComposableArrows.isoMk₀</a> <span class=\"fn\">e</span></span>)</span>.hom</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\"><span class=\"fn\">e</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L208-L213","name":"CategoryTheory.ComposableArrows.hom_ext₀","line":208,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom_ext₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom_ext₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ' : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ'</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L203-L205","name":"CategoryTheory.ComposableArrows.homMk₀","line":203,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₀","doc":"Constructor for morphisms in `ComposableArrows C 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L202-L202","name":"CategoryTheory.ComposableArrows.homMk₀_app","line":202,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₀_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₀_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk₀_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk₀\">CategoryTheory.ComposableArrows.homMk₀</a> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">i</span> with\n  | <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">0</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">isLt</span> }</span> =&gt; <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L195-L199","name":"CategoryTheory.ComposableArrows.ext","line":195,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L185-L193","name":"CategoryTheory.ComposableArrows.isoMk","line":185,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk","doc":"Constructor for isomorphisms `F ≅ G` in `ComposableArrows C n` which takes as inputs\na family of isomorphisms `F.obj i ≅ G.obj i` and the naturality condition only for the\nmaps in `Fin (n + 1)` given by inequalities of the form `i ≤ i + 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L184-L184","name":"CategoryTheory.ComposableArrows.isoMk_hom","line":184,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk\">CategoryTheory.ComposableArrows.isoMk</a> <span class=\"fn\">app</span> <span class=\"fn\">w</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk\">CategoryTheory.ComposableArrows.homMk</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">i</span></span>)</span>.hom</span></span>)</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L184-L184","name":"CategoryTheory.ComposableArrows.isoMk_inv","line":184,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">isoMk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>.hom</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.isoMk\">CategoryTheory.ComposableArrows.isoMk</a> <span class=\"fn\">app</span> <span class=\"fn\">w</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk\">CategoryTheory.ComposableArrows.homMk</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">i</span></span>)</span>.inv</span></span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L157-L179","name":"CategoryTheory.ComposableArrows.homMk","line":157,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk","doc":"Constructor for morphisms `F ⟶ G` in `ComposableArrows C n` which takes as inputs\na family of morphisms `F.obj i ⟶ G.obj i` and the naturality condition only for the\nmaps in `Fin (n + 1)` given by inequalities of the form `i ≤ i + 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L156-L156","name":"CategoryTheory.ComposableArrows.homMk_app","line":156,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">homMk_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(app : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.homMk\">CategoryTheory.ComposableArrows.homMk</a> <span class=\"fn\">app</span> <span class=\"fn\">w</span></span>)</span>.app</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">app</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L147-L151","name":"CategoryTheory.ComposableArrows.mk₁","line":147,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁","doc":"Constructor for `ComposableArrows C 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L146-L146","name":"CategoryTheory.ComposableArrows.mk₁_obj","line":146,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₁_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁\">CategoryTheory.ComposableArrows.mk₁</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj\">CategoryTheory.ComposableArrows.Mk₁.obj</a> <span class=\"fn\">X₀</span> <span class=\"fn\">X₁</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L146-L146","name":"CategoryTheory.ComposableArrows.mk₁_map","line":146,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₁_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>} (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₁\">CategoryTheory.ComposableArrows.mk₁</a> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\">CategoryTheory.ComposableArrows.Mk₁.map</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L129-L141","name":"CategoryTheory.ComposableArrows.Mk₁.map_comp","line":129,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Mk₁</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hjk : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\">CategoryTheory.ComposableArrows.Mk₁.map</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\">CategoryTheory.ComposableArrows.Mk₁.map</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\">CategoryTheory.ComposableArrows.Mk₁.map</a> <span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L124-L127","name":"CategoryTheory.ComposableArrows.Mk₁.map_id","line":124,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Mk₁</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\">CategoryTheory.ComposableArrows.Mk₁.map</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj\">CategoryTheory.ComposableArrows.Mk₁.obj</a> <span class=\"fn\">X₀</span> <span class=\"fn\">X₁</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L119-L122","name":"CategoryTheory.ComposableArrows.Mk₁.map","line":119,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map","doc":"The obvious map `obj X₀ X₁ i ⟶ obj X₀ X₁ j` whenever `i j : Fin 2` satisfy `i ≤ j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Mk₁</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₁ : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj\">CategoryTheory.ComposableArrows.Mk₁.obj</a> <span class=\"fn\">X₀</span> <span class=\"fn\">X₁</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj\">CategoryTheory.ComposableArrows.Mk₁.obj</a> <span class=\"fn\">X₀</span> <span class=\"fn\">X₁</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L111-L113","name":"CategoryTheory.ComposableArrows.Mk₁.obj","line":111,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj","doc":"The map which sends `0 : Fin 2` to `X₀` and `1` to `X₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.Mk₁.obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">Mk₁</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X₀ : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X₁ : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L103-L103","name":"CategoryTheory.ComposableArrows.mk₀","line":103,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀","doc":"Constructor for `ComposableArrows C 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L102-L102","name":"CategoryTheory.ComposableArrows.mk₀_map","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₀_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span>Y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">1</span></span>} (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">X</span></span>)</span>.map</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L102-L102","name":"CategoryTheory.ComposableArrows.mk₀_obj","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">mk₀_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">1</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L96-L99","name":"CategoryTheory.ComposableArrows.naturality'","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.naturality'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.naturality'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">naturality'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.1120\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.1150\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span> <span class=\"fn\">hj</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span> <span class=\"fn\">hj</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L95-L95","name":"CategoryTheory.ComposableArrows.naturality'_assoc","line":95,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.naturality'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.naturality'_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">naturality'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.1120\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.1150\">_auto✝</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span> <span class=\"fn\">hj</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\">CategoryTheory.ComposableArrows.app'</a> <span class=\"fn\">φ</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span> <span class=\"fn\">hj</span></span>)</span> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L92-L93","name":"CategoryTheory.ComposableArrows.app'","line":92,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'","doc":"The map `F.obj' i ⟶ G.obj' i` induced on `i`th objects by a morphism `F ⟶ G`\nin `ComposableArrows C n` when `i` is a natural number such that `i ≤ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.app'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">app'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.1035\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span> <span class=\"fn\">hi</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L85-L85","name":"CategoryTheory.ComposableArrows.hom","line":85,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom","doc":"The canonical map `F.left ⟶ F.right` for `F : ComposableArrows C n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\">CategoryTheory.ComposableArrows.left</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.right\">CategoryTheory.ComposableArrows.right</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L82-L82","name":"CategoryTheory.ComposableArrows.right","line":82,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.right","doc":"The rightmost object of `F : ComposableArrows C n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L79-L79","name":"CategoryTheory.ComposableArrows.left","line":79,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left","doc":"The leftmost object of `F : ComposableArrows C n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L73-L76","name":"CategoryTheory.ComposableArrows.map'_comp","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">map'_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.672\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hjk : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.702\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.732\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hk</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span> <span class=\"fn\">⋯</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span> <span class=\"fn\">hk</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L70-L71","name":"CategoryTheory.ComposableArrows.map'_self","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'_self\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">map'_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.579\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\">CategoryTheory.ComposableArrows.map'</a> <span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hi</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L65-L68","name":"CategoryTheory.ComposableArrows.map'","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'","doc":"The map `F.obj' i ⟶ F.obj' j` when `F : ComposableArrows C n`, and `i` and `j`\nare natural numbers such that `i ≤ j ≤ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.map'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">map'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hij : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.461\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hjn : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.491\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">i</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">j</span>, <span class=\"fn\">isLt</span> := <span class=\"fn\">⋯</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L60-L60","name":"CategoryTheory.ComposableArrows.obj'","line":60,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'","doc":"The `i`th object (with `i : ℕ` such that `i ≤ n`) of `F : ComposableArrows C n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">obj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#_auto._@.Mathlib.CategoryTheory.ComposableArrows._hyg.398\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L55-L56","name":"CategoryTheory.ComposableArrows.tacticValid","line":55,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.tacticValid","doc":"A wrapper for `omega` which prefaces it with some quick and useful attempts "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.tacticValid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span>.<span class=\"name\">tacticValid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/ComposableArrows.lean#L47-L47","name":"CategoryTheory.ComposableArrows","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows","doc":"`ComposableArrows C n` is the type of functors `Fin (n + 1) ⥤ C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ComposableArrows</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_2 u_1)</div></div>"}]}