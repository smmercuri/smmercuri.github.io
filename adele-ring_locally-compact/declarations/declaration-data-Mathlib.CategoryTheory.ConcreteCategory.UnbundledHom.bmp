{"name":"Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom","instances":[{"typeNames":[],"name":"CategoryTheory.UnbundledHom.bundledHom","className":"CategoryTheory.BundledHom"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.BundledHom"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L52-L53","name":"CategoryTheory.UnbundledHom.mkHasForget‚ÇÇ","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.mkHasForget‚ÇÇ","doc":"A custom constructor for forgetful functor\nbetween concrete categories defined using `UnbundledHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.mkHasForget‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span>.<span class=\"name\">mkHasForget‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom' : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\">‚¶É<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c'</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚¶É<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>‚¶Ñ ‚¶É<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>‚¶Ñ ‚¶É<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">hom'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">IŒ±</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">obj</span> <span class=\"fn\">IŒ≤</span></span>)</span> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget‚ÇÇ\">CategoryTheory.HasForget‚ÇÇ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L34-L40","name":"CategoryTheory.UnbundledHom.bundledHom","line":34,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.bundledHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.bundledHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span>.<span class=\"name\">bundledHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">fun (<span class=\"fn\">Œ±</span> <span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u) (<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L27-L27","name":"CategoryTheory.UnbundledHom.hom_comp","line":27,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.hom_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{IŒ± : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{IŒ≤ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{IŒ≥ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L26-L26","name":"CategoryTheory.UnbundledHom.hom_id","line":26,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.hom_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ia : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">ia</span> <span class=\"fn\">ia</span> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L25-L25","name":"CategoryTheory.UnbundledHom.mk","line":25,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom_id : <span class=\"fn\">‚àÄ {<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">ia</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">ia</span> <span class=\"fn\">ia</span> <span class=\"fn\">id</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hom_comp : <span class=\"fn\">‚àÄ {<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤ </span><span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u} {<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>} {<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>} {<span class=\"fn\">IŒ≥</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>} {<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>} {<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\">CategoryTheory.UnbundledHom</a> <span class=\"fn\">hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.lean#L25-L28","name":"CategoryTheory.UnbundledHom","line":25,"kind":"class","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom","doc":"A class for unbundled homs used to define a category. `hom` must\ntake two types `Œ±`, `Œ≤` and instances of the corresponding structures,\nand return a predicate on `Œ± ‚Üí Œ≤`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/UnbundledHom.html#CategoryTheory.UnbundledHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">UnbundledHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span><span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}