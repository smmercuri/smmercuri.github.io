{"name":"Mathlib.CategoryTheory.FintypeCat","instances":[{"typeNames":["FintypeCat","_builtin_typeu"],"name":"FintypeCat.instCoeSortType","className":"CoeSort"},{"typeNames":["FintypeCat"],"name":"FintypeCat.instInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"FintypeCat.instFintypeα","className":"Fintype"},{"typeNames":["FintypeCat"],"name":"FintypeCat.instCategory","className":"CategoryTheory.Category"},{"typeNames":["FintypeCat.incl"],"name":"FintypeCat.instFullIncl","className":"CategoryTheory.Functor.Full"},{"typeNames":["FintypeCat.incl"],"name":"FintypeCat.instFaithfulIncl","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat"],"name":"FintypeCat.concreteCategoryFintype","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CategoryTheory.forget"],"name":"FintypeCat.instFullForget","className":"CategoryTheory.Functor.Full"},{"typeNames":["FintypeCat.Skeleton"],"name":"FintypeCat.Skeleton.instInhabited","className":"Inhabited"},{"typeNames":["FintypeCat.Skeleton"],"name":"FintypeCat.Skeleton.instSmallCategory","className":"CategoryTheory.Category"},{"typeNames":["FintypeCat.Skeleton.incl"],"name":"FintypeCat.Skeleton.instFullIncl","className":"CategoryTheory.Functor.Full"},{"typeNames":["FintypeCat.Skeleton.incl"],"name":"FintypeCat.Skeleton.instFaithfulIncl","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat.Skeleton.incl"],"name":"FintypeCat.Skeleton.instEssSurjIncl","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["FintypeCat.Skeleton.incl"],"name":"FintypeCat.Skeleton.instIsEquivalenceIncl","className":"CategoryTheory.Functor.IsEquivalence"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Basic","Mathlib.CategoryTheory.FullSubcategory","Mathlib.CategoryTheory.Skeletal","Mathlib.Data.Fintype.Card"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L188-L190","name":"FintypeCat.isSkeleton","line":188,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.isSkeleton","doc":"`Fintype.Skeleton` is a skeleton of `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.isSkeleton\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">isSkeleton</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.IsSkeletonOf\">CategoryTheory.IsSkeletonOf</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L181-L183","name":"FintypeCat.Skeleton.incl_mk_nat_card","line":181,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl_mk_nat_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl_mk_nat_card\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">incl_mk_nat_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.mk\">FintypeCat.Skeleton.mk</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L177-L178","name":"FintypeCat.Skeleton.equivalence","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.equivalence","doc":"The equivalence between `Fintype.Skeleton` and `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.equivalence\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L174-L174","name":"FintypeCat.Skeleton.instIsEquivalenceIncl","line":174,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instIsEquivalenceIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instIsEquivalenceIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instIsEquivalenceIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L166-L172","name":"FintypeCat.Skeleton.instEssSurjIncl","line":166,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instEssSurjIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instEssSurjIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instEssSurjIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a>.EssSurj</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L164-L164","name":"FintypeCat.Skeleton.instFaithfulIncl","line":164,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instFaithfulIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instFaithfulIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instFaithfulIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L162-L162","name":"FintypeCat.Skeleton.instFullIncl","line":162,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instFullIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instFullIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instFullIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\">FintypeCat.Skeleton.incl</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L158-L160","name":"FintypeCat.Skeleton.incl","line":158,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl","doc":"The canonical fully faithful embedding of `Fintype.Skeleton` into `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.incl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">incl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L136-L155","name":"FintypeCat.Skeleton.is_skeletal","line":136,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.is_skeletal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.is_skeletal\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">is_skeletal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Skeletal.html#CategoryTheory.Skeletal\">CategoryTheory.Skeletal</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L131-L134","name":"FintypeCat.Skeleton.instSmallCategory","line":131,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instSmallCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instSmallCategory\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instSmallCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L128-L129","name":"FintypeCat.Skeleton.ext","line":128,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.ext\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.len</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Y</span>.len</span></span> → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L124-L125","name":"FintypeCat.Skeleton.len","line":124,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.len","doc":"Given any object of `Fintype.Skeleton`, this returns the associated natural number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.len\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">len</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L120-L121","name":"FintypeCat.Skeleton.instInhabited","line":120,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.instInhabited\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L117-L118","name":"FintypeCat.Skeleton.mk","line":117,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.mk","doc":"Given any natural number `n`, this creates the associated object of `Fintype.Skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton.mk\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L111-L112","name":"FintypeCat.Skeleton","line":111,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton","doc":"The \"standard\" skeleton for `FintypeCat`. This is the full subcategory of `FintypeCat`\nspanned by objects of the form `ULift (Fin n)` for `n : ℕ`. We parameterize the objects\nof `Fintype.Skeleton` directly as `ULift ℕ`, as the type `ULift (Fin m) ≃ ULift (Fin n)`\nis nonempty if and only if `n = m`. Specifying universes, `Skeleton : Type u` is a small\nskeletal category equivalent to `Fintype.{u}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">Skeleton</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L90-L100","name":"FintypeCat.equivEquivIso","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso","doc":"Equivalences between finite types are the same as isomorphisms in `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">equivEquivIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L89-L89","name":"FintypeCat.equivEquivIso_symm_apply_apply","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_symm_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_symm_apply_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">equivEquivIso_symm_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">A</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">FintypeCat.equivEquivIso</span>.symm</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.hom</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L89-L89","name":"FintypeCat.equivEquivIso_apply_hom","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_apply_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_apply_hom\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">equivEquivIso_apply_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FintypeCat.equivEquivIso</span> <span class=\"fn\">e</span></span>)</span>.hom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L89-L89","name":"FintypeCat.equivEquivIso_symm_apply_symm_apply","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_symm_apply_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_symm_apply_symm_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">equivEquivIso_symm_apply_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">B</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">FintypeCat.equivEquivIso</span>.symm</span> <span class=\"fn\">i</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.inv</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L89-L89","name":"FintypeCat.equivEquivIso_apply_inv","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_apply_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.equivEquivIso_apply_inv\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">equivEquivIso_apply_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FintypeCat.equivEquivIso</span> <span class=\"fn\">e</span></span>)</span>.inv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.symm</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L83-L85","name":"FintypeCat.hom_ext","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.hom_ext\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L78-L79","name":"FintypeCat.inv_hom_id_apply","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.inv_hom_id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.inv_hom_id_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">inv_hom_id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L74-L75","name":"FintypeCat.hom_inv_id_apply","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.hom_inv_id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.hom_inv_id_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">hom_inv_id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L70-L71","name":"FintypeCat.comp_apply","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.comp_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L66-L67","name":"FintypeCat.id_apply","line":66,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.id_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L63-L63","name":"FintypeCat.instFullForget","line":63,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFullForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFullForget\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instFullForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L59-L60","name":"FintypeCat.concreteCategoryFintype","line":59,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.concreteCategoryFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.concreteCategoryFintype\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">concreteCategoryFintype</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L57-L57","name":"FintypeCat.instFaithfulIncl","line":57,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFaithfulIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFaithfulIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instFaithfulIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\">FintypeCat.incl</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L56-L56","name":"FintypeCat.instFullIncl","line":56,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFullIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFullIncl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instFullIncl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\">FintypeCat.incl</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L53-L54","name":"FintypeCat.incl","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl","doc":"The fully faithful embedding of `FintypeCat` into the category of types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">incl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L52-L52","name":"FintypeCat.incl_map","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl_map\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">incl_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a> <span class=\"fn\">CategoryTheory.Bundled.α</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\">FintypeCat.incl</a>.map</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L52-L52","name":"FintypeCat.incl_obj","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl_obj\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">incl_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\">FintypeCat.incl</a>.obj</span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">self</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L48-L49","name":"FintypeCat.instCategory","line":48,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instCategory\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a>          <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L45-L46","name":"FintypeCat.instFintypeα","line":45,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFintypeα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instFintypeα\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instFintypeα</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L42-L43","name":"FintypeCat.instInhabited","line":42,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instInhabited\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L39-L40","name":"FintypeCat.of","line":39,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.of","doc":"Construct a bundled `FintypeCat` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.of\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L35-L36","name":"FintypeCat.instCoeSortType","line":35,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.instCoeSortType\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/FintypeCat.lean#L30-L31","name":"FintypeCat","line":30,"kind":"def","docLink":"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat","doc":"The category of finite types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\"><span class=\"name\">FintypeCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}