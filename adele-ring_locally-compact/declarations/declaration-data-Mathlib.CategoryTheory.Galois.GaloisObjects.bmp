{"name":"Mathlib.CategoryTheory.Galois.GaloisObjects","instances":[{"typeNames":["CategoryTheory.SingleObj","FintypeCat.incl"],"name":"CategoryTheory.PreGaloisCategory.instPreservesColimitsOfShapeFintypeCatInstCategoryFintypeCatTypeTypesSingleObjCategoryToMonoidToDivInvMonoidIncl","className":"CategoryTheory.Limits.PreservesColimitsOfShape"},{"typeNames":["CategoryTheory.Aut","CategoryTheory.Bundled.α"],"name":"CategoryTheory.PreGaloisCategory.autMulFiber","className":"MulAction"},{"typeNames":["CategoryTheory.Aut","CategoryTheory.Bundled.α"],"name":"CategoryTheory.PreGaloisCategory.isPretransitive_of_isGalois","className":"MulAction.IsPretransitive"}],"imports":["Init","Mathlib.CategoryTheory.Galois.Basic","Mathlib.CategoryTheory.Limits.FintypeCat","Mathlib.CategoryTheory.Limits.Preserves.Limits","Mathlib.CategoryTheory.Limits.Shapes.SingleObj","Mathlib.Logic.Equiv.TransferInstance"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L93-L96","name":"CategoryTheory.PreGaloisCategory.isPretransitive_of_isGalois","line":93,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isPretransitive_of_isGalois","doc":"If `X` is Galois, then the action of `Aut X` on `F.obj X` is\ntransitive for every fiber functor `F`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isPretransitive_of_isGalois\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">isPretransitive_of_isGalois</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FiberFunctor\">CategoryTheory.PreGaloisCategory.FiberFunctor</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive\">MulAction.IsPretransitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L87-L89","name":"CategoryTheory.PreGaloisCategory.isTerminalQuotientOfIsGalois","line":87,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isTerminalQuotientOfIsGalois","doc":"If `X` is Galois, the quotient `X / Aut X` is terminal.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isTerminalQuotientOfIsGalois\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">isTerminalQuotientOfIsGalois</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.functor\">CategoryTheory.SingleObj.functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut.toEnd\">CategoryTheory.Aut.toEnd</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L81-L84","name":"CategoryTheory.PreGaloisCategory.isGalois_iff_pretransitive","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isGalois_iff_pretransitive","doc":"Given a fiber functor `F` and a connected object `X` of `C`. Then `X` is Galois if and only if\nthe natural action of `Aut X` on `F.obj X` is transitive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isGalois_iff_pretransitive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">isGalois_iff_pretransitive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FiberFunctor\">CategoryTheory.PreGaloisCategory.FiberFunctor</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">CategoryTheory.PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.IsPretransitive\">MulAction.IsPretransitive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L75-L77","name":"CategoryTheory.PreGaloisCategory.isGalois_iff_aux","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isGalois_iff_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.isGalois_iff_aux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">isGalois_iff_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">CategoryTheory.PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.functor\">CategoryTheory.SingleObj.functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut.toEnd\">CategoryTheory.Aut.toEnd</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L62-L73","name":"CategoryTheory.PreGaloisCategory.quotientByAutTerminalEquivUniqueQuotient","line":62,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.quotientByAutTerminalEquivUniqueQuotient","doc":"For a connected object `X` of `C`, the quotient `X / Aut X` is terminal if and only if\nthe quotient `F.obj X / Aut X` has exactly one element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.quotientByAutTerminalEquivUniqueQuotient\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">quotientByAutTerminalEquivUniqueQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FiberFunctor\">CategoryTheory.PreGaloisCategory.FiberFunctor</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">CategoryTheory.PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.functor\">CategoryTheory.SingleObj.functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut.toEnd\">CategoryTheory.Aut.toEnd</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L49-L56","name":"CategoryTheory.PreGaloisCategory.autMulFiber","line":49,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.autMulFiber","doc":"The natural action of `Aut X` on `F.obj X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.autMulFiber\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">autMulFiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L44-L44","name":"CategoryTheory.PreGaloisCategory.IsGalois.quotientByAutTerminal","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois.quotientByAutTerminal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois.quotientByAutTerminal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">IsGalois</span>.<span class=\"name\">quotientByAutTerminal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.functor\">CategoryTheory.SingleObj.functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut.toEnd\">CategoryTheory.Aut.toEnd</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L42-L42","name":"CategoryTheory.PreGaloisCategory.IsGalois.mk","line":42,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">IsGalois</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toIsConnected : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">CategoryTheory.PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(quotientByAutTerminal : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.functor\">CategoryTheory.SingleObj.functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut.toEnd\">CategoryTheory.Aut.toEnd</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\">CategoryTheory.PreGaloisCategory.IsGalois</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L42-L44","name":"CategoryTheory.PreGaloisCategory.IsGalois","line":42,"kind":"class","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois","doc":"A connected object `X` of `C` is Galois if the quotient `X / Aut X` is terminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.IsGalois\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">IsGalois</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u₂, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">CategoryTheory.GaloisCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">IsConnected</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Galois/GaloisObjects.lean#L36-L39","name":"CategoryTheory.PreGaloisCategory.instPreservesColimitsOfShapeFintypeCatInstCategoryFintypeCatTypeTypesSingleObjCategoryToMonoidToDivInvMonoidIncl","line":36,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.instPreservesColimitsOfShapeFintypeCatInstCategoryFintypeCatTypeTypesSingleObjCategoryToMonoidToDivInvMonoidIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/GaloisObjects.html#CategoryTheory.PreGaloisCategory.instPreservesColimitsOfShapeFintypeCatInstCategoryFintypeCatTypeTypesSingleObjCategoryToMonoidToDivInvMonoidIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreGaloisCategory</span>.<span class=\"name\">instPreservesColimitsOfShapeFintypeCatInstCategoryFintypeCatTypeTypesSingleObjCategoryToMonoidToDivInvMonoidIncl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimitsOfShape\">CategoryTheory.Limits.PreservesColimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.incl\">FintypeCat.incl</a></span></div></div>"}]}