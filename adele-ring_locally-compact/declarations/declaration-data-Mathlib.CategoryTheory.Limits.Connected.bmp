{"name":"Mathlib.CategoryTheory.Limits.Connected","instances":[{"typeNames":["CategoryTheory.Limits.WidePullbackShape"],"name":"CategoryTheory.widePullbackShape_connected","className":"CategoryTheory.IsConnected"},{"typeNames":["CategoryTheory.Limits.WidePushoutShape"],"name":"CategoryTheory.widePushoutShape_connected","className":"CategoryTheory.IsConnected"},{"typeNames":["CategoryTheory.Limits.WalkingParallelPair"],"name":"CategoryTheory.parallelPairInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Limits.WalkingParallelPair"],"name":"CategoryTheory.parallel_pair_connected","className":"CategoryTheory.IsConnected"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.BinaryProducts","Mathlib.CategoryTheory.Limits.Shapes.Equalizers","Mathlib.CategoryTheory.Limits.Shapes.WidePullbacks","Mathlib.CategoryTheory.IsConnected","Mathlib.CategoryTheory.Limits.Preserves.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L90-L109","name":"CategoryTheory.prodPreservesConnectedLimits","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.prodPreservesConnectedLimits","doc":"The functor `(X × -)` preserves any connected limit.\nNote that this functor does not preserve the two most obvious disconnected limits - that is,\n`(X × -)` does not preserve products or terminal object, eg `(X ⨯ A) ⨯ (X ⨯ B)` is not isomorphic to\n`X ⨯ (A ⨯ B)` and `X ⨯ 1` is not isomorphic to `1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.prodPreservesConnectedLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">prodPreservesConnectedLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\">J</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L77-L79","name":"CategoryTheory.ProdPreservesConnectedLimits.forgetCone","line":77,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone","doc":"(Impl).\nGiven a cone for (X × K -), produce a cone for K using the natural transformation `γ₂` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">forgetCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L76-L76","name":"CategoryTheory.ProdPreservesConnectedLimits.forgetCone_pt","line":76,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">forgetCone_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone\">CategoryTheory.ProdPreservesConnectedLimits.forgetCone</a> <span class=\"fn\">s</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L76-L76","name":"CategoryTheory.ProdPreservesConnectedLimits.forgetCone_π","line":76,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">forgetCone_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.forgetCone\">CategoryTheory.ProdPreservesConnectedLimits.forgetCone</a> <span class=\"fn\">s</span></span>)</span>.π</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">s</span>.π</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂\">CategoryTheory.ProdPreservesConnectedLimits.γ₂</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L71-L72","name":"CategoryTheory.ProdPreservesConnectedLimits.γ₁","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₁","doc":"(Impl). The obvious natural transformation from (X × K -) to X "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">γ₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">CategoryTheory.Functor.const</a> <span class=\"fn\">J</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L70-L70","name":"CategoryTheory.ProdPreservesConnectedLimits.γ₁_app","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₁_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₁_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">γ₁_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₁\">CategoryTheory.ProdPreservesConnectedLimits.γ₁</a> <span class=\"fn\">X</span></span>)</span>.app</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Limits.prod.fst</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L67-L67","name":"CategoryTheory.ProdPreservesConnectedLimits.γ₂","line":67,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂","doc":"(Impl). The obvious natural transformation from (X × K -) to K. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">γ₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Limits.prod.functor</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L66-L66","name":"CategoryTheory.ProdPreservesConnectedLimits.γ₂_app","line":66,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ProdPreservesConnectedLimits</span>.<span class=\"name\">γ₂_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.HasBinaryProducts\">CategoryTheory.Limits.HasBinaryProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.ProdPreservesConnectedLimits.γ₂\">CategoryTheory.ProdPreservesConnectedLimits.γ₂</a> <span class=\"fn\">X</span></span>)</span>.app</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Limits.prod.snd</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L50-L55","name":"CategoryTheory.parallel_pair_connected","line":50,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.parallel_pair_connected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.parallel_pair_connected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">parallel_pair_connected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">CategoryTheory.Limits.WalkingParallelPair</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L47-L48","name":"CategoryTheory.parallelPairInhabited","line":47,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.parallelPairInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.parallelPairInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">parallelPairInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">CategoryTheory.Limits.WalkingParallelPair</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L40-L45","name":"CategoryTheory.widePushoutShape_connected","line":40,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.widePushoutShape_connected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.widePushoutShape_connected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">widePushoutShape_connected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePushoutShape\">CategoryTheory.Limits.WidePushoutShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Connected.lean#L33-L38","name":"CategoryTheory.widePullbackShape_connected","line":33,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.widePullbackShape_connected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Connected.html#CategoryTheory.widePullbackShape_connected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">widePullbackShape_connected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.WidePullbackShape\">CategoryTheory.Limits.WidePullbackShape</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"}]}