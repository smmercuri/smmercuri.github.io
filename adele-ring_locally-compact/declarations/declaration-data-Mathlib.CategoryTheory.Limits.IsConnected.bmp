{"name":"Mathlib.CategoryTheory.Limits.IsConnected","instances":[{"typeNames":["CategoryTheory.Limits.Types.constPUnitFunctor"],"name":"CategoryTheory.Limits.Types.instHasColimitConstPUnitFunctor","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.Limits.colimit"],"name":"CategoryTheory.Limits.Types.instSubsingletonColimitPUnit","className":"Subsingleton"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Types","Mathlib.CategoryTheory.IsConnected","Mathlib.CategoryTheory.Limits.Final","Mathlib.CategoryTheory.Conj"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L118-L123","name":"CategoryTheory.Limits.Types.isConnected_iff_of_final","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_of_final","doc":"The domain of a final functor is connected if and only if its codomain is connected. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_of_final\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">isConnected_iff_of_final</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₂, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.Final</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L106-L112","name":"CategoryTheory.Limits.Types.isConnected_iff_isColimit_pUnitCocone","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_isColimit_pUnitCocone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_isColimit_pUnitCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">isConnected_iff_isColimit_pUnitCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone\">CategoryTheory.Limits.Types.pUnitCocone</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L97-L104","name":"CategoryTheory.Limits.Types.isConnected_iff_colimit_constPUnitFunctor_iso_pUnit","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_colimit_constPUnitFunctor_iso_pUnit","doc":"An index category is connected iff the colimit of the constant singleton-valued functor is a\nsingleton. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isConnected_iff_colimit_constPUnitFunctor_iso_pUnit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">isConnected_iff_colimit_constPUnitFunctor_iso_pUnit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{w + 1}</a>     </span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L87-L93","name":"CategoryTheory.Limits.Types.zigzag_of_eqvGen_quot_rel","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.zigzag_of_eqvGen_quot_rel","doc":"Let `F` be a `Type`-valued functor. If two elements `a : F c` and `b : F d` represent the same\nelement of `colimit F`, then `c` and `d` are related by a `Zigzag`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.zigzag_of_eqvGen_quot_rel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">zigzag_of_eqvGen_quot_rel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> w)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">C</span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">C</span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Data/Quot.html#EqvGen\">EqvGen</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.Zigzag\">CategoryTheory.Zigzag</a> <span class=\"fn\"><span class=\"fn\">c</span>.fst</span> <span class=\"fn\"><span class=\"fn\">d</span>.fst</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L81-L83","name":"CategoryTheory.Limits.Types.colimitConstPUnitIsoPUnit","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.colimitConstPUnitIsoPUnit","doc":"Given a connected index category, the colimit of the constant unit-valued functor is `PUnit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.colimitConstPUnitIsoPUnit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">colimitConstPUnitIsoPUnit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{w + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L71-L78","name":"CategoryTheory.Limits.Types.instSubsingletonColimitPUnit","line":71,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.instSubsingletonColimitPUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.instSubsingletonColimitPUnit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">instSubsingletonColimitPUnit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsPreconnected\">CategoryTheory.IsPreconnected</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L68-L69","name":"CategoryTheory.Limits.Types.instHasColimitConstPUnitFunctor","line":68,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.instHasColimitConstPUnitFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.instHasColimitConstPUnitFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">instHasColimitConstPUnitFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L57-L66","name":"CategoryTheory.Limits.Types.isColimitPUnitCocone","line":57,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isColimitPUnitCocone","doc":"If `C` is connected, the cocone on `constPUnitFunctor` with cone point `PUnit` is a colimit\ncocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.isColimitPUnitCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">isColimitPUnitCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/IsConnected.html#CategoryTheory.IsConnected\">CategoryTheory.IsConnected</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone\">CategoryTheory.Limits.Types.pUnitCocone</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L51-L53","name":"CategoryTheory.Limits.Types.pUnitCocone","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone","doc":"The cocone on `constPUnitFunctor` with cone point `PUnit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">pUnitCocone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L50-L50","name":"CategoryTheory.Limits.Types.pUnitCocone_ι_app","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone_ι_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">pUnitCocone_ι_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\">CategoryTheory.Limits.Types.constPUnitFunctor</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone\">CategoryTheory.Limits.Types.pUnitCocone</a> <span class=\"fn\">C</span></span>)</span>.ι</span>.app</span> <span class=\"fn\">X</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L50-L50","name":"CategoryTheory.Limits.Types.pUnitCocone_pt","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">pUnitCocone_pt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.pUnitCocone\">CategoryTheory.Limits.Types.pUnitCocone</a> <span class=\"fn\">C</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{w + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/IsConnected.lean#L47-L47","name":"CategoryTheory.Limits.Types.constPUnitFunctor","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor","doc":"The functor mapping every object to `PUnit`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/IsConnected.html#CategoryTheory.Limits.Types.constPUnitFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">Types</span>.<span class=\"name\">constPUnitFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> w)</a></span></div></div>"}]}