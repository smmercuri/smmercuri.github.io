{"name":"Mathlib.CategoryTheory.Limits.Shapes.Pullback.Square","instances":[],"imports":["Init","Mathlib.CategoryTheory.Square","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L92-L94","name":"CategoryTheory.Square.IsPushout.iff_of_iso","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.iff_of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.iff_of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">iff_of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq₁</span>.IsPushout</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">sq₂</span>.IsPushout</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L85-L90","name":"CategoryTheory.Square.IsPushout.of_iso","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">sq₁</span>.IsPushout</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₂</span>.IsPushout</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L81-L83","name":"CategoryTheory.Square.IsPullback.iff_of_iso","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.iff_of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.iff_of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">iff_of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq₁</span>.IsPullback</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">sq₂</span>.IsPullback</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L74-L79","name":"CategoryTheory.Square.IsPullback.of_iso","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">sq₁</span>.IsPullback</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₂</span>.IsPullback</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L70-L72","name":"CategoryTheory.Square.IsPushout.isColimit","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.isColimit","doc":"If a commutative square `sq` is a pushout square,\nthen `sq.pushoutCocone` is colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.isColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">isColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">sq</span>.IsPushout</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pushoutCocone</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L64-L66","name":"CategoryTheory.Square.IsPullback.isLimit","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.isLimit","doc":"If a commutative square `sq` is a pullback square,\nthen `sq.pullbackCone` is limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.isLimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">sq</span>.IsPullback</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pullbackCone</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L57-L58","name":"CategoryTheory.Square.IsPushout.mk","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pushoutCocone</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.IsPushout</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L54-L55","name":"CategoryTheory.Square.IsPullback.mk","line":54,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pullbackCone</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.IsPullback</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L50-L52","name":"CategoryTheory.Square.isPushout_iff","line":50,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPushout_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPushout_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPushout_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.IsPushout</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pushoutCocone</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L46-L48","name":"CategoryTheory.Square.isPullback_iff","line":46,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPullback_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPullback_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPullback_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.IsPullback</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.pullbackCone</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L43-L44","name":"CategoryTheory.Square.IsPushout","line":43,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout","doc":"The condition that a commutative square is a pushout square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L39-L40","name":"CategoryTheory.Square.IsPullback","line":39,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback","doc":"The condition that a commutative square is a pullback square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L35-L36","name":"CategoryTheory.Square.pushoutCocone","line":35,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone","doc":"The pushout cocone attached to a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">pushoutCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone\">CategoryTheory.Limits.PushoutCocone</a> <span class=\"fn\"><span class=\"fn\">sq</span>.f₁₂</span> <span class=\"fn\"><span class=\"fn\">sq</span>.f₁₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L31-L32","name":"CategoryTheory.Square.pullbackCone","line":31,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone","doc":"The pullback cone attached to a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">pullbackCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sq : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">CategoryTheory.Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">CategoryTheory.Limits.PullbackCone</a> <span class=\"fn\"><span class=\"fn\">sq</span>.f₂₄</span> <span class=\"fn\"><span class=\"fn\">sq</span>.f₃₄</span></span></div></div>"}]}