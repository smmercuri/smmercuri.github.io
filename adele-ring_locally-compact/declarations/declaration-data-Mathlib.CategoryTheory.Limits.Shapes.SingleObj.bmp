{"name":"Mathlib.CategoryTheory.Limits.Shapes.SingleObj","instances":[{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.Limits.SingleObj.instMulActionObjSingleObjStar","className":"MulAction"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Types","Mathlib.CategoryTheory.SingleObj","Mathlib.GroupTheory.GroupAction.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L99-L101","name":"CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient","line":99,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient","doc":"The colimit of `J : SingleObj G ⥤ Type u` is equivalent to the quotient of\n`J.obj (SingleObj.star G)` by the induced action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">colimitEquivQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L98-L98","name":"CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_symm_apply","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_symm_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">colimitEquivQuotient_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient\">CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient</a> <span class=\"fn\">J</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitEquivQuot\">CategoryTheory.Limits.Types.colimitEquivQuot</a> <span class=\"fn\">J</span></span>)</span>.symm</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a>\n        <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>) =&gt;\n          <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>, <span class=\"fn\">x</span>⟩</span></span></span>)</span>\n        <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L98-L98","name":"CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_apply","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">colimitEquivQuotient_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit\">CategoryTheory.Limits.colimit</a> <span class=\"fn\">J</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient\">CategoryTheory.Limits.SingleObj.Types.colimitEquivQuotient</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">j</span></span></span>) =&gt; <span class=\"fn\">⟦<span class=\"fn\"><span class=\"fn\">p</span>.snd</span>⟧</span></span>)</span> <span class=\"fn\">⋯</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.colimitEquivQuot\">CategoryTheory.Limits.Types.colimitEquivQuot</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L87-L94","name":"CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient","line":87,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient","doc":"The explicit quotient construction of the colimit of `J : SingleObj G ⥤ Type u` is\nequivalent to the quotient of `J.obj (SingleObj.star G)` by the induced action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">Quot</span>.<span class=\"name\">equivOrbitRelQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot\">CategoryTheory.Limits.Types.Quot</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L86-L86","name":"CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_apply","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">Quot</span>.<span class=\"name\">equivOrbitRelQuotient_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">J</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient\">CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">j</span></span></span>) =&gt; <span class=\"fn\">⟦<span class=\"fn\"><span class=\"fn\">p</span>.snd</span>⟧</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L86-L86","name":"CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_symm_apply","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient_symm_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">Quot</span>.<span class=\"name\">equivOrbitRelQuotient_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">Setoid.r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient\">CategoryTheory.Limits.SingleObj.Types.Quot.equivOrbitRelQuotient</a> <span class=\"fn\">J</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>, <span class=\"fn\">x</span>⟩</span></span></span>)</span>\n    <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L76-L82","name":"CategoryTheory.Limits.SingleObj.Types.Quot.Rel.iff_orbitRel","line":76,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.Rel.iff_orbitRel","doc":"The relation used to construct colimits in types for `J : SingleObj G ⥤ Type u` is\nequivalent to the `MulAction.orbitRel` equivalence relation on `J.obj  (SingleObj.star G)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.Quot.Rel.iff_orbitRel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">Quot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">iff_orbitRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.Quot.Rel\">CategoryTheory.Limits.Types.Quot.Rel</a> <span class=\"fn\">J</span> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>, <span class=\"fn\">x</span>⟩</span> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>, <span class=\"fn\">y</span>⟩</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.orbitRel\">MulAction.orbitRel</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span>.Rel</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L64-L66","name":"CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints","doc":"The limit of `J : SingleObj M ⥤ Type u` is equivalent to the fixed points of the\ninduced action on `J.obj (SingleObj.star M)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">limitEquivFixedPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.limit\">CategoryTheory.Limits.limit</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.fixedPoints\">MulAction.fixedPoints</a> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L63-L63","name":"CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_apply_coe","line":63,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_apply_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">limitEquivFixedPoints_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.limit\">CategoryTheory.Limits.limit</a> <span class=\"fn\">J</span></span>),\n  <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints\">CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.limit.π\">CategoryTheory.Limits.limit.π</a> <span class=\"fn\">J</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L63-L63","name":"CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_symm_apply","line":63,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints_symm_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">limitEquivFixedPoints_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.fixedPoints\">MulAction.fixedPoints</a> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints\">CategoryTheory.Limits.SingleObj.Types.limitEquivFixedPoints</a> <span class=\"fn\">J</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Types.html#CategoryTheory.Limits.Types.limitEquivSections\">CategoryTheory.Limits.Types.limitEquivSections</a> <span class=\"fn\">J</span></span>)</span>.symm</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints\">CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints</a> <span class=\"fn\">J</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L54-L59","name":"CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints","doc":"The equivalence between sections of `J : SingleObj M ⥤ Type u` and fixed points of the\ninduced action on `J.obj (SingleObj.star M)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">sections</span>.<span class=\"name\">equivFixedPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">J</span>.sections</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.fixedPoints\">MulAction.fixedPoints</a> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L53-L53","name":"CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_symm_apply_coe","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_symm_apply_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">sections</span>.<span class=\"name\">equivFixedPoints_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Basic.html#MulAction.fixedPoints\">MulAction.fixedPoints</a> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints\">CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints</a> <span class=\"fn\">J</span></span>)</span>.symm</span> <span class=\"fn\">p</span></span>)</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L53-L53","name":"CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_apply_coe","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints_apply_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">Types</span>.<span class=\"name\">sections</span>.<span class=\"name\">equivFixedPoints_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">J</span>.sections</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints\">CategoryTheory.Limits.SingleObj.Types.sections.equivFixedPoints</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Limits/Shapes/SingleObj.lean#L36-L45","name":"CategoryTheory.Limits.SingleObj.instMulActionObjSingleObjStar","line":36,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.instMulActionObjSingleObjStar","doc":"The induced `G`-action on the target of `J : SingleObj G ⥤ Type u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/SingleObj.html#CategoryTheory.Limits.SingleObj.instMulActionObjSingleObjStar\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Limits</span>.<span class=\"name\">SingleObj</span>.<span class=\"name\">instMulActionObjSingleObjStar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">M</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj.star\">CategoryTheory.SingleObj.star</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span></div></div>"}]}