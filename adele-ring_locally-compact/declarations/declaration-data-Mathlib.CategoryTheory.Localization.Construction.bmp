{"name":"Mathlib.CategoryTheory.Localization.Construction","instances":[{"typeNames":["CategoryTheory.Localization.Construction.LocQuiver"],"name":"CategoryTheory.Localization.Construction.instQuiverLocQuiver","className":"Quiver"},{"typeNames":["CategoryTheory.MorphismProperty.Localization"],"name":"CategoryTheory.MorphismProperty.instCategoryLocalization","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.CategoryTheory.MorphismProperty.Composition","Mathlib.CategoryTheory.MorphismProperty.IsInvertedBy","Mathlib.CategoryTheory.Category.Quiv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L356-L365","name":"CategoryTheory.Localization.Construction.whiskeringLeftEquivalence","line":356,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.whiskeringLeftEquivalence","doc":"The equivalence of categories `(W.localization ⥤ D) ≌ (W.FunctorsInverting D)`\ninduced by the composition with `W.Q : C ⥤ W.localization`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.whiskeringLeftEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">whiskeringLeftEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L341-L350","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso","line":341,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso","doc":"The counit isomorphism of the equivalence of categories `WhiskeringLeftEquivalence W D`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L340-L340","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_hom","line":340,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">counitIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L340-L340","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_inv","line":340,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">counitIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.counitIso</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L327-L337","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso","line":327,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso","doc":"The unit isomorphism of the equivalence of categories `whiskeringLeftEquivalence W D`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L326-L326","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_inv","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">unitIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L326-L326","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_hom","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">unitIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.unitIso</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L305-L323","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse","line":305,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse","doc":"The function `(W.FunctorsInverting D) ⥤ (W.Localization ⥤ D)` induced by\n`Construction.lift`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L304-L304","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_map_app","line":304,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">inverse_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>} (<span class=\"fn\">τ</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.map</span> <span class=\"fn\">τ</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app\">CategoryTheory.Localization.Construction.NatTransExtension.app</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">τ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">X_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L304-L304","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_obj","line":304,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">inverse_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.obj</span> <span class=\"fn\">G</span></span>)</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span>.obj</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.as</span>.obj</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L304-L304","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_map","line":304,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">inverse_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.obj</span> <span class=\"fn\">G</span></span>)</span>.map</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Core.html#Quot.liftOn\">Quot.liftOn</a> <span class=\"fn\">hf</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.as</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">b</span>.as</span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.composePath\">CategoryTheory.composePath</a>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></span>,\n              <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>} (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Init/Core.html#Sum.rec\">Sum.rec</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.obj</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span>.map</span> <span class=\"fn\">val</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\">{ <span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span> // <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">f</span></span> }</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">CategoryTheory.inv</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span>.map</span> <span class=\"fn\">↑<span class=\"fn\">val</span></span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span> }</span>.mapPath</span>\n          <span class=\"fn\">f</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L298-L300","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor","line":298,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor","doc":"The functor `(W.Localization ⥤ D) ⥤ (W.FunctorsInverting D)` induced by the\ncomposition with `W.Q : C ⥤ W.Localization`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.FunctorsInverting</span> <span class=\"fn\">D</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L297-L297","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_obj","line":297,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">functor_obj_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.obj</span> <span class=\"fn\">X✝</span></span>)</span>.obj</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L297-L297","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_map","line":297,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_obj_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">functor_obj_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X_1 </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.obj</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L297-L297","name":"CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_map_app","line":297,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">WhiskeringLeftEquivalence</span>.<span class=\"name\">functor_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <a href=\"./foundational_types.html\">Type</a> uD)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\">C</span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor\">CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.functor</a> <span class=\"fn\">W</span> <span class=\"fn\">D</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">X_1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L284-L289","name":"CategoryTheory.Localization.Construction.natTrans_hcomp_injective","line":284,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTrans_hcomp_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTrans_hcomp_injective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">natTrans_hcomp_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ₁ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ₂ : <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">W</span>.Q</span></span> <a href=\"./Mathlib/CategoryTheory/Functor/Category.html#CategoryTheory.NatTrans.hcomp\">◫</a> <span class=\"fn\">τ₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">W</span>.Q</span></span> <a href=\"./Mathlib/CategoryTheory/Functor/Category.html#CategoryTheory.NatTrans.hcomp\">◫</a> <span class=\"fn\">τ₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">τ₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L281-L282","name":"CategoryTheory.Localization.Construction.natTransExtension_hcomp","line":281,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension_hcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension_hcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">natTransExtension_hcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">W</span>.Q</span></span> <a href=\"./Mathlib/CategoryTheory/Functor/Category.html#CategoryTheory.NatTrans.hcomp\">◫</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension\">CategoryTheory.Localization.Construction.natTransExtension</a> <span class=\"fn\">τ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L267-L278","name":"CategoryTheory.Localization.Construction.natTransExtension","line":267,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension","doc":"If `F₁` and `F₂` are functors `W.Localization ⥤ D`, a natural transformation `F₁ ⟶ F₂`\ncan be obtained from a natural transformation `W.Q ⋙ F₁ ⟶ W.Q ⋙ F₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">natTransExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L266-L266","name":"CategoryTheory.Localization.Construction.natTransExtension_app","line":266,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">natTransExtension_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.natTransExtension\">CategoryTheory.Localization.Construction.natTransExtension</a> <span class=\"fn\">τ</span></span>)</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app\">CategoryTheory.Localization.Construction.NatTransExtension.app</a> <span class=\"fn\">τ</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L258-L260","name":"CategoryTheory.Localization.Construction.NatTransExtension.app_eq","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">NatTransExtension</span>.<span class=\"name\">app_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app\">CategoryTheory.Localization.Construction.NatTransExtension.app</a> <span class=\"fn\">τ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">τ</span>.app</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L253-L255","name":"CategoryTheory.Localization.Construction.NatTransExtension.app","line":253,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app","doc":"If `F₁` and `F₂` are functors `W.Localization ⥤ D` and if we have\n`τ : W.Q ⋙ F₁ ⟶ W.Q ⋙ F₂`, we shall define a natural transformation `F₁ ⟶ F₂`.\nThis is the `app` field of this natural transformation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.NatTransExtension.app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">NatTransExtension</span>.<span class=\"name\">app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(τ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₁</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">F₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F₁</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F₂</span>.obj</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L241-L244","name":"CategoryTheory.Localization.Construction.morphismProperty_is_top'","line":241,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.morphismProperty_is_top'","doc":"A `MorphismProperty` in `W.Localization` is satisfied by all\nmorphisms in the localized category if it contains the image of the\nmorphisms in the original category, if is stable under composition\nand if the property is stable by passing to inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.morphismProperty_is_top'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">morphismProperty_is_top'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.IsStableUnderComposition</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP₁ : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hP₂ : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span>⦄ (<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">e</span>.hom</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">e</span>.inv</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L211-L235","name":"CategoryTheory.Localization.Construction.morphismProperty_is_top","line":211,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.morphismProperty_is_top","doc":"A `MorphismProperty` in `W.Localization` is satisfied by all\nmorphisms in the localized category if it contains the image of the\nmorphisms in the original category, the inverses of the morphisms\nin `W` and if it is stable under composition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.morphismProperty_is_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">morphismProperty_is_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.IsStableUnderComposition</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP₁ : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.map</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hP₂ : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ (<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.wInv\">CategoryTheory.Localization.Construction.wInv</a> <span class=\"fn\">w</span> <span class=\"fn\">hw</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L197-L203","name":"CategoryTheory.Localization.Construction.objEquiv","line":197,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv","doc":"The canonical bijection between objects in a category and its\nlocalization with respect to a morphism_property `W` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">objEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L196-L196","name":"CategoryTheory.Localization.Construction.objEquiv_symm_apply","line":196,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv_symm_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">objEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv\">CategoryTheory.Localization.Construction.objEquiv</a> <span class=\"fn\">W</span></span>)</span>.symm</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.as</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L196-L196","name":"CategoryTheory.Localization.Construction.objEquiv_apply","line":196,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">objEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.objEquiv\">CategoryTheory.Localization.Construction.objEquiv</a> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L173-L190","name":"CategoryTheory.Localization.Construction.uniq","line":173,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.uniq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.uniq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">uniq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">G₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">G₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L165-L171","name":"CategoryTheory.Localization.Construction.fac","line":165,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift\">CategoryTheory.Localization.Construction.lift</a> <span class=\"fn\">G</span> <span class=\"fn\">hG</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L150-L162","name":"CategoryTheory.Localization.Construction.lift","line":150,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift","doc":"The lifting of a functor `C ⥤ D` inverting `W` as a functor `W.Localization ⥤ D` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L149-L149","name":"CategoryTheory.Localization.Construction.lift_map","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">lift_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift\">CategoryTheory.Localization.Construction.lift</a> <span class=\"fn\">G</span> <span class=\"fn\">hG</span></span>)</span>.map</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Core.html#Quot.liftOn\">Quot.liftOn</a> <span class=\"fn\">hf</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.as</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">b</span>.as</span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.composePath\">CategoryTheory.composePath</a>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></span>,\n              <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>} (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Init/Core.html#Sum.rec\">Sum.rec</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.obj</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">val</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\">{ <span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span> // <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">f</span></span> }</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">CategoryTheory.inv</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">↑<span class=\"fn\">val</span></span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span> }</span>.mapPath</span>\n          <span class=\"fn\">f</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L149-L149","name":"CategoryTheory.Localization.Construction.lift_obj","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">lift_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient\">CategoryTheory.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.lift\">CategoryTheory.Localization.Construction.lift</a> <span class=\"fn\">G</span> <span class=\"fn\">hG</span></span>)</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.as</span>.obj</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L138-L146","name":"CategoryTheory.Localization.Construction.liftToPathCategory","line":138,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory","doc":"The lifting of a functor to the path category of `LocQuiver W` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">liftToPathCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span>)</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L137-L137","name":"CategoryTheory.Localization.Construction.liftToPathCategory_map","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">liftToPathCategory_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory\">CategoryTheory.Localization.Construction.liftToPathCategory</a> <span class=\"fn\">G</span> <span class=\"fn\">hG</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.composePath\">CategoryTheory.composePath</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></span>,\n            <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>} (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) =&gt;\n              <span class=\"fn\"><a href=\"./Init/Core.html#Sum.rec\">Sum.rec</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.obj</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">val</span></span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">val</span> : <span class=\"fn\">{ <span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span> // <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">f</span></span> }</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">CategoryTheory.inv</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.map</span> <span class=\"fn\">↑<span class=\"fn\">val</span></span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span> }</span>.mapPath</span>\n        <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L137-L137","name":"CategoryTheory.Localization.Construction.liftToPathCategory_obj","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">liftToPathCategory_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> uD}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uD', uD}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.liftToPathCategory\">CategoryTheory.Localization.Construction.liftToPathCategory</a> <span class=\"fn\">G</span> <span class=\"fn\">hG</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.obj</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L130-L131","name":"CategoryTheory.MorphismProperty.Q_inverts","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Q_inverts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Q_inverts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">Q_inverts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.IsInvertedBy</span> <span class=\"fn\"><span class=\"fn\">W</span>.Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L125-L126","name":"CategoryTheory.Localization.Construction.wInv","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.wInv","doc":"The formal inverse in `W.Localization` of a morphism `w` in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.wInv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">wInv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L118-L122","name":"CategoryTheory.Localization.Construction.wIso","line":118,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.wIso","doc":"The isomorphism in `W.Localization` associated to a morphism `w` in W "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.wIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">wIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.Q</span>.obj</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L104-L108","name":"CategoryTheory.MorphismProperty.Q","line":104,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Q","doc":"The obvious functor `C ⥤ W.Localization` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Q\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">Q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L99-L101","name":"CategoryTheory.MorphismProperty.instCategoryLocalization","line":99,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.instCategoryLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.instCategoryLocalization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instCategoryLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max uC uC', uC}</a>             <span class=\"fn\"><span class=\"fn\">W</span>.Localization</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L96-L97","name":"CategoryTheory.MorphismProperty.Localization","line":96,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Localization","doc":"The localized category obtained by formally inverting the morphisms\nin `W : MorphismProperty C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.MorphismProperty.Localization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">Localization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> uC</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L83-L83","name":"CategoryTheory.Localization.Construction.relations.Winv₂","line":83,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.Winv₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.Winv₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">relations</span>.<span class=\"name\">Winv₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₂\">CategoryTheory.Localization.Construction.ψ₂</a> <span class=\"fn\">W</span> <span class=\"fn\">w</span> <span class=\"fn\">hw</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L82-L82","name":"CategoryTheory.Localization.Construction.relations.Winv₁","line":82,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.Winv₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.Winv₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">relations</span>.<span class=\"name\">Winv₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₂\">CategoryTheory.Localization.Construction.ψ₂</a> <span class=\"fn\">W</span> <span class=\"fn\">w</span> <span class=\"fn\">hw</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L81-L81","name":"CategoryTheory.Localization.Construction.relations.comp","line":81,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">relations</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L80-L80","name":"CategoryTheory.Localization.Construction.relations.id","line":80,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">relations</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\">CategoryTheory.Localization.Construction.relations</a> <span class=\"fn\">W</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\">CategoryTheory.Localization.Construction.ψ₁</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L79-L83","name":"CategoryTheory.Localization.Construction.relations","line":79,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations","doc":"The relations by which we take the quotient in order to get the localized category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.relations\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">relations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#HomRel\">HomRel</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L75-L76","name":"CategoryTheory.Localization.Construction.ψ₂","line":75,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₂","doc":"The morphism in the path category corresponding to a formal inverse. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">ψ₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">W</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L70-L71","name":"CategoryTheory.Localization.Construction.ψ₁","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁","doc":"The morphism in the path category associated to a morphism in the original category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ψ₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">ψ₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\">CategoryTheory.Localization.Construction.ιPaths</a> <span class=\"fn\">W</span> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L65-L66","name":"CategoryTheory.Localization.Construction.ιPaths","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths","doc":"The object in the path category of `LocQuiver W` attached to an object in\nthe category `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.ιPaths\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">ιPaths</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L61-L61","name":"CategoryTheory.Localization.Construction.instQuiverLocQuiver","line":61,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.instQuiverLocQuiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.instQuiverLocQuiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">instQuiverLocQuiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L59-L59","name":"CategoryTheory.Localization.Construction.LocQuiver.obj","line":59,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver.obj","doc":"underlying object "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver.obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">LocQuiver</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L57-L57","name":"CategoryTheory.Localization.Construction.LocQuiver.mk","line":57,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">LocQuiver</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\">CategoryTheory.Localization.Construction.LocQuiver</a> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/Localization/Construction.lean#L57-L59","name":"CategoryTheory.Localization.Construction.LocQuiver","line":57,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver","doc":"If `W : MorphismProperty C`, `LocQuiver W` is a quiver with the same objects\nas `C`, and whose morphisms are those in `C` and placeholders for formal\ninverses of the morphisms in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Construction.html#CategoryTheory.Localization.Construction.LocQuiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">Construction</span>.<span class=\"name\">LocQuiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> uC}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{uC', uC}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> uC</div></div>"}]}