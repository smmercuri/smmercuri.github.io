{"name":"Mathlib.CategoryTheory.Monoidal.Free.Coherence","instances":[{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompTypeDiscreteNormalMonoidalObjectToQuiverToCategoryStructInstForAllCategoryCompTypeDiscreteCategory","className":"Subsingleton"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeMonoidalCategory.subsingleton_hom","className":"Subsingleton"},{"typeNames":["CategoryTheory.FreeMonoidalCategory"],"name":"CategoryTheory.FreeMonoidalCategory.instGroupoidFreeMonoidalCategory","className":"CategoryTheory.Groupoid"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Free.Basic","Mathlib.CategoryTheory.Groupoid","Mathlib.CategoryTheory.DiscreteCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L369-L371","name":"CategoryTheory.FreeMonoidalCategory.instGroupoidFreeMonoidalCategory","line":369,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instGroupoidFreeMonoidalCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instGroupoidFreeMonoidalCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">instGroupoidFreeMonoidalCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L353-L364","name":"CategoryTheory.FreeMonoidalCategory.inverseAux","line":353,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inverseAux","doc":"Auxiliary construction for showing that the free monoidal category is a groupoid. Do not use\nthis, use `IsIso.inv` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inverseAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inverseAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">CategoryTheory.FreeMonoidalCategory.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">CategoryTheory.FreeMonoidalCategory.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L337-L342","name":"CategoryTheory.FreeMonoidalCategory.subsingleton_hom","line":337,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.subsingleton_hom","doc":"The monoidal coherence theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.subsingleton_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">subsingleton_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.IsThin\">Quiver.IsThin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L322-L331","name":"CategoryTheory.FreeMonoidalCategory.fullNormalizeIso","line":322,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalizeIso","doc":"The isomorphism between an object and its normal form is natural. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalizeIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">fullNormalizeIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize\">CategoryTheory.FreeMonoidalCategory.fullNormalize</a> <span class=\"fn\">C</span></span>)</span>\n    <span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L313-L318","name":"CategoryTheory.FreeMonoidalCategory.normalizeIso","line":313,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIso","doc":"The isomorphism between `n ⊗ X` and `normalize X n` is natural (in both `X` and `n`, but\nnaturality in `n` is trivial and was \"proved\" in `normalizeIsoAux`). This is the real heart\nof our proof of the coherence theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">CategoryTheory.FreeMonoidalCategory.tensorFunc</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">CategoryTheory.FreeMonoidalCategory.normalize'</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L285-L305","name":"CategoryTheory.FreeMonoidalCategory.normalize_naturality","line":285,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategory.whiskerLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">CategoryTheory.FreeMonoidalCategory.inclusionObj</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">Y</span> <span class=\"fn\">n</span></span>)</span>.hom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span>)</span>.hom</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L271-L283","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_congr","line":271,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_congr\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">Y</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L262-L262","name":"CategoryTheory.FreeMonoidalCategory.discrete_functor_map_eq_id","line":262,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.discrete_functor_map_eq_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.discrete_functor_map_eq_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">discrete_functor_map_eq_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">f</span></span>)</span>.map</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L256-L257","name":"CategoryTheory.FreeMonoidalCategory.discrete_functor_obj_eq_as","line":256,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.discrete_functor_obj_eq_as","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.discrete_functor_obj_eq_as\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">discrete_functor_obj_eq_as</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u, u}</a>    <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">f</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">X</span>.as</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L240-L247","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoAux","line":240,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux","doc":"Auxiliary definition for `normalizeIso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">CategoryTheory.FreeMonoidalCategory.tensorFunc</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">CategoryTheory.FreeMonoidalCategory.normalize'</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L234-L235","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor","line":234,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_unitor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\">𝟙_ <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategory.rightUnitor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.as</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L227-L230","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor","line":227,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_tensor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategory.associator</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.as</span> }</span></span>)</span> <span class=\"fn\">X</span>\n        <span class=\"fn\">Y</span></span>)</span>.symm</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a>     <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory.whiskerRightIso\">CategoryTheory.MonoidalCategory.whiskerRightIso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">Y</span>\n        <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">n</span>.as</span></span> }</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L216-L224","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">n</span>.as</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L209-L214","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'","line":209,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'","doc":"Almost non-definitionally equall to `normalizeIsoApp`, but has a better definitional property\nin the proof of `normalize_naturality`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">CategoryTheory.FreeMonoidalCategory.inclusionObj</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">CategoryTheory.FreeMonoidalCategory.inclusionObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L198-L203","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp","line":198,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp","doc":"Auxiliary definition for `normalizeIso`. Here we construct the isomorphism between\n`n ⊗ X` and `normalize X n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">CategoryTheory.FreeMonoidalCategory.tensorFunc</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">CategoryTheory.FreeMonoidalCategory.normalize'</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.obj</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L184-L191","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map","line":184,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc_obj_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Z : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n' : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">CategoryTheory.FreeMonoidalCategory.tensorFunc</a> <span class=\"fn\">C</span></span>)</span>.obj</span> <span class=\"fn\">Z</span></span>)</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategory.whiskerRight</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L180-L181","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app","line":180,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc_map_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">CategoryTheory.FreeMonoidalCategory.tensorFunc</a> <span class=\"fn\">C</span></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span>.app</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategory.whiskerLeft</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.obj</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.as</span> }</span></span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L175-L177","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc","line":175,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc","doc":"Given an object `X` of the free monoidal category and an object `n` in normal form, taking\nthe tensor product `n ⊗ X` in the free monoidal category is functorial in both `X` and `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L167-L169","name":"CategoryTheory.FreeMonoidalCategory.fullNormalize","line":167,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize","doc":"The normalization functor for the free monoidal category over `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">fullNormalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L162-L163","name":"CategoryTheory.FreeMonoidalCategory.normalize'","line":162,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'","doc":"A variant of the normalization functor where we consider the result as an object in the free\nmonoidal category (rather than an object of the discrete subcategory of objects in normal\nform). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L153-L155","name":"CategoryTheory.FreeMonoidalCategory.normalize","line":153,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize","doc":"Our normalization procedure works by first defining a functor `F C ⥤ (N C ⥤ N C)` (which turns\nout to be very easy), and then obtain a functor `F C ⥤ N C` by plugging in the normal object\n`𝟙_ C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L125-L140","name":"CategoryTheory.FreeMonoidalCategory.normalizeMapAux","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeMapAux","doc":"Auxiliary definition for `normalize`. Here we prove that objects that are related by\nassociators and unitors map to the same normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeMapAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeMapAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">CategoryTheory.FreeMonoidalCategory.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> →\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\">CategoryTheory.FreeMonoidalCategory.normalizeObj'</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\">CategoryTheory.FreeMonoidalCategory.normalizeObj'</a> <span class=\"fn\">Y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L116-L116","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj'","line":116,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'","doc":"Auxiliary definition for `normalize`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L110-L112","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor","line":110,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_tensor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L105-L106","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor","line":105,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">CategoryTheory.FreeMonoidalCategory.normalizeObj</a> <span class=\"fn\">(<span class=\"fn\">𝟙_ <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L98-L101","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj","line":98,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj","doc":"Auxiliary definition for `normalize`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span> →\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L91-L95","name":"CategoryTheory.FreeMonoidalCategory.inclusion_map","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L86-L88","name":"CategoryTheory.FreeMonoidalCategory.inclusion_obj","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeMonoidalCategory.inclusion</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">CategoryTheory.FreeMonoidalCategory.inclusionObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.as</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L81-L82","name":"CategoryTheory.FreeMonoidalCategory.inclusion","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion","doc":"The discrete subcategory of objects in normal form includes into the free monoidal category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L75-L77","name":"CategoryTheory.FreeMonoidalCategory.inclusionObj","line":75,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj","doc":"Auxiliary definition for `inclusion`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusionObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">CategoryTheory.FreeMonoidalCategory</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L71-L71","name":"CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompTypeDiscreteNormalMonoidalObjectToQuiverToCategoryStructInstForAllCategoryCompTypeDiscreteCategory","line":71,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompTypeDiscreteNormalMonoidalObjectToQuiverToCategoryStructInstForAllCategoryCompTypeDiscreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompTypeDiscreteNormalMonoidalObjectToQuiverToCategoryStructInstForAllCategoryCompTypeDiscreteCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">instSubsingletonHomCompTypeDiscreteNormalMonoidalObjectToQuiverToCategoryStructInstForAllCategoryCompTypeDiscreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a></span>)</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L59-L59","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor","line":59,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span>.<span class=\"name\">tensor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span> →\n  <span class=\"fn\"><span class=\"fn\">C</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L58-L58","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit","line":58,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span>.<span class=\"name\">unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L57-L59","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject","line":57,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject","doc":"We say an object in the free monoidal category is in normal form if it is of the form\n`(((𝟙_ C) ⊗ X₁) ⊗ X₂) ⊗ ⋯`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}