{"name":"Mathlib.CategoryTheory.MorphismProperty.Concrete","instances":[{"typeNames":["CategoryTheory.MorphismProperty.injective"],"name":"CategoryTheory.MorphismProperty.instIsMultiplicativeInjective","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["CategoryTheory.MorphismProperty.surjective"],"name":"CategoryTheory.MorphismProperty.instIsMultiplicativeSurjective","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["CategoryTheory.MorphismProperty.bijective"],"name":"CategoryTheory.MorphismProperty.instIsMultiplicativeBijective","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["CategoryTheory.MorphismProperty.injective"],"name":"CategoryTheory.MorphismProperty.injective_respectsIso","className":"CategoryTheory.MorphismProperty.RespectsIso"},{"typeNames":["CategoryTheory.MorphismProperty.surjective"],"name":"CategoryTheory.MorphismProperty.surjective_respectsIso","className":"CategoryTheory.MorphismProperty.RespectsIso"},{"typeNames":["CategoryTheory.MorphismProperty.bijective"],"name":"CategoryTheory.MorphismProperty.bijective_respectsIso","className":"CategoryTheory.MorphismProperty.RespectsIso"},{"typeNames":["_builtin_typeu"],"name":"CategoryTheory.instHasFunctorialSurjectiveInjectiveFactorizationType","className":"CategoryTheory.MorphismProperty.HasFunctorialFactorization"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Basic","Mathlib.CategoryTheory.MorphismProperty.Composition","Mathlib.CategoryTheory.MorphismProperty.Factorization"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L139-L141","name":"CategoryTheory.instHasFunctorialSurjectiveInjectiveFactorizationType","line":139,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.instHasFunctorialSurjectiveInjectiveFactorizationType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.instHasFunctorialSurjectiveInjectiveFactorizationType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasFunctorialSurjectiveInjectiveFactorizationType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.HasFunctorialSurjectiveInjectiveFactorization\">CategoryTheory.ConcreteCategory.HasFunctorialSurjectiveInjectiveFactorization</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L116-L137","name":"CategoryTheory.functorialSurjectiveInjectiveFactorizationData","line":116,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.functorialSurjectiveInjectiveFactorizationData","doc":"In the category of types, any map can be functorially factored as a surjective\nmap followed by an injective map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.functorialSurjectiveInjectiveFactorizationData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">functorialSurjectiveInjectiveFactorizationData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.FunctorialSurjectiveInjectiveFactorizationData\">CategoryTheory.ConcreteCategory.FunctorialSurjectiveInjectiveFactorizationData</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L107-L108","name":"CategoryTheory.ConcreteCategory.FunctorialSurjectiveInjectiveFactorizationData","line":107,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.FunctorialSurjectiveInjectiveFactorizationData","doc":"The structure containing the data of a functorial factorization of morphisms as\na surjective map followed by an injective map in a concrete category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.FunctorialSurjectiveInjectiveFactorizationData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ConcreteCategory</span>.<span class=\"name\">FunctorialSurjectiveInjectiveFactorizationData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L102-L103","name":"CategoryTheory.ConcreteCategory.HasFunctorialSurjectiveInjectiveFactorization","line":102,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.HasFunctorialSurjectiveInjectiveFactorization","doc":"The property that any morphism in a concrete category can be functorially\nfactored as a surjective map followed by an injective map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.HasFunctorialSurjectiveInjectiveFactorization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ConcreteCategory</span>.<span class=\"name\">HasFunctorialSurjectiveInjectiveFactorization</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L97-L98","name":"CategoryTheory.ConcreteCategory.HasSurjectiveInjectiveFactorization","line":97,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.HasSurjectiveInjectiveFactorization","doc":"The property that any morphism in a concrete category can be factored as a surjective\nmap followed by an injective map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.ConcreteCategory.HasSurjectiveInjectiveFactorization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ConcreteCategory</span>.<span class=\"name\">HasSurjectiveInjectiveFactorization</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L87-L89","name":"CategoryTheory.MorphismProperty.bijective_respectsIso","line":87,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective_respectsIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">bijective_respectsIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective\">CategoryTheory.MorphismProperty.bijective</a> <span class=\"fn\">C</span></span>)</span>.RespectsIso</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L83-L85","name":"CategoryTheory.MorphismProperty.surjective_respectsIso","line":83,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective_respectsIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">surjective_respectsIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective\">CategoryTheory.MorphismProperty.surjective</a> <span class=\"fn\">C</span></span>)</span>.RespectsIso</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L79-L81","name":"CategoryTheory.MorphismProperty.injective_respectsIso","line":79,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective_respectsIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">injective_respectsIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective\">CategoryTheory.MorphismProperty.injective</a> <span class=\"fn\">C</span></span>)</span>.RespectsIso</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L69-L77","name":"CategoryTheory.MorphismProperty.instIsMultiplicativeBijective","line":69,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeBijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeBijective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instIsMultiplicativeBijective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective\">CategoryTheory.MorphismProperty.bijective</a> <span class=\"fn\">C</span></span>)</span>.IsMultiplicative</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L59-L67","name":"CategoryTheory.MorphismProperty.instIsMultiplicativeSurjective","line":59,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeSurjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeSurjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instIsMultiplicativeSurjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective\">CategoryTheory.MorphismProperty.surjective</a> <span class=\"fn\">C</span></span>)</span>.IsMultiplicative</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L49-L57","name":"CategoryTheory.MorphismProperty.instIsMultiplicativeInjective","line":49,"kind":"instance","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeInjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.instIsMultiplicativeInjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instIsMultiplicativeInjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective\">CategoryTheory.MorphismProperty.injective</a> <span class=\"fn\">C</span></span>)</span>.IsMultiplicative</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L45-L47","name":"CategoryTheory.MorphismProperty.bijective_eq_sup","line":45,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective_eq_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective_eq_sup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">bijective_eq_sup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective\">CategoryTheory.MorphismProperty.bijective</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective\">CategoryTheory.MorphismProperty.injective</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective\">CategoryTheory.MorphismProperty.surjective</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L43-L43","name":"CategoryTheory.MorphismProperty.bijective","line":43,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective","doc":"Bijectiveness (in a concrete category) as a `MorphismProperty` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.bijective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">bijective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L40-L40","name":"CategoryTheory.MorphismProperty.surjective","line":40,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective","doc":"Surjectiveness (in a concrete category) as a `MorphismProperty` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/CategoryTheory/MorphismProperty/Concrete.lean#L37-L37","name":"CategoryTheory.MorphismProperty.injective","line":37,"kind":"def","docLink":"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective","doc":"Injectiveness (in a concrete category) as a `MorphismProperty` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/MorphismProperty/Concrete.html#CategoryTheory.MorphismProperty.injective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">C</span></span></div></div>"}]}