{"name":"Mathlib.CategoryTheory.Sites.Coherent.Equivalence","instances":[{"typeNames":["CategoryTheory.SmallModel"],"name":"CategoryTheory.Equivalence.instPrecoherentSmallModelSmallCategorySmallModel","className":"CategoryTheory.Precoherent"},{"typeNames":["CategoryTheory.coherentTopology","CategoryTheory.coherentTopology"],"name":"CategoryTheory.Equivalence.instTransportsGrothendieckTopologyCoherentTopologyCoherentTopologyPrecoherent","className":"CategoryTheory.Equivalence.TransportsGrothendieckTopology"},{"typeNames":["CategoryTheory.SmallModel"],"name":"CategoryTheory.Equivalence.instPreregularSmallModelSmallCategorySmallModel","className":"CategoryTheory.Preregular"},{"typeNames":["CategoryTheory.regularTopology","CategoryTheory.regularTopology"],"name":"CategoryTheory.Equivalence.instTransportsGrothendieckTopologyRegularTopologyRegularTopologyPreregular","className":"CategoryTheory.Equivalence.TransportsGrothendieckTopology"}],"imports":["Init","Mathlib.CategoryTheory.Sites.Coherent.CoherentTopology","Mathlib.CategoryTheory.Sites.Coherent.RegularTopology","Mathlib.CategoryTheory.EffectiveEpi.Comp","Mathlib.CategoryTheory.EffectiveEpi.Preserves","Mathlib.CategoryTheory.Sites.Equivalence"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L181-L183","name":"CategoryTheory.Equivalence.preregular_isSheaf_iff_of_essentiallySmall","line":181,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_isSheaf_iff_of_essentiallySmall","doc":"The regular sheaf condition on an essentially small site can be checked after precomposing with\nthe equivalence with a small category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_isSheaf_iff_of_essentiallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">preregular_isSheaf_iff_of_essentiallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u_4, u_5, u_1}</a>           <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.SmallModel\">CategoryTheory.SmallModel.{u_4, u_5, u_1}</a>           <span class=\"fn\">C</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.equivSmallModel\">CategoryTheory.equivSmallModel</a> <span class=\"fn\">C</span></span>)</span>.inverse</span>.op</span> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L170-L175","name":"CategoryTheory.Equivalence.preregular_isSheaf_iff","line":170,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_isSheaf_iff","doc":"The regular sheaf condition can be checked after precomposing with the equivalence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_isSheaf_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">preregular_isSheaf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.op</span> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L162-L163","name":"CategoryTheory.Equivalence.sheafCongrPreregular","line":162,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular","doc":"Equivalent preregular categories give equivalent regular toposes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_functor_map_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_map_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_map_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_functor_map_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X_1</span>.unop</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_map","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_functor_obj_val_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.op</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_inverse_map_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_map_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_map_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_inverse_map_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.map</span> <span class=\"fn\">f</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X_1</span>.unop</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_hom_app_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_hom_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_hom_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_unitIso_hom_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.unitIso</span>.hom</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.unitIso</span>.inv</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_obj","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_functor_obj_val_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_functor_obj_val_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_map","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_inverse_obj_val_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.op</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_hom_app_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_hom_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_hom_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_counitIso_hom_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.counitIso</span>.hom</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.counitIso</span>.inv</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_inv_app_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_inv_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_unitIso_inv_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_unitIso_inv_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.unitIso</span>.inv</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.unitIso</span>.hom</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_inv_app_val_app","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_inv_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_counitIso_inv_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_counitIso_inv_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.counitIso</span>.inv</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.counitIso</span>.hom</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L161-L161","name":"CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_obj","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular_inverse_obj_val_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPreregular_inverse_obj_val_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPreregular\">CategoryTheory.Equivalence.sheafCongrPreregular</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L152-L154","name":"CategoryTheory.Equivalence.instTransportsGrothendieckTopologyRegularTopologyRegularTopologyPreregular","line":152,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instTransportsGrothendieckTopologyRegularTopologyRegularTopologyPreregular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instTransportsGrothendieckTopologyRegularTopologyRegularTopologyPreregular\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">instTransportsGrothendieckTopologyRegularTopologyRegularTopologyPreregular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Equivalence.html#CategoryTheory.Equivalence.TransportsGrothendieckTopology\">CategoryTheory.Equivalence.TransportsGrothendieckTopology</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L133-L150","name":"CategoryTheory.Equivalence.preregular_eq","line":133,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_eq","doc":"Transferring the regular topology along an equivalence of categories gives the regular topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">preregular_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.LocallyCoverDense.inducedTopology\">CategoryTheory.LocallyCoverDense.inducedTopology</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">CategoryTheory.regularTopology</a> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L127-L128","name":"CategoryTheory.Equivalence.instPreregularSmallModelSmallCategorySmallModel","line":127,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instPreregularSmallModelSmallCategorySmallModel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instPreregularSmallModelSmallCategorySmallModel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">instPreregularSmallModelSmallCategorySmallModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u_4, u_3, u_1}</a>           <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.SmallModel\">CategoryTheory.SmallModel.{u_4, u_3, u_1}</a>           <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L120-L125","name":"CategoryTheory.Equivalence.preregular","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular","doc":"`Preregular` is preserved by equivalence of categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.preregular\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">preregular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L109-L111","name":"CategoryTheory.Equivalence.precoherent_isSheaf_iff_of_essentiallySmall","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_isSheaf_iff_of_essentiallySmall","doc":"The coherent sheaf condition on an essentially small site can be checked after precomposing with\nthe equivalence with a small category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_isSheaf_iff_of_essentiallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">precoherent_isSheaf_iff_of_essentiallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u_4, u_5, u_1}</a>           <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.SmallModel\">CategoryTheory.SmallModel.{u_4, u_5, u_1}</a>           <span class=\"fn\">C</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.equivSmallModel\">CategoryTheory.equivSmallModel</a> <span class=\"fn\">C</span></span>)</span>.inverse</span>.op</span> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L98-L103","name":"CategoryTheory.Equivalence.precoherent_isSheaf_iff","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_isSheaf_iff","doc":"The coherent sheaf condition can be checked after precomposing with the equivalence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_isSheaf_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">precoherent_isSheaf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.op</span> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L90-L91","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent","doc":"Equivalent precoherent categories give equivalent coherent toposes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_obj","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_inverse_obj_val_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_map_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_map_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_map_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_functor_map_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.map</span> <span class=\"fn\">f</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X_1</span>.unop</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_hom_app_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_hom_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_hom_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_counitIso_hom_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.counitIso</span>.hom</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.counitIso</span>.inv</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_inv_app_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_inv_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_counitIso_inv_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_counitIso_inv_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.counitIso</span>.inv</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.counitIso</span>.hom</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_map","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_functor_obj_val_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.op</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_map","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_obj_val_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_inverse_obj_val_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.map</span> <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span>.op</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_inv_app_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_inv_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_inv_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_unitIso_inv_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.unitIso</span>.inv</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.unitIso</span>.hom</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_map_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_map_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_inverse_map_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_inverse_map_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">A</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">X_1</span> : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.inverse</span>.map</span> <span class=\"fn\">f</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.val</span>.app</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.functor</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X_1</span>.unop</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_hom_app_val_app","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_hom_app_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_unitIso_hom_app_val_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_unitIso_hom_app_val_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.unitIso</span>.hom</span>.app</span> <span class=\"fn\">X✝</span></span>)</span>.val</span>.app</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.val</span>.map</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.unitIso</span>.inv</span>.app</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L89-L89","name":"CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_obj","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent_functor_obj_val_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">sheafCongrPrecoherent_functor_obj_val_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_5, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_6, u_3}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.sheafCongrPrecoherent\">CategoryTheory.Equivalence.sheafCongrPrecoherent</a> <span class=\"fn\">e</span> <span class=\"fn\">A</span></span>)</span>.functor</span>.obj</span> <span class=\"fn\">F</span></span>)</span>.val</span>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.val</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.inverse</span>.obj</span> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L80-L82","name":"CategoryTheory.Equivalence.instTransportsGrothendieckTopologyCoherentTopologyCoherentTopologyPrecoherent","line":80,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instTransportsGrothendieckTopologyCoherentTopologyCoherentTopologyPrecoherent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instTransportsGrothendieckTopologyCoherentTopologyCoherentTopologyPrecoherent\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">instTransportsGrothendieckTopologyCoherentTopologyCoherentTopologyPrecoherent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Equivalence.html#CategoryTheory.Equivalence.TransportsGrothendieckTopology\">CategoryTheory.Equivalence.TransportsGrothendieckTopology</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">C</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L53-L78","name":"CategoryTheory.Equivalence.precoherent_eq","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_eq","doc":"Transferring the coherent topology along an equivalence of categories gives the coherent topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">precoherent_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.LocallyCoverDense.inducedTopology\">CategoryTheory.LocallyCoverDense.inducedTopology</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L47-L48","name":"CategoryTheory.Equivalence.instPrecoherentSmallModelSmallCategorySmallModel","line":47,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instPrecoherentSmallModelSmallCategorySmallModel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.instPrecoherentSmallModelSmallCategorySmallModel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">instPrecoherentSmallModelSmallCategorySmallModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u_4, u_3, u_1}</a>           <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.SmallModel\">CategoryTheory.SmallModel.{u_4, u_3, u_1}</a>           <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/CategoryTheory/Sites/Coherent/Equivalence.lean#L35-L45","name":"CategoryTheory.Equivalence.precoherent","line":35,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent","doc":"`Precoherent` is preserved by equivalence of categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/Equivalence.html#CategoryTheory.Equivalence.precoherent\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equivalence</span>.<span class=\"name\">precoherent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a>      <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <span class=\"fn\">D</span></span></div></div>"}]}