{"name":"Mathlib.Computability.PartrecCode","instances":[{"typeNames":["Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instInhabited","className":"Inhabited"},{"typeNames":["Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instDenumerable","className":"Denumerable"},{"typeNames":["PFun","Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instMembershipPFun","className":"Membership"}],"imports":["Init","Mathlib.Computability.Partrec","Mathlib.Data.Option.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L1013-L1016","name":"Nat.Partrec.Code.fixed_point₂","line":1013,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point₂\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">fixed_point₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Partrec₂\">Partrec₂</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L996-L1011","name":"Nat.Partrec.Code.fixed_point","line":996,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point","doc":"Roger's fixed-point theorem: Any total, computable `f` has a fixed point: That is, under the\ninterpretation given by `Nat.Partrec.Code.eval`, there is a code `c` such that `c` and `f c` have\nthe same evaluation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">fixed_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span>.eval</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.eval</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L987-L990","name":"Nat.Partrec.Code.eval_part","line":987,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_part","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_part\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_part</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Partrec₂\">Partrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">Nat.Partrec.Code.eval</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L982-L985","name":"Nat.Partrec.Code.eval_eq_rfindOpt","line":982,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_eq_rfindOpt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_eq_rfindOpt\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_eq_rfindOpt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.rfindOpt\">Nat.rfindOpt</a> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L915-L974","name":"Nat.Partrec.Code.evaln_prim","line":915,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_prim","doc":"The `Nat.Partrec.Code.evaln` function is primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.1</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.1</span>.2</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L688-L754","name":"Nat.Partrec.Code.evaln_complete","line":688,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_complete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_complete\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L650-L686","name":"Nat.Partrec.Code.evaln_sound","line":650,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_sound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_sound\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_sound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L611-L648","name":"Nat.Partrec.Code.evaln_mono","line":611,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k₁</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k₂</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L604-L609","name":"Nat.Partrec.Code.evaln_bound","line":604,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_bound\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">Nat.Partrec.Code.evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span> → <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L568-L602","name":"Nat.Partrec.Code.evaln","line":568,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln","doc":"A modified evaluation for the code which returns an `Option ℕ` instead of a `Part ℕ`. To avoid\nundecidability, `evaln` takes a parameter `k` and fails if it encounters a number ≥ k in the course\nof its execution. Other than this, the semantics are the same as in `Nat.Partrec.Code.eval`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L532-L561","name":"Nat.Partrec.Code.exists_code","line":532,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.exists_code","doc":"A function is partial recursive if and only if there is a code implementing it. Therefore,\n`eval` is a **universal partial recursive function**. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.exists_code\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">exists_code</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Nat.Partrec</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L526-L528","name":"Nat.Partrec.Code.smn","line":526,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.smn","doc":"The $S_n^m$ theorem: There is a computable function, namely `Nat.Partrec.Code.curry`, that takes a\nprogram and a ℕ `n`, and returns a new program using `n` as the first argument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.smn\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">smn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span>)</span>.eval</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L516-L520","name":"Nat.Partrec.Code.curry_inj","line":516,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₁ : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₂ : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₁</span>.curry</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₂</span>.curry</span> <span class=\"fn\">n₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L512-L514","name":"Nat.Partrec.Code.curry_prim","line":512,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\">Nat.Partrec.Code.curry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L506-L510","name":"Nat.Partrec.Code.const_prim","line":506,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Nat.Partrec.Code.const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L504-L504","name":"Nat.Partrec.Code.eval_curry","line":504,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_curry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_curry\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_curry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.curry</span> <span class=\"fn\">n</span></span>)</span>.eval</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L501-L501","name":"Nat.Partrec.Code.eval_id","line":501,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_id\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id\">Nat.Partrec.Code.id</a>.eval</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L496-L498","name":"Nat.Partrec.Code.eval_const","line":496,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_const\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Nat.Partrec.Code.const</a> <span class=\"fn\">n</span></span>)</span>.eval</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L492-L493","name":"Nat.Partrec.Code.instMembershipPFun","line":492,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instMembershipPFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instMembershipPFun\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instMembershipPFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L486-L490","name":"Nat.Partrec.Code.eval_prec_succ","line":486,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_succ","doc":"Helper lemma for the evaluation of `prec` in the recursive case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_prec_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cg : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.prec</span> <span class=\"fn\">cg</span></span>)</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\"><span class=\"fn\">k</span>.succ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">do\n  let <span class=\"fn\">ih</span> ← <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.prec</span> <span class=\"fn\">cg</span></span>)</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span></span>)</span></span>\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cg</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">k</span> <span class=\"fn\">ih</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L480-L483","name":"Nat.Partrec.Code.eval_prec_zero","line":480,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_zero","doc":"Helper lemma for the evaluation of `prec` in the base case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_prec_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cg : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.prec</span> <span class=\"fn\">cg</span></span>)</span>.eval</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.eval</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L462-L476","name":"Nat.Partrec.Code.eval","line":462,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval","doc":"The interpretation of a `Nat.Partrec.Code` as a partial function.\n* `Nat.Partrec.Code.zero`: The constant zero function.\n* `Nat.Partrec.Code.succ`: The successor function.\n* `Nat.Partrec.Code.left`: Left unpairing of a pair of ℕ (encoded by `Nat.pair`)\n* `Nat.Partrec.Code.right`: Right unpairing of a pair of ℕ (encoded by `Nat.pair`)\n* `Nat.Partrec.Code.pair`: Pairs the outputs of argument codes using `Nat.pair`.\n* `Nat.Partrec.Code.comp`: Composition of two argument codes.\n* `Nat.Partrec.Code.prec`: Primitive recursion. Given an argument of the form `Nat.pair a n`:\n  * If `n = 0`, returns `eval cf a`.\n  * If `n = succ k`, returns `eval cg (pair a (pair k (eval (prec cf cg) (pair a k))))`\n* `Nat.Partrec.Code.rfind'`: Minimization. For `f` an argument of the form `Nat.pair a m`,\n  `rfind' f m` returns the least `a` such that `f a m = 0`, if one exists and `f b m` terminates\n  for `b < a`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L363-L444","name":"Nat.Partrec.Code.rec_computable","line":363,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_computable","doc":"Recursion on `Nat.Partrec.Code` is computable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_computable\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_computable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pr : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">pr</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{co : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hco : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">co</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pc : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">pc</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{rf : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">rf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">PR</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">CO</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">PC</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">RF</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">hf</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Nat.Partrec.Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">PR</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CO</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">PC</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">RF</span> <span class=\"fn\">a</span></span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L336-L352","name":"Nat.Partrec.Code.rec_prim","line":336,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim","doc":"Recursion on `Nat.Partrec.Code` is primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_prim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pr : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{co : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hco : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pc : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{rf : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Nat.Partrec.Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\">a</span></span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L254-L333","name":"Nat.Partrec.Code.rec_prim'","line":254,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_prim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pr : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">pr</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{co : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hco : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">co</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pc : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hpc : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">pc</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{rf : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hrf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">rf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">PR</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">CO</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">PC</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">cg</span>, <span class=\"fn\">hf</span>, <span class=\"fn\">hg</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">RF</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) (<span class=\"fn\">hf</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">cf</span>, <span class=\"fn\">hf</span>)</span></span></span>;\n<span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Nat.Partrec.Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">PR</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CO</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">PC</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">RF</span> <span class=\"fn\">a</span></span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L246-L252","name":"Nat.Partrec.Code.rfind_prim","line":246,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rfind_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'\">Nat.Partrec.Code.rfind'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L236-L244","name":"Nat.Partrec.Code.prec_prim","line":236,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">prec_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">Nat.Partrec.Code.prec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L226-L234","name":"Nat.Partrec.Code.comp_prim","line":226,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">comp_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\">Nat.Partrec.Code.comp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L216-L224","name":"Nat.Partrec.Code.pair_prim","line":216,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">pair_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\">Nat.Partrec.Code.pair</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L200-L206","name":"Nat.Partrec.Code.encode_lt_rfind'","line":200,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_rfind'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\"><span class=\"fn\">cf</span>.rfind'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L195-L198","name":"Nat.Partrec.Code.encode_lt_prec","line":195,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_prec\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_prec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cg : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.prec</span> <span class=\"fn\">cg</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.prec</span> <span class=\"fn\">cg</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L190-L193","name":"Nat.Partrec.Code.encode_lt_comp","line":190,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_comp\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cg : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.comp</span> <span class=\"fn\">cg</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.comp</span> <span class=\"fn\">cg</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L182-L188","name":"Nat.Partrec.Code.encode_lt_pair","line":182,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_pair\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_pair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cf : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cg : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.pair</span> <span class=\"fn\">cg</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.pair</span> <span class=\"fn\">cg</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L179-L180","name":"Nat.Partrec.Code.ofNatCode_eq","line":179,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">ofNatCode_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat\">Denumerable.ofNat</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode\">Nat.Partrec.Code.ofNatCode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L176-L177","name":"Nat.Partrec.Code.encodeCode_eq","line":176,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encodeCode_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Encodable.encode</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode\">Nat.Partrec.Code.encodeCode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L170-L174","name":"Nat.Partrec.Code.instDenumerable","line":170,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instDenumerable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instDenumerable\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instDenumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Denumerable.html#Denumerable\">Denumerable</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L127-L145","name":"Nat.Partrec.Code.ofNatCode","line":127,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode","doc":"A decoder for `Nat.Partrec.Code.encodeCode`, taking any ℕ to the `Nat.Partrec.Code` it represents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">ofNatCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L114-L122","name":"Nat.Partrec.Code.encodeCode","line":114,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode","doc":"An encoding of a `Nat.Partrec.Code` as a ℕ. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encodeCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L109-L110","name":"Nat.Partrec.Code.curry","line":109,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry","doc":"Given a code `c` taking a pair as input, returns a code using `n` as the first argument to `c`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L104-L105","name":"Nat.Partrec.Code.id","line":104,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id","doc":"A code for the identity function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L96-L101","name":"Nat.Partrec.Code.const_inj","line":96,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Nat.Partrec.Code.const</a> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Nat.Partrec.Code.const</a> <span class=\"fn\">n₂</span></span></span> → <span class=\"fn\"><span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L92-L94","name":"Nat.Partrec.Code.const","line":92,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const","doc":"Returns a code for the constant function outputting a particular natural. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L88-L89","name":"Nat.Partrec.Code.instInhabited","line":88,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instInhabited\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L80-L80","name":"Nat.Partrec.Code.rfind'","line":80,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rfind'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L79-L79","name":"Nat.Partrec.Code.prec","line":79,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">prec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L78-L78","name":"Nat.Partrec.Code.comp","line":78,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L77-L77","name":"Nat.Partrec.Code.pair","line":77,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">pair</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L76-L76","name":"Nat.Partrec.Code.right","line":76,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.right\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">right</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L75-L75","name":"Nat.Partrec.Code.left","line":75,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.left\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">left</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L74-L74","name":"Nat.Partrec.Code.succ","line":74,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.succ\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L73-L73","name":"Nat.Partrec.Code.zero","line":73,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.zero\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Nat.Partrec.Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L72-L80","name":"Nat.Partrec.Code","line":72,"kind":"inductive","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code","doc":"Code for partial recursive functions from ℕ to ℕ.\nSee `Nat.Partrec.Code.eval` for the interpretation of these constructors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Computability/PartrecCode.lean#L47-L67","name":"Nat.Partrec.rfind'","line":47,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">rfind'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Nat.Partrec</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Nat.Partrec</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Nat.unpaired\">Nat.unpaired</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> <span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.map\">Part.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.rfind\">Nat.rfind</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span></span></span></span>)</span></span></span></span>)</span></span></div></div>"}]}