{"name":"Mathlib.Condensed.Equivalence","instances":[{"typeNames":["Stonean.toProfinite"],"name":"Condensed.StoneanProfinite.instPreservesEffectiveEpisStoneanProfiniteToProfinite","className":"CategoryTheory.Functor.PreservesEffectiveEpis"},{"typeNames":["Stonean.toProfinite"],"name":"Condensed.StoneanProfinite.instReflectsEffectiveEpisStoneanProfiniteToProfinite","className":"CategoryTheory.Functor.ReflectsEffectiveEpis"},{"typeNames":["Stonean.toProfinite"],"name":"Condensed.StoneanProfinite.instEffectivelyEnoughStoneanProfiniteToProfinite","className":"CategoryTheory.Functor.EffectivelyEnough"}],"imports":["Init","Mathlib.Topology.Category.Profinite.EffectiveEpi","Mathlib.Topology.Category.Stonean.EffectiveEpi","Mathlib.Condensed.Basic","Mathlib.CategoryTheory.Sites.Coherent.SheafComparison"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L104-L108","name":"Condensed.isSheafStonean","line":104,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.isSheafStonean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.isSheafStonean\"><span class=\"name\">Condensed</span>.<span class=\"name\">isSheafStonean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">CategoryTheory.Limits.HasLimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow.html#CategoryTheory.StructuredArrow\">CategoryTheory.StructuredArrow</a> <span class=\"fn\">Y</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a>.op</span></span>)</span> <span class=\"fn\">A</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a>.op</span>.comp</span> <span class=\"fn\"><span class=\"fn\">X</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L98-L102","name":"Condensed.isSheafProfinite","line":98,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.isSheafProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.isSheafProfinite\"><span class=\"name\">Condensed</span>.<span class=\"name\">isSheafProfinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">CategoryTheory.Limits.HasLimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow.html#CategoryTheory.StructuredArrow\">CategoryTheory.StructuredArrow</a> <span class=\"fn\">Y</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a>.op</span></span>)</span> <span class=\"fn\">A</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">CategoryTheory.Presheaf.IsSheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a>.op</span>.comp</span> <span class=\"fn\"><span class=\"fn\">X</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L89-L92","name":"Condensed.ProfiniteCompHaus.equivalence","line":89,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.ProfiniteCompHaus.equivalence","doc":"The equivalence from coherent sheaves on `Profinite` to coherent sheaves on `CompHaus`\n(i.e. condensed sets). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.ProfiniteCompHaus.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">ProfiniteCompHaus</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">CategoryTheory.Limits.HasLimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow.html#CategoryTheory.StructuredArrow\">CategoryTheory.StructuredArrow</a> <span class=\"fn\">X</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a>.op</span></span>)</span> <span class=\"fn\">A</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L77-L80","name":"Condensed.StoneanProfinite.equivalence","line":77,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.equivalence","doc":"The equivalence from coherent sheaves on `Stonean` to coherent sheaves on `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">CategoryTheory.Limits.HasLimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow.html#CategoryTheory.StructuredArrow\">CategoryTheory.StructuredArrow</a> <span class=\"fn\">X</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>.op</span></span>)</span> <span class=\"fn\">A</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L72-L73","name":"Condensed.StoneanProfinite.instEffectivelyEnoughStoneanProfiniteToProfinite","line":72,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instEffectivelyEnoughStoneanProfiniteToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instEffectivelyEnoughStoneanProfiniteToProfinite\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">instEffectivelyEnoughStoneanProfiniteToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>.EffectivelyEnough</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L66-L70","name":"Condensed.StoneanProfinite.stoneanToProfiniteEffectivePresentation","line":66,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.stoneanToProfiniteEffectivePresentation","doc":"An effective presentation of an `X : Profinite` with respect to the inclusion functor from `Stonean`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.stoneanToProfiniteEffectivePresentation\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">stoneanToProfiniteEffectivePresentation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>.EffectivePresentation</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L59-L61","name":"Condensed.StoneanProfinite.instReflectsEffectiveEpisStoneanProfiniteToProfinite","line":59,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instReflectsEffectiveEpisStoneanProfiniteToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instReflectsEffectiveEpisStoneanProfiniteToProfinite\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">instReflectsEffectiveEpisStoneanProfiniteToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>.ReflectsEffectiveEpis</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L55-L57","name":"Condensed.StoneanProfinite.instPreservesEffectiveEpisStoneanProfiniteToProfinite","line":55,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instPreservesEffectiveEpisStoneanProfiniteToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instPreservesEffectiveEpisStoneanProfiniteToProfinite\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">instPreservesEffectiveEpisStoneanProfiniteToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>.PreservesEffectiveEpis</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Condensed/Equivalence.lean#L46-L49","name":"Condensed.StoneanCompHaus.equivalence","line":46,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.equivalence","doc":"The equivalence from coherent sheaves on `Stonean` to coherent sheaves on `CompHaus`\n(i.e. condensed sets). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">CategoryTheory.Limits.HasLimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow.html#CategoryTheory.StructuredArrow\">CategoryTheory.StructuredArrow</a> <span class=\"fn\">X</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a>.op</span></span>)</span> <span class=\"fn\">A</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span></span></div></div>"}]}