{"name":"Mathlib.Data.DList.Basic","instances":[],"imports":["Init","Mathlib.Data.DList.Defs","Mathlib.Tactic.TypeStar"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Basic.lean#L35-L36","name":"Batteries.DList_lazy","line":35,"kind":"theorem","docLink":"./Mathlib/Data/DList/Basic.html#Batteries.DList_lazy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Basic.html#Batteries.DList_lazy\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList_lazy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.lazy_ofList\">Batteries.DList.lazy_ofList</a> <span class=\"fn\">{ <span class=\"fn\">fn</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">l</span></span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.ofList\">Batteries.DList.ofList</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Basic.lean#L31-L32","name":"Batteries.DList_singleton","line":31,"kind":"theorem","docLink":"./Mathlib/Data/DList/Basic.html#Batteries.DList_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Basic.html#Batteries.DList_singleton\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.singleton\">Batteries.DList.singleton</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.lazy_ofList\">Batteries.DList.lazy_ofList</a> <span class=\"fn\">{ <span class=\"fn\">fn</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">[<span class=\"fn\">a</span>]</span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Basic.lean#L26-L28","name":"Batteries.DList.join","line":26,"kind":"def","docLink":"./Mathlib/Data/DList/Basic.html#Batteries.DList.join","doc":"Concatenates a list of difference lists to form a single difference list. Similar to\n`List.join`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Basic.html#Batteries.DList.join\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span></span></div></div>"}]}