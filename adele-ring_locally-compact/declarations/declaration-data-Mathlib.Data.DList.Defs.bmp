{"name":"Mathlib.Data.DList.Defs","instances":[],"imports":["Init","Batteries.Data.DList","Mathlib.Tactic.Cases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L58-L59","name":"Batteries.DList.toList_push","line":58,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_push\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.push</span> <span class=\"fn\">x</span></span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.toList</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">[<span class=\"fn\">x</span>]</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L55-L56","name":"Batteries.DList.toList_cons","line":55,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_cons\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.cons\">Batteries.DList.cons</a> <span class=\"fn\">x</span> <span class=\"fn\">l</span></span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">l</span>.toList</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L51-L53","name":"Batteries.DList.toList_append","line":51,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_append\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l₁ : <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l₂ : <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span></span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.toList</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.toList</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L49-L49","name":"Batteries.DList.toList_singleton","line":49,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_singleton\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.singleton\">Batteries.DList.singleton</a> <span class=\"fn\">x</span></span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">x</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L47-L47","name":"Batteries.DList.toList_empty","line":47,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_empty\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Batteries.DList.empty</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L41-L45","name":"Batteries.DList.ofList_toList","line":41,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.ofList_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.ofList_toList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">ofList_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.ofList\">Batteries.DList.ofList</a> <span class=\"fn\"><span class=\"fn\">l</span>.toList</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L38-L39","name":"Batteries.DList.toList_ofList","line":38,"kind":"theorem","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_ofList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.toList_ofList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">toList_ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList.ofList\">Batteries.DList.ofList</a> <span class=\"fn\">l</span></span>)</span>.toList</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/DList/Defs.lean#L31-L32","name":"Batteries.DList.lazy_ofList","line":31,"kind":"def","docLink":"./Mathlib/Data/DList/Defs.html#Batteries.DList.lazy_ofList","doc":"Convert a lazily-evaluated `List` to a `DList` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Defs.html#Batteries.DList.lazy_ofList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">lazy_ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Core.html#Thunk\">Thunk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/DList.html#Batteries.DList\">Batteries.DList</a> <span class=\"fn\">α</span></span></div></div>"}]}