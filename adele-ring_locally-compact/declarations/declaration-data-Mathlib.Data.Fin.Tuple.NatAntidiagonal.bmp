{"name":"Mathlib.Data.Fin.Tuple.NatAntidiagonal","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Fin","Mathlib.Algebra.Group.Fin.Tuple","Mathlib.Data.Finset.NatAntidiagonal","Mathlib.Order.Fin.Tuple"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L239-L243","name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple","line":239,"kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple","doc":"The disjoint union of antidiagonal tuples `Σ n, antidiagonalTuple k n` is equivalent to the\n`k`-tuple `Fin k → ℕ`. This is such an equivalence, obtained by mapping `(n, x)` to `x`.\n\nThis is the tuple version of `Finset.sigmaAntidiagonalEquivProd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span> }</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L238-L238","name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply","line":238,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">Finset.Nat.sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.snd</span></span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L238-L238","name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe","line":238,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">Finset.Nat.sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span></span>)</span>.symm</span> <span class=\"fn\">x</span></span>)</span>.snd</span></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L238-L238","name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst","line":238,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_symm_apply_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">Finset.Nat.sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span></span>)</span>.symm</span> <span class=\"fn\">x</span></span>)</span>.fst</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L228-L230","name":"Finset.Nat.antidiagonalTuple_two","line":228,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_two\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin.html#piFinTwoEquiv\">piFinTwoEquiv</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span>)</span>.symm</span>.toEmbedding</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">Finset.antidiagonal</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L225-L226","name":"Finset.Nat.antidiagonalTuple_one","line":225,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_one\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">![<span class=\"fn\">n</span>]</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L221-L222","name":"Finset.Nat.antidiagonalTuple_zero_right","line":221,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L217-L219","name":"Finset.Nat.mem_antidiagonalTuple","line":217,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.mem_antidiagonalTuple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.mem_antidiagonalTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L214-L215","name":"Finset.Nat.antidiagonalTuple_zero_succ","line":214,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">n</span>.succ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L210-L211","name":"Finset.Nat.antidiagonalTuple_zero_zero","line":210,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">Finset.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">![]</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L206-L207","name":"Finset.Nat.antidiagonalTuple","line":206,"kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple","doc":"`Finset.Nat.antidiagonalTuple k n` is a finset of `k`-tuples summing to `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L194-L196","name":"Multiset.Nat.antidiagonalTuple_two","line":194,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_two\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\">![<span class=\"fn\"><span class=\"fn\">i</span>.1</span>, <span class=\"fn\"><span class=\"fn\">i</span>.2</span>]</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L191-L192","name":"Multiset.Nat.antidiagonalTuple_one","line":191,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_one\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">![<span class=\"fn\">n</span>]</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L187-L188","name":"Multiset.Nat.antidiagonalTuple_zero_right","line":187,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">0</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L184-L185","name":"Multiset.Nat.nodup_antidiagonalTuple","line":184,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonalTuple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">nodup_antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L180-L182","name":"Multiset.Nat.mem_antidiagonalTuple","line":180,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonalTuple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L177-L178","name":"Multiset.Nat.antidiagonalTuple_zero_succ","line":177,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">n</span>.succ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L173-L174","name":"Multiset.Nat.antidiagonalTuple_zero_zero","line":173,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">Multiset.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">![]</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L169-L170","name":"Multiset.Nat.antidiagonalTuple","line":169,"kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple","doc":"`Multiset.Nat.antidiagonalTuple k n` is a multiset of `k`-tuples summing to `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L138-L159","name":"List.Nat.antidiagonalTuple_pairwise_pi_lex","line":138,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_pairwise_pi_lex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_pairwise_pi_lex\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_pairwise_pi_lex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/PiLex.html#Pi.Lex\">Pi.Lex</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L131-L136","name":"List.Nat.antidiagonalTuple_two","line":131,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_two\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\">![<span class=\"fn\"><span class=\"fn\">i</span>.1</span>, <span class=\"fn\"><span class=\"fn\">i</span>.2</span>]</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/List/NatAntidiagonal.html#List.Nat.antidiagonal\">List.Nat.antidiagonal</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L121-L129","name":"List.Nat.antidiagonalTuple_one","line":121,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_one\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">![<span class=\"fn\">n</span>]</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L113-L118","name":"List.Nat.antidiagonalTuple_zero_right","line":113,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">0</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L88-L111","name":"List.Nat.nodup_antidiagonalTuple","line":88,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.nodup_antidiagonalTuple","doc":"The antidiagonal of `n` does not contain duplicate entries. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.nodup_antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">nodup_antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L74-L85","name":"List.Nat.mem_antidiagonalTuple","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.mem_antidiagonalTuple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.mem_antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L71-L72","name":"List.Nat.antidiagonalTuple_zero_succ","line":71,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L67-L68","name":"List.Nat.antidiagonalTuple_zero_zero","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">List.Nat.antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">![]</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L59-L64","name":"List.Nat.antidiagonalTuple","line":59,"kind":"def","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple","doc":"`List.antidiagonalTuple k n` is a list of all `k`-tuples which sum to `n`.\n\nThis list contains no duplicates (`List.Nat.nodup_antidiagonalTuple`), and is sorted\nlexicographically (`List.Nat.antidiagonalTuple_pairwise_pi_lex`), starting with `![0, ..., n]`\nand ending with `![n, ..., 0]`.\n\n```\n#eval antidiagonalTuple 3 2\n-- [![0, 0, 2], ![0, 1, 1], ![0, 2, 0], ![1, 0, 1], ![1, 1, 0], ![2, 0, 0]]\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span></span></div></div>"}]}