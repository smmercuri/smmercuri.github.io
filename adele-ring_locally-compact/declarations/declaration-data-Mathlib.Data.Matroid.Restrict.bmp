{"name":"Mathlib.Data.Matroid.Restrict","instances":[{"typeNames":["Matroid.restrict"],"name":"Matroid.restrict_finiteRk","className":"Matroid.FiniteRk"},{"typeNames":["Matroid.restrict"],"name":"Matroid.restrict_finitary","className":"Matroid.Finitary"},{"typeNames":["Matroid.Matroidᵣ","Matroid"],"name":"Matroid.instCoeOutMatroidᵣ","className":"CoeOut"},{"typeNames":["Matroid.Matroidᵣ"],"name":"Matroid.instPartialOrderMatroidᵣ","className":"PartialOrder"}],"imports":["Init","Mathlib.Data.Matroid.Dual"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L432-L441","name":"Matroid.Indep.augment","line":432,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.augment","doc":"Any independent set can be extended into a larger independent set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.augment\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">augment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.encard</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">J</span>.encard</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">e</span> ∈ <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L428-L429","name":"Matroid.Basis.encard_eq_encard","line":428,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.encard_eq_encard","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.encard_eq_encard\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">encard_eq_encard</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.encard</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">J</span>.encard</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L425-L426","name":"Matroid.Basis'.encard_eq_encard","line":425,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis'.encard_eq_encard","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis'.encard_eq_encard\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis'</span>.<span class=\"name\">encard_eq_encard</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis'</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis'</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.encard</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">J</span>.encard</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L421-L423","name":"Matroid.Basis.eq_exchange_of_diff_eq_singleton","line":421,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.eq_exchange_of_diff_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.eq_exchange_of_diff_eq_singleton\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">eq_exchange_of_diff_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">e</span>}</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">f</span> ∈ <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">f</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">e</span>}</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L416-L419","name":"Matroid.Basis.exchange","line":416,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.exchange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.exchange\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">exchange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hIX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">J</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">f</span> ∈ <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">e</span>}</span></span>)</span></span>)</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L413-L414","name":"Matroid.Basis.base_of_base_subset","line":413,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.base_of_base_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.base_of_base_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">base_of_base_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hIX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hBX : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Base</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L407-L411","name":"Matroid.Indep.exists_insert_of_not_basis","line":407,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.exists_insert_of_not_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.exists_insert_of_not_basis\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">exists_insert_of_not_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIX : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI' : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">e</span> ∈ <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">e</span> <span class=\"fn\">I</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L400-L405","name":"Matroid.Indep.exists_basis_subset_union_basis","line":400,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.exists_basis_subset_union_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.exists_basis_subset_union_basis\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">exists_basis_subset_union_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIX : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I'</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I'</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">I'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">J</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L394-L398","name":"Matroid.Basis.basis_of_basis_of_subset_of_subset","line":394,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_of_basis_of_subset_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_of_basis_of_subset_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">basis_of_basis_of_subset_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJX : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIY : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L389-L392","name":"Matroid.Basis.transfer","line":389,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.transfer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.transfer\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">transfer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hIX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hXY : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hJY : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">J</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L371-L373","name":"Matroid.Dep.dep_restriction","line":371,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Dep.dep_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Dep.dep_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Dep</span>.<span class=\"name\">dep_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Dep</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hXE : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Restrict.html#_auto._@.Mathlib.Data.Matroid.Restrict._hyg.6388\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Dep</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L366-L369","name":"Matroid.Dep.of_restriction","line":366,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Dep.of_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Dep.of_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Dep</span>.<span class=\"name\">of_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Dep</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Dep</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L363-L364","name":"Matroid.Base.basis_of_restriction","line":363,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Base.basis_of_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Base.basis_of_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Base</span>.<span class=\"name\">basis_of_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Base</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L360-L361","name":"Matroid.Basis.of_restriction","line":360,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.of_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.of_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">of_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L357-L358","name":"Matroid.Basis.basis_restriction","line":357,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">basis_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L354-L355","name":"Matroid.Indep.indep_restriction","line":354,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.indep_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.indep_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">indep_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIN : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Indep</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L351-L352","name":"Matroid.Indep.of_restriction","line":351,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.of_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.of_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">of_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L347-L349","name":"Matroid.finite_setOf_restriction","line":347,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.finite_setOf_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.finite_setOf_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">finite_setOf_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.Finite</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>}</span>.Finite</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L343-L345","name":"Matroid.Restriction.finitary","line":343,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finitary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finitary\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">finitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.Finitary</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.Finitary</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L339-L341","name":"Matroid.Restriction.finiteRk","line":339,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finiteRk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finiteRk\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">finiteRk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.FiniteRk</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.FiniteRk</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L335-L337","name":"Matroid.Restriction.finite","line":335,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.finite\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.Finite</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.Finite</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L331-L333","name":"Matroid.StrictRestriction.of_ssubset","line":331,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.of_ssubset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.of_ssubset\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">of_ssubset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Core.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\">R'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.StrictRestriction</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L327-L329","name":"Matroid.Restriction.strictRestriction_of_ground_ne","line":327,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.strictRestriction_of_ground_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.strictRestriction_of_ground_ne\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">strictRestriction_of_ground_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.E</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L322-L325","name":"Matroid.restrict_strictRestriction","line":322,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_strictRestriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_strictRestriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_strictRestriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Core.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.StrictRestriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L319-L320","name":"Matroid.Restriction.eq_or_strictRestriction","line":319,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.eq_or_strictRestriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.eq_or_strictRestriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">eq_or_strictRestriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L316-L317","name":"Matroid.Restriction.strictRestriction_of_ne","line":316,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.strictRestriction_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.strictRestriction_of_ne\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">strictRestriction_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L313-L314","name":"Matroid.StrictRestriction.exists_eq_restrict","line":313,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.exists_eq_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.exists_eq_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">exists_eq_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">R</span> ⊂ <span class=\"fn\"><span class=\"fn\">M</span>.E</span>, <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L310-L311","name":"Matroid.StrictRestriction.eq_restrict","line":310,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.eq_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.eq_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">eq_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L305-L308","name":"Matroid.StrictRestriction.ssubset","line":305,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.ssubset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.ssubset\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">ssubset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.E</span> <a href=\"./Init/Core.html#HasSSubset.SSubset\">⊂</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L302-L303","name":"Matroid.StrictRestriction.irrefl","line":302,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.irrefl\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">irrefl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.StrictRestriction</span> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L299-L300","name":"Matroid.StrictRestriction.ne","line":299,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.ne\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L296-L297","name":"Matroid.StrictRestriction.restriction","line":296,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction.restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span>.<span class=\"name\">restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.StrictRestriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L293-L294","name":"Matroid.restriction_iff_exists","line":293,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restriction_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restriction_iff_exists\"><span class=\"name\">Matroid</span>.<span class=\"name\">restriction_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">R</span> ⊆ <span class=\"fn\"><span class=\"fn\">M</span>.E</span>, <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L290-L291","name":"Matroid.Restriction.of_subset","line":290,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Restriction</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L287-L288","name":"Matroid.Restriction.exists_eq_restrict","line":287,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.exists_eq_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.exists_eq_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">exists_eq_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">R</span> ⊆ <span class=\"fn\"><span class=\"fn\">M</span>.E</span>, <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L284-L285","name":"Matroid.Restriction.subset","line":284,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.E</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L281-L282","name":"Matroid.Restriction.eq_restrict","line":281,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.eq_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.eq_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">eq_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\"><span class=\"fn\">N</span>.E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L277-L279","name":"Matroid.restrict_restriction","line":277,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_restriction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Restrict.html#_auto._@.Mathlib.Data.Matroid.Restrict._hyg.4672\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Restriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L274-L275","name":"Matroid.Restriction.trans","line":274,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.trans\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₃ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span>.Restriction</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₂</span>.Restriction</span> <span class=\"fn\">M₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span>.Restriction</span> <span class=\"fn\">M₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L271-L272","name":"Matroid.Restriction.antisymm","line":271,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.antisymm\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Restriction</span> <span class=\"fn\">M'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M'</span>.Restriction</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L268-L269","name":"Matroid.Restriction.refl","line":268,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction.refl\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Restriction</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L264-L266","name":"Matroid.ofMatroid_lt_iff","line":264,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.ofMatroid_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.ofMatroid_lt_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofMatroid_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toMatroid</span> := <span class=\"fn\">M</span> }</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">{ <span class=\"fn\">toMatroid</span> := <span class=\"fn\">M'</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.StrictRestriction</span> <span class=\"fn\">M'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L260-L262","name":"Matroid.ofMatroid_le_iff","line":260,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.ofMatroid_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.ofMatroid_le_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">ofMatroid_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toMatroid</span> := <span class=\"fn\">M</span> }</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">{ <span class=\"fn\">toMatroid</span> := <span class=\"fn\">M'</span> }</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Restriction</span> <span class=\"fn\">M'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L257-L258","name":"Matroid.Matroidᵣ.lt_iff","line":257,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.lt_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">M'</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toMatroid</span>.StrictRestriction</span> <span class=\"fn\"><span class=\"fn\">M'</span>.toMatroid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L254-L255","name":"Matroid.Matroidᵣ.le_iff","line":254,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.le_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M'</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.toMatroid</span>.Restriction</span> <span class=\"fn\"><span class=\"fn\">M'</span>.toMatroid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L239-L252","name":"Matroid.instPartialOrderMatroidᵣ","line":239,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.instPartialOrderMatroidᵣ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.instPartialOrderMatroidᵣ\"><span class=\"name\">Matroid</span>.<span class=\"name\">instPartialOrderMatroidᵣ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L235-L237","name":"Matroid.Matroidᵣ.coe_inj","line":235,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.coe_inj\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M₁</span>.toMatroid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M₂</span>.toMatroid</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">M₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L232-L233","name":"Matroid.instCoeOutMatroidᵣ","line":232,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.instCoeOutMatroidᵣ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.instCoeOutMatroidᵣ\"><span class=\"name\">Matroid</span>.<span class=\"name\">instCoeOutMatroidᵣ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L230-L230","name":"Matroid.Matroidᵣ.toMatroid","line":230,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.toMatroid","doc":"The underlying `Matroid`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.toMatroid\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">toMatroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L228-L228","name":"Matroid.Matroidᵣ.ofMatroid","line":228,"kind":"ctor","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ofMatroid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ofMatroid\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">ofMatroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toMatroid : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L228-L230","name":"Matroid.Matroidᵣ","line":228,"kind":"structure","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ","doc":"A type synonym for matroids with the restriction order.\n(The `PartialOrder` on `Matroid α` is reserved for the minor order)  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L228-L228","name":"Matroid.Matroidᵣ.ext","line":228,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ext\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toMatroid : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toMatroid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toMatroid</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L228-L228","name":"Matroid.Matroidᵣ.ext_iff","line":228,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ.ext_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">Matroidᵣ</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Matroidᵣ\">Matroid.Matroidᵣ</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toMatroid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toMatroid</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L223-L224","name":"Matroid.«term_<r_»","line":223,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_<r_»","doc":"`N <r M` means that `N` is a `StrictRestriction` of `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_&lt;r_»\"><span class=\"name\">Matroid</span>.<span class=\"name\">«term_&lt;r_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L220-L221","name":"Matroid.«term_≤r_»","line":220,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_≤r_»","doc":"`N ≤r M` means that `N` is a `Restriction` of `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_≤r_»\"><span class=\"name\">Matroid</span>.<span class=\"name\">«term_≤r_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L218-L218","name":"Matroid.StrictRestriction","line":218,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction","doc":"`StrictRestriction N M` means that `N = M ↾ R` for some strict subset `R` of `M.E` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.StrictRestriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">StrictRestriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L215-L215","name":"Matroid.Restriction","line":215,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction","doc":"`Restriction N M` means that `N = M ↾ R` for some subset `R` of `M.E` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Restriction\"><span class=\"name\">Matroid</span>.<span class=\"name\">Restriction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L205-L206","name":"Matroid.restrict_eq_self_iff","line":205,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_eq_self_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_eq_self_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_eq_self_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L198-L203","name":"Matroid.restrict_eq_restrict_iff","line":198,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_eq_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_eq_restrict_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_eq_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M' : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M'</span>.restrict</span> <span class=\"fn\">X</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">I</span> ⊆ <span class=\"fn\">X</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M'</span>.Indep</span> <span class=\"fn\">I</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L192-L196","name":"Matroid.basis_restrict_iff","line":192,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis_restrict_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">basis_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Restrict.html#_auto._@.Mathlib.Data.Matroid.Restrict._hyg.2584\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L185-L190","name":"Matroid.basis_restrict_iff'","line":185,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis_restrict_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis_restrict_iff'\"><span class=\"name\">Matroid</span>.<span class=\"name\">basis_restrict_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L182-L183","name":"Matroid.basis'_restrict_iff","line":182,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis'_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.basis'_restrict_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">basis'_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Basis'</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis'</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L179-L180","name":"Matroid.Basis.basis_restrict_of_subset","line":179,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_restrict_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.basis_restrict_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">basis_restrict_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hXY : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">Y</span></span>)</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L176-L177","name":"Matroid.Basis.base_restrict","line":176,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.base_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.base_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">base_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">X</span></span>)</span>.Base</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L169-L174","name":"Matroid.restrict_finitary","line":169,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finitary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finitary\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_finitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.Finitary</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Finitary</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L165-L167","name":"Matroid.restrict_finiteRk","line":165,"kind":"instance","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finiteRk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finiteRk\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_finiteRk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span>.FiniteRk</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.FiniteRk</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L159-L163","name":"Matroid.Basis.restrict_base","line":159,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.restrict_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Basis.restrict_base\"><span class=\"name\">Matroid</span>.<span class=\"name\">Basis</span>.<span class=\"name\">restrict_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">X</span></span>)</span>.Base</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L156-L157","name":"Matroid.base_restrict_iff'","line":156,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.base_restrict_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.base_restrict_iff'\"><span class=\"name\">Matroid</span>.<span class=\"name\">base_restrict_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">X</span></span>)</span>.Base</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis'</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L151-L154","name":"Matroid.base_restrict_iff","line":151,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.base_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.base_restrict_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">base_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span>)</span> <a href=\"./Mathlib/Data/Matroid/Restrict.html#_auto._@.Mathlib.Data.Matroid.Restrict._hyg.1699\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">X</span></span>)</span>.Base</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Basis</span> <span class=\"fn\">I</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L148-L149","name":"Matroid.restrict_idem","line":148,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_idem\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.restrict</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L142-L146","name":"Matroid.restrict_restrict_eq","line":142,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_restrict_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_restrict_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_restrict_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R₁</span></span>)</span>.restrict</span> <span class=\"fn\">R₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L139-L140","name":"Matroid.restrict_ground_eq_self","line":139,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_ground_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_ground_eq_self\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_ground_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\"><span class=\"fn\">M</span>.E</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L136-L137","name":"Matroid.restrict_dep_iff","line":136,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_dep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_dep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_dep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Dep</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">X</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L133-L134","name":"Matroid.restrict_finite","line":133,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_finite\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><span class=\"fn\">R</span>.Finite</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Finite</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L131-L131","name":"Matroid.restrict_ground_eq","line":131,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_ground_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_ground_eq\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_ground_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L128-L129","name":"Matroid.Indep.of_restrict","line":128,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.of_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.of_restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">of_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L125-L126","name":"Matroid.Indep.indep_restrict_of_subset","line":125,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.indep_restrict_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.Indep.indep_restrict_of_subset\"><span class=\"name\">Matroid</span>.<span class=\"name\">Indep</span>.<span class=\"name\">indep_restrict_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hIR : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Indep</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L123-L123","name":"Matroid.restrict_indep_iff","line":123,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_indep_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict_indep_iff\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict_indep_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrict</span> <span class=\"fn\">R</span></span>)</span>.Indep</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L120-L121","name":"Matroid.«term_↾_»","line":120,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_↾_»","doc":"`M ↾ R` means `M.restrict R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.«term_↾_»\"><span class=\"name\">Matroid</span>.<span class=\"name\">«term_↾_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L118-L118","name":"Matroid.restrict","line":118,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict","doc":"Change the ground set of a matroid to some `R : Set α`. The independent sets of the restriction\nare the independent subsets of the new ground set. Most commonly used when `R ⊆ M.E`,\nbut it is convenient not to require this. The elements of `R \\ M.E` become 'loops'.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrict\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L74-L113","name":"Matroid.restrictIndepMatroid","line":74,"kind":"def","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid","doc":"The `IndepMatroid` whose independent sets are the independent subsets of `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrictIndepMatroid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/IndepAxioms.html#IndepMatroid\">IndepMatroid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L74-L74","name":"Matroid.restrictIndepMatroid_Indep","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid_Indep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid_Indep\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrictIndepMatroid_Indep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrictIndepMatroid</span> <span class=\"fn\">R</span></span>)</span>.Indep</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.Indep</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">R</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Matroid/Restrict.lean#L74-L74","name":"Matroid.restrictIndepMatroid_E","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid_E","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Matroid/Restrict.html#Matroid.restrictIndepMatroid_E\"><span class=\"name\">Matroid</span>.<span class=\"name\">restrictIndepMatroid_E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/Data/Matroid/Basic.html#Matroid\">Matroid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.restrictIndepMatroid</span> <span class=\"fn\">R</span></span>)</span>.E</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span></span></div></div>"}]}