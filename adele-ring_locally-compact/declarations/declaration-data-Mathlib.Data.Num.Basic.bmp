{"name":"Mathlib.Data.Num.Basic","instances":[{"typeNames":["Eq"],"name":"instDecidableEqPosNum","className":"Decidable"},{"typeNames":["PosNum"],"name":"instOnePosNum","className":"One"},{"typeNames":["PosNum"],"name":"instInhabitedPosNum","className":"Inhabited"},{"typeNames":["Eq"],"name":"instDecidableEqNum","className":"Decidable"},{"typeNames":["Num"],"name":"instZeroNum","className":"Zero"},{"typeNames":["Num"],"name":"instOneNum","className":"One"},{"typeNames":["Num"],"name":"instInhabitedNum","className":"Inhabited"},{"typeNames":["Eq"],"name":"instDecidableEqZNum","className":"Decidable"},{"typeNames":["ZNum"],"name":"instZeroZNum","className":"Zero"},{"typeNames":["ZNum"],"name":"instOneZNum","className":"One"},{"typeNames":["ZNum"],"name":"instInhabitedZNum","className":"Inhabited"},{"typeNames":["PosNum"],"name":"PosNum.instAdd","className":"Add"},{"typeNames":["PosNum"],"name":"PosNum.instMul","className":"Mul"},{"typeNames":["PosNum","HAdd.hAdd"],"name":"PosNum.instOfNatHAddNatOfNat","className":"OfNat"},{"typeNames":["PosNum"],"name":"PosNum.instLT","className":"LT"},{"typeNames":["PosNum"],"name":"PosNum.instLE","className":"LE"},{"typeNames":[],"name":"PosNum.decidableLT","className":"Decidable"},{"typeNames":[],"name":"PosNum.decidableLE","className":"Decidable"},{"typeNames":["PosNum"],"name":"posNumCoe","className":"CoeHTCT"},{"typeNames":["Num"],"name":"numNatCoe","className":"CoeHTCT"},{"typeNames":["PosNum"],"name":"instReprPosNum","className":"Repr"},{"typeNames":["Num"],"name":"instReprNum","className":"Repr"},{"typeNames":["Num"],"name":"Num.instAdd","className":"Add"},{"typeNames":["Num"],"name":"Num.instMul","className":"Mul"},{"typeNames":["Num"],"name":"Num.instLT","className":"LT"},{"typeNames":["Num"],"name":"Num.instLE","className":"LE"},{"typeNames":[],"name":"Num.decidableLT","className":"Decidable"},{"typeNames":[],"name":"Num.decidableLE","className":"Decidable"},{"typeNames":["ZNum"],"name":"ZNum.instNeg","className":"Neg"},{"typeNames":["PosNum"],"name":"PosNum.instSub","className":"Sub"},{"typeNames":["Num"],"name":"Num.instSub","className":"Sub"},{"typeNames":["ZNum"],"name":"ZNum.instAdd","className":"Add"},{"typeNames":["ZNum"],"name":"ZNum.instMul","className":"Mul"},{"typeNames":["ZNum"],"name":"ZNum.instLT","className":"LT"},{"typeNames":["ZNum"],"name":"ZNum.instLE","className":"LE"},{"typeNames":[],"name":"ZNum.decidableLT","className":"Decidable"},{"typeNames":[],"name":"ZNum.decidableLE","className":"Decidable"},{"typeNames":["Num"],"name":"Num.instDiv","className":"Div"},{"typeNames":["Num"],"name":"Num.instMod","className":"Mod"},{"typeNames":["ZNum"],"name":"ZNum.instDiv","className":"Div"},{"typeNames":["ZNum"],"name":"ZNum.instMod","className":"Mod"},{"typeNames":["ZNum"],"name":"znumCoe","className":"CoeHTCT"},{"typeNames":["ZNum"],"name":"instReprZNum","className":"Repr"}],"imports":["Init","Lean.Linter.Deprecated","Mathlib.Data.Int.Notation","Mathlib.Algebra.Group.ZeroOne","Mathlib.Data.Nat.Bits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L611-L612","name":"instReprZNum","line":611,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instReprZNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instReprZNum\"><span class=\"name\">instReprZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L608-L609","name":"znumCoe","line":608,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#znumCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#znumCoe\"><span class=\"name\">znumCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeHTCT\">CoeHTCT</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L602-L605","name":"castZNum","line":602,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#castZNum","doc":"`castZNum` casts a `ZNum` into any type which has `0`, `1`, `+` and `neg` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#castZNum\"><span class=\"name\">castZNum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L590-L591","name":"ZNum.gcd","line":590,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.gcd","doc":"Greatest Common Divisor (GCD) of two `ZNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.gcd\"><span class=\"name\">ZNum</span>.<span class=\"name\">gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L586-L587","name":"ZNum.instMod","line":586,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instMod\"><span class=\"name\">ZNum</span>.<span class=\"name\">instMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L583-L584","name":"ZNum.instDiv","line":583,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instDiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instDiv\"><span class=\"name\">ZNum</span>.<span class=\"name\">instDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L578-L581","name":"ZNum.mod","line":578,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.mod","doc":"Modulus of `ZNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.mod\"><span class=\"name\">ZNum</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L569-L575","name":"ZNum.div","line":569,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.div","doc":"Division of `ZNum`, where `x / 0 = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.div\"><span class=\"name\">ZNum</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L561-L562","name":"Num.gcd","line":561,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.gcd","doc":"Greatest Common Divisor (GCD) of two `Num`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.gcd\"><span class=\"name\">Num</span>.<span class=\"name\">gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L555-L558","name":"Num.gcdAux","line":555,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.gcdAux","doc":"Auxiliary definition for `Num.gcd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.gcdAux\"><span class=\"name\">Num</span>.<span class=\"name\">gcdAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L551-L552","name":"Num.instMod","line":551,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instMod\"><span class=\"name\">Num</span>.<span class=\"name\">instMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mod\">Mod</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L548-L549","name":"Num.instDiv","line":548,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instDiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instDiv\"><span class=\"name\">Num</span>.<span class=\"name\">instDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L543-L546","name":"Num.mod","line":543,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.mod","doc":"Modulus of `Num`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.mod\"><span class=\"name\">Num</span>.<span class=\"name\">mod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L537-L540","name":"Num.div","line":537,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.div","doc":"Division of `Num`s, where `x / 0 = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.div\"><span class=\"name\">Num</span>.<span class=\"name\">div</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L517-L518","name":"PosNum.mod'","line":517,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.mod'","doc":"Modulus of `PosNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.mod'\"><span class=\"name\">PosNum</span>.<span class=\"name\">mod'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L513-L514","name":"PosNum.div'","line":513,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.div'","doc":"Division of `PosNum`, "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.div'\"><span class=\"name\">PosNum</span>.<span class=\"name\">div'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L503-L510","name":"PosNum.divMod","line":503,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.divMod","doc":"`divMod x y = (y / x, y % x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.divMod\"><span class=\"name\">PosNum</span>.<span class=\"name\">divMod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L497-L500","name":"PosNum.divModAux","line":497,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.divModAux","doc":"Auxiliary definition for `PosNum.divMod`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.divModAux\"><span class=\"name\">PosNum</span>.<span class=\"name\">divModAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L489-L490","name":"ZNum.decidableLE","line":489,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.decidableLE\"><span class=\"name\">ZNum</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L486-L487","name":"ZNum.decidableLT","line":486,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.decidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.decidableLT\"><span class=\"name\">ZNum</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L483-L484","name":"ZNum.instLE","line":483,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instLE\"><span class=\"name\">ZNum</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L480-L481","name":"ZNum.instLT","line":480,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instLT\"><span class=\"name\">ZNum</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L471-L478","name":"ZNum.cmp","line":471,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.cmp","doc":"Ordering on `ZNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.cmp\"><span class=\"name\">ZNum</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L465-L466","name":"ZNum.instMul","line":465,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instMul\"><span class=\"name\">ZNum</span>.<span class=\"name\">instMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L457-L463","name":"ZNum.mul","line":457,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.mul","doc":"Multiplication of `ZNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.mul\"><span class=\"name\">ZNum</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L453-L454","name":"ZNum.instAdd","line":453,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instAdd\"><span class=\"name\">ZNum</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L445-L451","name":"ZNum.add","line":445,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.add","doc":"Addition of `ZNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.add\"><span class=\"name\">ZNum</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L435-L436","name":"Num.instSub","line":435,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instSub\"><span class=\"name\">Num</span>.<span class=\"name\">instSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L432-L433","name":"Num.sub","line":432,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.sub","doc":"Subtraction of two `Num`s, where if `a < b`, `a - b = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.sub\"><span class=\"name\">Num</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L428-L429","name":"Num.psub","line":428,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.psub","doc":"Subtraction of two `Num`s, producing an `Option Num`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.psub\"><span class=\"name\">Num</span>.<span class=\"name\">psub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L421-L425","name":"Num.sub'","line":421,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.sub'","doc":"Subtraction of two `Num`s, producing a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.sub'\"><span class=\"name\">Num</span>.<span class=\"name\">sub'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L416-L418","name":"Num.ofZNum","line":416,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.ofZNum","doc":"Converts a `ZNum` to an `Option Num`, where `ofZNum p = 0` if `p < 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.ofZNum\"><span class=\"name\">Num</span>.<span class=\"name\">ofZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L410-L413","name":"Num.ofZNum'","line":410,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.ofZNum'","doc":"Converts a `ZNum` to an `Option Num`, where `ofZNum' p = none` if `p < 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.ofZNum'\"><span class=\"name\">Num</span>.<span class=\"name\">ofZNum'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L403-L407","name":"Num.div2","line":403,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.div2","doc":"Divides a `Num` by `2` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.div2\"><span class=\"name\">Num</span>.<span class=\"name\">div2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L398-L400","name":"Num.pred","line":398,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.pred","doc":"The predecessor of a `Num` as a `Num`, where `pred 0 = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.pred\"><span class=\"name\">Num</span>.<span class=\"name\">pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L393-L395","name":"Num.ppred","line":393,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.ppred","doc":"The predecessor of a `Num` as an `Option Num`, where `ppred 0 = none` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.ppred\"><span class=\"name\">Num</span>.<span class=\"name\">ppred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L385-L386","name":"PosNum.instSub","line":385,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instSub\"><span class=\"name\">PosNum</span>.<span class=\"name\">instSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L380-L383","name":"PosNum.sub","line":380,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.sub","doc":"Subtraction of `PosNum`s, where if `a < b`, then `a - b = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.sub\"><span class=\"name\">PosNum</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L375-L377","name":"PosNum.ofZNum","line":375,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.ofZNum","doc":"Converts a `ZNum` to a `PosNum`, mapping all out of range values to `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.ofZNum\"><span class=\"name\">PosNum</span>.<span class=\"name\">ofZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L370-L372","name":"PosNum.ofZNum'","line":370,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.ofZNum'","doc":"Converts a `ZNum` to `Option PosNum`, where it is `some` if the `ZNum` was positive and `none`\notherwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.ofZNum'\"><span class=\"name\">PosNum</span>.<span class=\"name\">ofZNum'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L360-L366","name":"PosNum.sub'","line":360,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.sub'","doc":"Subtraction of two `PosNum`s, producing a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.sub'\"><span class=\"name\">PosNum</span>.<span class=\"name\">sub'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L349-L351","name":"ZNum.ofInt'","line":349,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.ofInt'","doc":"Converts an `Int` to a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.ofInt'\"><span class=\"name\">ZNum</span>.<span class=\"name\">ofInt'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L343-L346","name":"ZNum.bitm1","line":343,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.bitm1","doc":"`bitm1 x` appends a `1` to the end of `x`, mapping `x` to `2 * x - 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.bitm1\"><span class=\"name\">ZNum</span>.<span class=\"name\">bitm1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L337-L340","name":"ZNum.bit1","line":337,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.bit1","doc":"`bit1 x` appends a `1` to the end of `x`, mapping `x` to `2 * x + 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.bit1\"><span class=\"name\">ZNum</span>.<span class=\"name\">bit1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L331-L334","name":"ZNum.bit0","line":331,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.bit0","doc":"`bit0 n` appends a `0` to the end of `n`, where `bit0 n = n0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.bit0\"><span class=\"name\">ZNum</span>.<span class=\"name\">bit0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L325-L328","name":"ZNum.pred","line":325,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.pred","doc":"The predecessor of a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.pred\"><span class=\"name\">ZNum</span>.<span class=\"name\">pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L319-L322","name":"ZNum.succ","line":319,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.succ","doc":"The successor of a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.succ\"><span class=\"name\">ZNum</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L313-L316","name":"ZNum.abs","line":313,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.abs","doc":"The absolute value of a `ZNum` as a `Num`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.abs\"><span class=\"name\">ZNum</span>.<span class=\"name\">abs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L309-L310","name":"ZNum.instNeg","line":309,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.instNeg\"><span class=\"name\">ZNum</span>.<span class=\"name\">instNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L304-L307","name":"ZNum.zNeg","line":304,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.zNeg","doc":"The negation of a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.zNeg\"><span class=\"name\">ZNum</span>.<span class=\"name\">zNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L294-L295","name":"Num.ofNat'","line":294,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.ofNat'","doc":"Converts a `Nat` to a `Num`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.ofNat'\"><span class=\"name\">Num</span>.<span class=\"name\">ofNat'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L289-L291","name":"Num.toZNumNeg","line":289,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.toZNumNeg","doc":"Converts `x : Num` to `-x : ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.toZNumNeg\"><span class=\"name\">Num</span>.<span class=\"name\">toZNumNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L284-L286","name":"Num.toZNum","line":284,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.toZNum","doc":"Converts a `Num` to a `ZNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.toZNum\"><span class=\"name\">Num</span>.<span class=\"name\">toZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L280-L281","name":"Num.decidableLE","line":280,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.decidableLE\"><span class=\"name\">Num</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L277-L278","name":"Num.decidableLT","line":277,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.decidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.decidableLT\"><span class=\"name\">Num</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L274-L275","name":"Num.instLE","line":274,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instLE\"><span class=\"name\">Num</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L271-L272","name":"Num.instLT","line":271,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instLT\"><span class=\"name\">Num</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L265-L269","name":"Num.cmp","line":265,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.cmp","doc":"Ordering of `Num`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.cmp\"><span class=\"name\">Num</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L259-L260","name":"Num.instMul","line":259,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instMul\"><span class=\"name\">Num</span>.<span class=\"name\">instMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L254-L257","name":"Num.mul","line":254,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.mul","doc":"Multiplication of two `Num`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.mul\"><span class=\"name\">Num</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L249-L251","name":"Num.natSize","line":249,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.natSize","doc":"The number of bits required to represent a `Num`, as a `Nat`. `size 0` is defined to be `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.natSize\"><span class=\"name\">Num</span>.<span class=\"name\">natSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L244-L246","name":"Num.size","line":244,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.size","doc":"The number of bits required to represent a `Num`, as a `Num`. `size 0` is defined to be `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.size\"><span class=\"name\">Num</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L240-L241","name":"Num.bit","line":240,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.bit","doc":"`bit b n` appends the bit `b` to the end of `n`, where `bit tt x = x1` and `bit ff x = x0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.bit\"><span class=\"name\">Num</span>.<span class=\"name\">bit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L235-L237","name":"Num.bit1","line":235,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.bit1","doc":"`bit1 n` appends a `1` to the end of `n`, where `bit1 n = n1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.bit1\"><span class=\"name\">Num</span>.<span class=\"name\">bit1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L230-L232","name":"Num.bit0","line":230,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.bit0","doc":"`bit0 n` appends a `0` to the end of `n`, where `bit0 n = n0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.bit0\"><span class=\"name\">Num</span>.<span class=\"name\">bit0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L226-L227","name":"Num.instAdd","line":226,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#Num.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.instAdd\"><span class=\"name\">Num</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L221-L224","name":"Num.add","line":221,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.add","doc":"Addition of two `Num`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.add\"><span class=\"name\">Num</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L217-L218","name":"Num.succ","line":217,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.succ","doc":"The successor of a `Num` as a `Num`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.succ\"><span class=\"name\">Num</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L212-L214","name":"Num.succ'","line":212,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#Num.succ'","doc":"The successor of a `Num` as a `PosNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.succ'\"><span class=\"name\">Num</span>.<span class=\"name\">succ'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L202-L203","name":"instReprNum","line":202,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instReprNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instReprNum\"><span class=\"name\">instReprNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L199-L200","name":"instReprPosNum","line":199,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instReprPosNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instReprPosNum\"><span class=\"name\">instReprPosNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L194-L195","name":"numNatCoe","line":194,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#numNatCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#numNatCoe\"><span class=\"name\">numNatCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeHTCT\">CoeHTCT</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L189-L190","name":"posNumCoe","line":189,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#posNumCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#posNumCoe\"><span class=\"name\">posNumCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeHTCT\">CoeHTCT</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L184-L186","name":"castNum","line":184,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#castNum","doc":"`castNum` casts a `Num` into any type which has `0`, `1` and `+`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#castNum\"><span class=\"name\">castNum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L177-L180","name":"castPosNum","line":177,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#castPosNum","doc":"`castPosNum` casts a `PosNum` into any type which has `1` and `+`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#castPosNum\"><span class=\"name\">castPosNum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L163-L164","name":"PosNum.decidableLE","line":163,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.decidableLE\"><span class=\"name\">PosNum</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L160-L161","name":"PosNum.decidableLT","line":160,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.decidableLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.decidableLT\"><span class=\"name\">PosNum</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L157-L158","name":"PosNum.instLE","line":157,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instLE\"><span class=\"name\">PosNum</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L154-L155","name":"PosNum.instLT","line":154,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instLT\"><span class=\"name\">PosNum</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L145-L152","name":"PosNum.cmp","line":145,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.cmp","doc":"Ordering of `PosNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.cmp\"><span class=\"name\">PosNum</span>.<span class=\"name\">cmp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L139-L140","name":"PosNum.instOfNatHAddNatOfNat","line":139,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instOfNatHAddNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instOfNatHAddNatOfNat\"><span class=\"name\">PosNum</span>.<span class=\"name\">instOfNatHAddNatOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L136-L137","name":"PosNum.ofNat","line":136,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.ofNat","doc":"`ofNat n` is the `PosNum` corresponding to `n`, except for `ofNat 0 = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.ofNat\"><span class=\"name\">PosNum</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L131-L133","name":"PosNum.ofNatSucc","line":131,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.ofNatSucc","doc":"`ofNatSucc n` is the `PosNum` corresponding to `n + 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.ofNatSucc\"><span class=\"name\">PosNum</span>.<span class=\"name\">ofNatSucc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L127-L128","name":"PosNum.instMul","line":127,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instMul\"><span class=\"name\">PosNum</span>.<span class=\"name\">instMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L122-L125","name":"PosNum.mul","line":122,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.mul","doc":"Multiplication of two `PosNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.mul\"><span class=\"name\">PosNum</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L116-L119","name":"PosNum.natSize","line":116,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.natSize","doc":"The number of bits of a `PosNum`, as a `Nat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.natSize\"><span class=\"name\">PosNum</span>.<span class=\"name\">natSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L110-L113","name":"PosNum.size","line":110,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.size","doc":"The number of bits of a `PosNum`, as a `PosNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.size\"><span class=\"name\">PosNum</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L106-L107","name":"PosNum.pred","line":106,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.pred","doc":"The predecessor of a `PosNum` as a `PosNum`. This means that `pred 1 = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.pred\"><span class=\"name\">PosNum</span>.<span class=\"name\">pred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L100-L103","name":"PosNum.pred'","line":100,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.pred'","doc":"The predecessor of a `PosNum` as a `Num`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.pred'\"><span class=\"name\">PosNum</span>.<span class=\"name\">pred'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L96-L97","name":"PosNum.instAdd","line":96,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.instAdd\"><span class=\"name\">PosNum</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L88-L94","name":"PosNum.add","line":88,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.add","doc":"Addition of two `PosNum`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.add\"><span class=\"name\">PosNum</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L83-L85","name":"PosNum.isOne","line":83,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.isOne","doc":"Returns a boolean for whether the `PosNum` is `one`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.isOne\"><span class=\"name\">PosNum</span>.<span class=\"name\">isOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L77-L80","name":"PosNum.succ","line":77,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.succ","doc":"The successor of a `PosNum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.succ\"><span class=\"name\">PosNum</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L73-L74","name":"PosNum.bit","line":73,"kind":"def","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.bit","doc":"`bit b n` appends the bit `b` to the end of `n`, where `bit tt x = x1` and `bit ff x = x0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.bit\"><span class=\"name\">PosNum</span>.<span class=\"name\">bit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L67-L68","name":"instInhabitedZNum","line":67,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instInhabitedZNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instInhabitedZNum\"><span class=\"name\">instInhabitedZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L64-L65","name":"instOneZNum","line":64,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instOneZNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instOneZNum\"><span class=\"name\">instOneZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L61-L62","name":"instZeroZNum","line":61,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instZeroZNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instZeroZNum\"><span class=\"name\">instZeroZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L59-L59","name":"instDecidableEqZNum","line":59,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instDecidableEqZNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instDecidableEqZNum\"><span class=\"name\">instDecidableEqZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L58-L58","name":"ZNum.neg","line":58,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.neg\"><span class=\"name\">ZNum</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L57-L57","name":"ZNum.pos","line":57,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.pos\"><span class=\"name\">ZNum</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L56-L56","name":"ZNum.zero","line":56,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#ZNum.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum.zero\"><span class=\"name\">ZNum</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#ZNum\">ZNum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L55-L59","name":"ZNum","line":55,"kind":"inductive","docLink":"./Mathlib/Data/Num/Basic.html#ZNum","doc":"Representation of integers using trichotomy around zero.\n\n13 = 1101(base 2) = pos (bit1 (bit0 (bit1 one)))\n-13 = -1101(base 2) = neg (bit1 (bit0 (bit1 one))) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#ZNum\"><span class=\"name\">ZNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L48-L49","name":"instInhabitedNum","line":48,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instInhabitedNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instInhabitedNum\"><span class=\"name\">instInhabitedNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L45-L46","name":"instOneNum","line":45,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instOneNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instOneNum\"><span class=\"name\">instOneNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L42-L43","name":"instZeroNum","line":42,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instZeroNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instZeroNum\"><span class=\"name\">instZeroNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#Zero\">Zero</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L40-L40","name":"instDecidableEqNum","line":40,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instDecidableEqNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instDecidableEqNum\"><span class=\"name\">instDecidableEqNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L39-L39","name":"Num.pos","line":39,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#Num.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.pos\"><span class=\"name\">Num</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L38-L38","name":"Num.zero","line":38,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#Num.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num.zero\"><span class=\"name\">Num</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#Num\">Num</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L37-L40","name":"Num","line":37,"kind":"inductive","docLink":"./Mathlib/Data/Num/Basic.html#Num","doc":"The type of nonnegative binary numbers, using `PosNum`.\n\n13 = 1101(base 2) = pos (bit1 (bit0 (bit1 one))) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#Num\"><span class=\"name\">Num</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L31-L32","name":"instInhabitedPosNum","line":31,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instInhabitedPosNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instInhabitedPosNum\"><span class=\"name\">instInhabitedPosNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L28-L29","name":"instOnePosNum","line":28,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instOnePosNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instOnePosNum\"><span class=\"name\">instOnePosNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L26-L26","name":"instDecidableEqPosNum","line":26,"kind":"instance","docLink":"./Mathlib/Data/Num/Basic.html#instDecidableEqPosNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#instDecidableEqPosNum\"><span class=\"name\">instDecidableEqPosNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L25-L25","name":"PosNum.bit0","line":25,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.bit0\"><span class=\"name\">PosNum</span>.<span class=\"name\">bit0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L24-L24","name":"PosNum.bit1","line":24,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.bit1\"><span class=\"name\">PosNum</span>.<span class=\"name\">bit1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a> → <a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L23-L23","name":"PosNum.one","line":23,"kind":"ctor","docLink":"./Mathlib/Data/Num/Basic.html#PosNum.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum.one\"><span class=\"name\">PosNum</span>.<span class=\"name\">one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Num/Basic.html#PosNum\">PosNum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Num/Basic.lean#L22-L26","name":"PosNum","line":22,"kind":"inductive","docLink":"./Mathlib/Data/Num/Basic.html#PosNum","doc":"The type of positive binary numbers.\n\n13 = 1101(base 2) = bit1 (bit0 (bit1 one)) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Num/Basic.html#PosNum\"><span class=\"name\">PosNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}