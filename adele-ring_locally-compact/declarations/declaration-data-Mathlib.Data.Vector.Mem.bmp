{"name":"Mathlib.Data.Vector.Mem","instances":[],"imports":["Init","Mathlib.Data.Vector.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L72-L74","name":"Mathlib.Vector.mem_map_succ_iff","line":72,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_map_succ_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_map_succ_iff\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_map_succ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.map\">Mathlib.Vector.map</a> <span class=\"fn\">f</span> <span class=\"fn\">v</span></span>)</span>.toList</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">v</span>.head</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.tail</span>.toList</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L69-L70","name":"Mathlib.Vector.not_mem_map_zero","line":69,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_map_zero\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">not_mem_map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> ∉ <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.map\">Mathlib.Vector.map</a> <span class=\"fn\">f</span> <span class=\"fn\">v</span></span>)</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L65-L67","name":"Mathlib.Vector.mem_map_iff","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_map_iff\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.map\">Mathlib.Vector.map</a> <span class=\"fn\">f</span> <span class=\"fn\">v</span></span>)</span>.toList</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\"><span class=\"fn\">v</span>.toList</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L60-L63","name":"Mathlib.Vector.mem_of_mem_tail","line":60,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_of_mem_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_of_mem_tail\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_of_mem_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.tail</span>.toList</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L57-L58","name":"Mathlib.Vector.mem_cons_of_mem","line":57,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_of_mem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_cons_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a' : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha' : <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.cons\">::ᵥ</a> <span class=\"fn\">v</span></span>)</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L54-L55","name":"Mathlib.Vector.head_mem","line":54,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.head_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.head_mem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">head_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.head</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L50-L51","name":"Mathlib.Vector.mem_cons_self","line":50,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_self\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_cons_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.cons\">::ᵥ</a> <span class=\"fn\">v</span></span>)</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L46-L48","name":"Mathlib.Vector.mem_succ_iff","line":46,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_succ_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_succ_iff\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_succ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v</span>.head</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.tail</span>.toList</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L43-L44","name":"Mathlib.Vector.mem_cons_iff","line":43,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_cons_iff\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_cons_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a' : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector.cons\">::ᵥ</a> <span class=\"fn\">v</span></span>)</span>.toList</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L40-L41","name":"Mathlib.Vector.not_mem_zero","line":40,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_zero\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">not_mem_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> ∉ <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L35-L38","name":"Mathlib.Vector.not_mem_nil","line":35,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.not_mem_nil\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">not_mem_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> ∉ <span class=\"fn\"><span class=\"fn\">Mathlib.Vector.nil</span>.toList</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L29-L33","name":"Mathlib.Vector.mem_iff_get","line":29,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_iff_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.mem_iff_get\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">mem_iff_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.get</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Data/Vector/Mem.lean#L25-L27","name":"Mathlib.Vector.get_mem","line":25,"kind":"theorem","docLink":"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.get_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Vector/Mem.html#Mathlib.Vector.get_mem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Vector</span>.<span class=\"name\">get_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector/Defs.html#Mathlib.Vector\">Mathlib.Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.get</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">v</span>.toList</span></span></div></div>"}]}