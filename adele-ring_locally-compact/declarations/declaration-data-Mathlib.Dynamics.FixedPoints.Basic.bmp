{"name":"Mathlib.Dynamics.FixedPoints.Basic","instances":[{"typeNames":["Function.IsFixedPt"],"name":"Function.IsFixedPt.decidable","className":"Decidable"},{"typeNames":["Membership.mem"],"name":"Function.fixedPoints.decidable","className":"Decidable"}],"imports":["Init","Mathlib.Data.Set.Function","Mathlib.Logic.Function.Iterate","Mathlib.GroupTheory.Perm.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L170-L172","name":"Function.Commute.right_bijOn_fixedPoints_comp","line":170,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.right_bijOn_fixedPoints_comp","doc":"If self-maps `f` and `g` commute, then `g` is bijective on the set of fixed points of `f ∘ g`.\nThis is a particular case of `Function.bijOn_fixedPoints_comp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.right_bijOn_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">Commute</span>.<span class=\"name\">right_bijOn_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.BijOn\">Set.BijOn</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L164-L166","name":"Function.Commute.left_bijOn_fixedPoints_comp","line":164,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.left_bijOn_fixedPoints_comp","doc":"If self-maps `f` and `g` commute, then `f` is bijective on the set of fixed points of `f ∘ g`.\nThis is a particular case of `Function.bijOn_fixedPoints_comp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.left_bijOn_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">Commute</span>.<span class=\"name\">left_bijOn_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.BijOn\">Set.BijOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L158-L160","name":"Function.Commute.invOn_fixedPoints_comp","line":158,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.invOn_fixedPoints_comp","doc":"If self-maps `f` and `g` commute, then they are inverse of each other on the set of fixed points\nof `f ∘ g`. This is a particular case of `Function.invOn_fixedPoints_comp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Commute.invOn_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">Commute</span>.<span class=\"name\">invOn_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.InvOn\">Set.InvOn</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L152-L154","name":"Function.bijOn_fixedPoints_comp","line":152,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.bijOn_fixedPoints_comp","doc":"Given two maps `f : α → β` and `g : β → α`, `g` is a bijective map between the fixed points\nof `f ∘ g` and the fixed points of `g ∘ f`. The inverse map is `f`, see `invOn_fixedPoints_comp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.bijOn_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">bijOn_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.BijOn\">Set.BijOn</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L147-L148","name":"Function.mapsTo_fixedPoints_comp","line":147,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mapsTo_fixedPoints_comp","doc":"Any map `f` sends fixed points of `g ∘ f` to fixed points of `f ∘ g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mapsTo_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">mapsTo_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L142-L144","name":"Function.invOn_fixedPoints_comp","line":142,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.invOn_fixedPoints_comp","doc":"Any two maps `f : α → β` and `g : β → α` are inverse of each other on the sets of fixed points\nof `f ∘ g` and `g ∘ f`, respectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.invOn_fixedPoints_comp\"><span class=\"name\">Function</span>.<span class=\"name\">invOn_fixedPoints_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.InvOn\">Set.InvOn</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L137-L138","name":"Function.Semiconj.mapsTo_fixedPoints","line":137,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Semiconj.mapsTo_fixedPoints","doc":"If `g` semiconjugates `fa` to `fb`, then it sends fixed points of `fa` to fixed points\nof `fb`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Semiconj.mapsTo_fixedPoints\"><span class=\"name\">Function</span>.<span class=\"name\">Semiconj</span>.<span class=\"name\">mapsTo_fixedPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fa : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fb : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">g</span> <span class=\"fn\">fa</span> <span class=\"fn\">fb</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">fa</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">fb</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L133-L133","name":"Function.fixedPoints_subset_range","line":133,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints_subset_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints_subset_range\"><span class=\"name\">Function</span>.<span class=\"name\">fixedPoints_subset_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L130-L131","name":"Function.fixedPoints_id","line":130,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints_id\"><span class=\"name\">Function</span>.<span class=\"name\">fixedPoints_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L126-L127","name":"Function.mem_fixedPoints_iff","line":126,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mem_fixedPoints_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mem_fixedPoints_iff\"><span class=\"name\">Function</span>.<span class=\"name\">mem_fixedPoints_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L123-L124","name":"Function.mem_fixedPoints","line":123,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mem_fixedPoints","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.mem_fixedPoints\"><span class=\"name\">Function</span>.<span class=\"name\">mem_fixedPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L118-L120","name":"Function.fixedPoints.decidable","line":118,"kind":"instance","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints.decidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints.decidable\"><span class=\"name\">Function</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">decidable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">f</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L115-L116","name":"Function.fixedPoints","line":115,"kind":"def","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints","doc":"The set of fixed points of a map `f : α → α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\"><span class=\"name\">Function</span>.<span class=\"name\">fixedPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L110-L112","name":"Function.Injective.isFixedPt_apply_iff","line":110,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Injective.isFixedPt_apply_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.Injective.isFixedPt_apply_iff\"><span class=\"name\">Function</span>.<span class=\"name\">Injective</span>.<span class=\"name\">isFixedPt_apply_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L103-L105","name":"Function.IsFixedPt.perm_zpow","line":103,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_zpow\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">perm_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L101-L101","name":"Function.IsFixedPt.perm_pow","line":101,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_pow\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">perm_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L98-L99","name":"Function.IsFixedPt.perm_inv","line":98,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.perm_inv\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">perm_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L95-L96","name":"Function.IsFixedPt.equiv_symm","line":95,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.equiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.equiv_symm\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">equiv_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">Equiv.symm</a> <span class=\"fn\">e</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L91-L93","name":"Function.IsFixedPt.image_iterate","line":91,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.image_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.image_iterate\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">image_iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.image\">Set.image</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.image\">Set.image</a> <span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L86-L89","name":"Function.IsFixedPt.preimage_iterate","line":86,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.preimage_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.preimage_iterate\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">preimage_iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">Set.preimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">Set.preimage</a> <span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L84-L84","name":"Function.IsFixedPt.apply","line":84,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.apply\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L78-L82","name":"Function.IsFixedPt.map","line":78,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.map","doc":"If `g` (semi)conjugates `fa` to `fb`, then it sends fixed points of `fa` to fixed points\nof `fb`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.map\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fa : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fb : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">fa</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">g</span> <span class=\"fn\">fa</span> <span class=\"fn\">fb</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">fb</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L71-L74","name":"Function.IsFixedPt.to_leftInverse","line":71,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.to_leftInverse","doc":"If `x` is a fixed point of `f` and `g` is a left inverse of `f`, then `x` is a fixed\npoint of `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.to_leftInverse\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">to_leftInverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L64-L67","name":"Function.IsFixedPt.left_of_comp","line":64,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.left_of_comp","doc":"If `x` is a fixed point of `f ∘ g` and `g`, then it is a fixed point of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.left_of_comp\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">left_of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L60-L61","name":"Function.IsFixedPt.iterate","line":60,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.iterate","doc":"If `x` is a fixed point of `f`, then it is a fixed point of `f^[n]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.iterate\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L54-L57","name":"Function.IsFixedPt.comp","line":54,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.comp","doc":"If `x` is a fixed point of `f` and `g`, then it is a fixed point of `f ∘ g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.comp\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L50-L51","name":"Function.IsFixedPt.eq","line":50,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.eq","doc":"If `x` is a fixed point of `f`, then `f x = x`. This is useful, e.g., for `rw` or `simp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.eq\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L46-L47","name":"Function.IsFixedPt.decidable","line":46,"kind":"instance","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.decidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt.decidable\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span>.<span class=\"name\">decidable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L41-L42","name":"Function.isFixedPt_id","line":41,"kind":"theorem","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.isFixedPt_id","doc":"Every point is a fixed point of `id`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.isFixedPt_id\"><span class=\"name\">Function</span>.<span class=\"name\">isFixedPt_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\">Function.IsFixedPt</a> <span class=\"fn\">id</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Dynamics/FixedPoints/Basic.lean#L37-L38","name":"Function.IsFixedPt","line":37,"kind":"def","docLink":"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt","doc":"A point `x` is a fixed point of `f : α → α` if `f x = x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.IsFixedPt\"><span class=\"name\">Function</span>.<span class=\"name\">IsFixedPt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}