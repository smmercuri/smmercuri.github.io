{"name":"Mathlib.FieldTheory.IsAlgClosed.AlgebraicClosure","instances":[{"typeNames":["AlgebraicClosure.maxIdeal"],"name":"AlgebraicClosure.maxIdeal.isMaximal","className":"Ideal.IsMaximal"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.field","className":"Field"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.inhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure.AdjoinMonic"],"name":"AlgebraicClosure.AdjoinMonic.algebra","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.field","className":"Field"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.inhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure.Step","AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.algebraSucc","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.algebra","className":"Algebra"},{"typeNames":["AlgebraicClosure.Step","AlgebraicClosure.Step"],"name":"AlgebraicClosure.Step.scalar_tower","className":"IsScalarTower"},{"typeNames":["AlgebraicClosure.Step"],"name":"AlgebraicClosure.toStepOfLE.directedSystem","className":"DirectedSystem"},{"typeNames":["AlgebraicClosureAux"],"name":"AlgebraicClosureAux.instInhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosureAux"],"name":"AlgebraicClosureAux.isAlgebraic","className":"Algebra.IsAlgebraic"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instCommRing","className":"CommRing"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instInhabited","className":"Inhabited"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instSMulOfIsScalarTower","className":"SMul"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instAlgebra","className":"Algebra"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instIsScalarTower","className":"IsScalarTower"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instGroupWithZero","className":"GroupWithZero"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instField","className":"Field"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.isAlgClosed","className":"IsAlgClosed"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instIsAlgClosure","className":"IsAlgClosure"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.isAlgebraic","className":"Algebra.IsAlgebraic"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instCharZero","className":"CharZero"},{"typeNames":["AlgebraicClosure"],"name":"AlgebraicClosure.instCharP","className":"CharP"}],"imports":["Init","Mathlib.Algebra.DirectLimit","Mathlib.Algebra.CharP.Algebra","Mathlib.FieldTheory.IsAlgClosed.Basic","Mathlib.FieldTheory.SplittingField.Construction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L415-L416","name":"AlgebraicClosure.instCharP","line":415,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharP\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instCharP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L412-L413","name":"AlgebraicClosure.instCharZero","line":412,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCharZero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instCharZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L409-L410","name":"AlgebraicClosure.isAlgebraic","line":409,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgebraic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgebraic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">isAlgebraic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L405-L407","name":"AlgebraicClosure.instIsAlgClosure","line":405,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsAlgClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsAlgClosure\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instIsAlgClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosure\">IsAlgClosure</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L402-L403","name":"AlgebraicClosure.isAlgClosed","line":402,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.isAlgClosed\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">isAlgClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L387-L400","name":"AlgebraicClosure.instField","line":387,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instField\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L380-L385","name":"AlgebraicClosure.instGroupWithZero","line":380,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instGroupWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instGroupWithZero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instGroupWithZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L373-L377","name":"AlgebraicClosure.algEquivAlgebraicClosureAux","line":373,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.algEquivAlgebraicClosureAux","doc":"The equivalence between `AlgebraicClosure` and `AlgebraicClosureAux`, which we use to transfer\nproperties of `AlgebraicClosureAux` to `AlgebraicClosure` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.algEquivAlgebraicClosureAux\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">algEquivAlgebraicClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L367-L369","name":"AlgebraicClosure.instIsScalarTower","line":367,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsScalarTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instIsScalarTower\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instIsScalarTower</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L364-L365","name":"AlgebraicClosure.instAlgebra","line":364,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instAlgebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L361-L362","name":"AlgebraicClosure.instSMulOfIsScalarTower","line":361,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instSMulOfIsScalarTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instSMulOfIsScalarTower\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instSMulOfIsScalarTower</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">k</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L359-L359","name":"AlgebraicClosure.instInhabited","line":359,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instInhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L358-L358","name":"AlgebraicClosure.instCommRing","line":358,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.instCommRing\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">instCommRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\">AlgebraicClosure</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L352-L354","name":"AlgebraicClosure","line":352,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure","doc":"The canonical algebraic closure of a field, the direct limit of adding roots to the field for\neach polynomial over the field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure\"><span class=\"name\">AlgebraicClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L342-L343","name":"AlgebraicClosureAux.isAlgClosure","line":342,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgClosure\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">isAlgClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosure\">IsAlgClosure</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L336-L340","name":"AlgebraicClosureAux.isAlgebraic","line":336,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgebraic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.isAlgebraic\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">isAlgebraic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Algebraic.html#Algebra.IsAlgebraic\">Algebra.IsAlgebraic</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L325-L334","name":"AlgebraicClosureAux.ofStepHom","line":325,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStepHom","doc":"Canonical algebra embedding from the `n`th step to the algebraic closure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStepHom\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStepHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L321-L322","name":"AlgebraicClosureAux.instAlgebra","line":321,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instAlgebra","doc":"`AlgebraicClosureAux k` is a `k`-`Algebra` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instAlgebra\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L317-L318","name":"AlgebraicClosureAux.instIsAlgClosed","line":317,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instIsAlgClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instIsAlgClosed\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instIsAlgClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L306-L315","name":"AlgebraicClosureAux.exists_root","line":306,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_root\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><span class=\"fn\">f</span>.Monic</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L303-L304","name":"AlgebraicClosureAux.exists_ofStep","line":303,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_ofStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.exists_ofStep\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">exists_ofStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L286-L295","name":"AlgebraicClosureAux.ofStep_succ","line":286,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep_succ\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStep_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\">AlgebraicClosureAux.ofStep</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L283-L284","name":"AlgebraicClosureAux.ofStep","line":283,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep","doc":"The canonical ring embedding from the `n`th step to the algebraic closure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.ofStep\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">ofStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L279-L280","name":"AlgebraicClosureAux.instInhabited","line":279,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.instInhabited\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L276-L277","name":"AlgebraicClosureAux.field","line":276,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.field","doc":"`AlgebraicClosureAux k` is a `Field` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux.field\"><span class=\"name\">AlgebraicClosureAux</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\">AlgebraicClosureAux</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L268-L269","name":"AlgebraicClosureAux","line":268,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux","doc":"Auxiliary construction for `AlgebraicClosure`. Although `AlgebraicClosureAux` does define\nthe algebraic closure of a field, it is redefined at `AlgebraicClosure` in order to make sure\ncertain instance diamonds commute by definition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosureAux\"><span class=\"name\">AlgebraicClosureAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L259-L260","name":"AlgebraicClosure.toStepOfLE.directedSystem","line":259,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE.directedSystem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE.directedSystem\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepOfLE</span>.<span class=\"name\">directedSystem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectLimit.html#DirectedSystem\">DirectedSystem</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> <span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\">AlgebraicClosure.toStepOfLE</a> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L237-L257","name":"AlgebraicClosure.Step.isIntegral","line":237,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.isIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.isIntegral\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">isIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">k</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L223-L225","name":"AlgebraicClosure.Step.scalar_tower","line":223,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.scalar_tower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.scalar_tower\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">scalar_tower</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L220-L221","name":"AlgebraicClosure.Step.algebra","line":220,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">algebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L216-L218","name":"AlgebraicClosure.coe_toStepOfLE","line":216,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.coe_toStepOfLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.coe_toStepOfLE\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">coe_toStepOfLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\">AlgebraicClosure.toStepOfLE</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span> <span class=\"fn\">n</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span>) =&gt;\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Defs.html#Nat.leRecOn\">Nat.leRecOn</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L188-L213","name":"AlgebraicClosure.toStepOfLE","line":188,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE","doc":"The canonical ring homomorphism to a step with a greater index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepOfLE\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepOfLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L168-L174","name":"AlgebraicClosure.toStepSucc.exists_root","line":168,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc.exists_root\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepSucc</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><span class=\"fn\">f</span>.Monic</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\">AlgebraicClosure.toStepSucc</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L165-L166","name":"AlgebraicClosure.Step.algebraSucc","line":165,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebraSucc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.algebraSucc\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">algebraSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L162-L163","name":"AlgebraicClosure.toStepSucc","line":162,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc","doc":"The canonical ring homomorphism to the next step. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepSucc\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L158-L159","name":"AlgebraicClosure.toStepZero","line":158,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepZero","doc":"The canonical inclusion to the `0`th step. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toStepZero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toStepZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L154-L155","name":"AlgebraicClosure.Step.inhabited","line":154,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.inhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L152-L152","name":"AlgebraicClosure.Step.succ","line":152,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.succ\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L148-L149","name":"AlgebraicClosure.Step.field","line":148,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.field\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L146-L146","name":"AlgebraicClosure.Step.zero","line":146,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step.zero\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\">AlgebraicClosure.Step</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L142-L143","name":"AlgebraicClosure.Step","line":142,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step","doc":"The `n`th step of constructing `AlgebraicClosure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.Step\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">Step</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L138-L139","name":"AlgebraicClosure.stepAux","line":138,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.stepAux","doc":"The `n`th step of constructing `AlgebraicClosure`, together with its `Field` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.stepAux\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">stepAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u) × <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L130-L135","name":"AlgebraicClosure.AdjoinMonic.exists_root","line":130,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.exists_root","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.exists_root\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">exists_root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfm : <span class=\"fn\"><span class=\"fn\">f</span>.Monic</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfi : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic\">AlgebraicClosure.toAdjoinMonic</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L118-L128","name":"AlgebraicClosure.AdjoinMonic.isIntegral","line":118,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.isIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.isIntegral\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">isIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure/IsIntegral/Defs.html#IsIntegral\">IsIntegral</a> <span class=\"fn\">k</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L115-L116","name":"AlgebraicClosure.AdjoinMonic.algebraMap","line":115,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebraMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebraMap\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">algebraMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span>)</span></span>)</span>.comp</span> <span class=\"fn\">MvPolynomial.C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L111-L112","name":"AlgebraicClosure.AdjoinMonic.algebra","line":111,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.algebra\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">algebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L108-L109","name":"AlgebraicClosure.toAdjoinMonic","line":108,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic","doc":"The canonical ring homomorphism to `AdjoinMonic k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toAdjoinMonic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toAdjoinMonic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L104-L105","name":"AlgebraicClosure.AdjoinMonic.inhabited","line":104,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.inhabited\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L101-L102","name":"AlgebraicClosure.AdjoinMonic.field","line":101,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic.field\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\">AlgebraicClosure.AdjoinMonic</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L98-L99","name":"AlgebraicClosure.AdjoinMonic","line":98,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic","doc":"The first step of constructing `AlgebraicClosure`: adjoin a root of all monic polynomials "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.AdjoinMonic\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">AdjoinMonic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L94-L95","name":"AlgebraicClosure.le_maxIdeal","line":94,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.le_maxIdeal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.le_maxIdeal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">le_maxIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\">AlgebraicClosure.spanEval</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L91-L92","name":"AlgebraicClosure.maxIdeal.isMaximal","line":91,"kind":"instance","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal.isMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal.isMaximal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">maxIdeal</span>.<span class=\"name\">isMaximal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\">AlgebraicClosure.maxIdeal</a> <span class=\"fn\">k</span></span>)</span>.IsMaximal</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L88-L89","name":"AlgebraicClosure.maxIdeal","line":88,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal","doc":"A random maximal ideal that contains `spanEval k` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.maxIdeal\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">maxIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L76-L85","name":"AlgebraicClosure.spanEval_ne_top","line":76,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval_ne_top\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">spanEval_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\">AlgebraicClosure.spanEval</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L70-L74","name":"AlgebraicClosure.toSplittingField_evalXSelf","line":70,"kind":"theorem","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField_evalXSelf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField_evalXSelf\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toSplittingField_evalXSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField\">AlgebraicClosure.toSplittingField</a> <span class=\"fn\">k</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf\">AlgebraicClosure.evalXSelf</a> <span class=\"fn\">k</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L60-L68","name":"AlgebraicClosure.toSplittingField","line":60,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField","doc":"Given a finset of monic irreducible polynomials, construct an algebra homomorphism to the\nsplitting field of the product of the polynomials sending each indeterminate `x_f` represented by\nthe polynomial `f` in the finset to a root of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.toSplittingField\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">toSplittingField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span>.SplittingField</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L54-L55","name":"AlgebraicClosure.spanEval","line":54,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval","doc":"The span of `f(x_f)` across monic irreducible polynomials `f` where `x_f` is an\nindeterminate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.spanEval\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">spanEval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L49-L50","name":"AlgebraicClosure.evalXSelf","line":49,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf","doc":"Sends a monic irreducible polynomial `f` to `f(x_f)` where `x_f` is a formal indeterminate. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.evalXSelf\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">evalXSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\">AlgebraicClosure.MonicIrreducible</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.lean#L45-L46","name":"AlgebraicClosure.MonicIrreducible","line":45,"kind":"def","docLink":"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible","doc":"The subtype of monic irreducible polynomials "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/FieldTheory/IsAlgClosed/AlgebraicClosure.html#AlgebraicClosure.MonicIrreducible\"><span class=\"name\">AlgebraicClosure</span>.<span class=\"name\">MonicIrreducible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}