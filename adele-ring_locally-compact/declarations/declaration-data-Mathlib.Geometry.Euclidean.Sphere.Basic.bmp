{"name":"Mathlib.Geometry.Euclidean.Sphere.Basic","instances":[{"typeNames":["EuclideanGeometry.Sphere"],"name":"EuclideanGeometry.instNonemptySphere","className":"Nonempty"},{"typeNames":["EuclideanGeometry.Sphere","Set"],"name":"EuclideanGeometry.instCoeSphereSet","className":"Coe"},{"typeNames":["EuclideanGeometry.Sphere"],"name":"EuclideanGeometry.instMembershipSphere","className":"Membership"}],"imports":["Init","Mathlib.Analysis.Convex.StrictConvexBetween","Mathlib.Geometry.Euclidean.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L346-L349","name":"EuclideanGeometry.sbtw_of_collinear_of_dist_center_lt_radius","line":346,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.sbtw_of_collinear_of_dist_center_lt_radius","doc":"Given three collinear points, two on a sphere and one inside it, the one inside it is\nstrictly between the other two points. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.sbtw_of_collinear_of_dist_center_lt_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">sbtw_of_collinear_of_dist_center_lt_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₃ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.html#Collinear\">Collinear</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">{<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>, <span class=\"fn\">p₃</span>}</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₃ : <span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁p₃ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Between.html#Sbtw\">Sbtw</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span> <span class=\"fn\">p₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L339-L342","name":"EuclideanGeometry.wbtw_of_collinear_of_dist_center_le_radius","line":339,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.wbtw_of_collinear_of_dist_center_le_radius","doc":"Given three collinear points, two on a sphere and one not outside it, the one not outside it\nis weakly between the other two points. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.wbtw_of_collinear_of_dist_center_le_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">wbtw_of_collinear_of_dist_center_le_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₃ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.html#Collinear\">Collinear</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">{<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>, <span class=\"fn\">p₃</span>}</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₃ : <span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁p₃ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Between.html#Wbtw\">Wbtw</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span> <span class=\"fn\">p₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L330-L335","name":"EuclideanGeometry.inner_pos_of_dist_lt_radius","line":330,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_pos_of_dist_lt_radius","doc":"Given a point on a sphere and a point inside it, the inner product between the difference of\nthose points and the radius vector is positive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_pos_of_dist_lt_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">inner_pos_of_dist_lt_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">⟪<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>, <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span>⟫_<a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L322-L326","name":"EuclideanGeometry.inner_nonneg_of_dist_le_radius","line":322,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_nonneg_of_dist_le_radius","doc":"Given a point on a sphere and a point not outside it, the inner product between the\ndifference of those points and the radius vector is nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_nonneg_of_dist_le_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">inner_nonneg_of_dist_le_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">⟪<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>, <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span>⟫_<a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L293-L318","name":"EuclideanGeometry.inner_pos_or_eq_of_dist_le_radius","line":293,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_pos_or_eq_of_dist_le_radius","doc":"Given a point on a sphere and a point not outside it, the inner product between the\ndifference of those points and the radius vector is positive unless the points are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_pos_or_eq_of_dist_le_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">inner_pos_or_eq_of_dist_le_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">⟪<span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₂</span></span>, <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span>⟫_<a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L284-L289","name":"EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_finrank_eq_two","line":284,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_finrank_eq_two","doc":"Two spheres intersect in at most two points in two-dimensional space; this is a version of\n`eq_of_dist_eq_of_dist_eq_of_finrank_eq_two` for bundled spheres. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_finrank_eq_two\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">eq_of_mem_sphere_of_mem_sphere_of_finrank_eq_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₁ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps₁ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₂ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps₂ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L274-L280","name":"EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_mem_of_finrank_eq_two","line":274,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_mem_of_finrank_eq_two","doc":"Two spheres intersect in at most two points in a two-dimensional subspace containing their\ncenters; this is a version of `eq_of_dist_eq_of_dist_eq_of_mem_of_finrank_eq_two` for bundled\nspheres. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.eq_of_mem_sphere_of_mem_sphere_of_mem_of_finrank_eq_two\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">eq_of_mem_sphere_of_mem_sphere_of_mem_of_finrank_eq_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace.html#AffineSubspace\">AffineSubspace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">s</span>.direction</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">s</span>.direction</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.center</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.center</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₁ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps₁ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₂ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps₂ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L265-L269","name":"EuclideanGeometry.inner_vsub_vsub_of_mem_sphere_of_mem_sphere","line":265,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_vsub_vsub_of_mem_sphere_of_mem_sphere","doc":"Suppose that `p₁` and `p₂` lie in spheres `s₁` and `s₂`. Then the vector between the centers\nof those spheres is orthogonal to that between `p₁` and `p₂`; this is a version of\n`inner_vsub_vsub_of_dist_eq_of_dist_eq` for bundled spheres. (In two dimensions, this says that\nthe diagonals of a kite are orthogonal.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.inner_vsub_vsub_of_mem_sphere_of_mem_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">inner_vsub_vsub_of_mem_sphere_of_mem_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₁ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₁s₂ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂s₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟪<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.center</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">s₁</span>.center</span></span>, <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\">p₁</span></span>⟫_<a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L255-L259","name":"EuclideanGeometry.Cospherical.affineIndependent_of_ne","line":255,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent_of_ne","doc":"The three points of a cospherical set are affinely independent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent_of_ne\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Cospherical</span>.<span class=\"name\">affineIndependent_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₃ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">{<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>, <span class=\"fn\">p₃</span>}</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁₂ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁₃ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂₃ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#AffineIndependent\">AffineIndependent</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">![<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>, <span class=\"fn\">p₃</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L246-L252","name":"EuclideanGeometry.Cospherical.affineIndependent_of_mem_of_ne","line":246,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent_of_mem_of_ne","doc":"Any three points in a cospherical set are affinely independent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent_of_mem_of_ne\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Cospherical</span>.<span class=\"name\">affineIndependent_of_mem_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₃ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\"><span class=\"fn\">p₃</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁₂ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁₃ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂₃ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">p₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#AffineIndependent\">AffineIndependent</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">![<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>, <span class=\"fn\">p₃</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L209-L243","name":"EuclideanGeometry.Cospherical.affineIndependent","line":209,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent","doc":"Any three points in a cospherical set are affinely independent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.affineIndependent\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Cospherical</span>.<span class=\"name\">affineIndependent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hps : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpi : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#AffineIndependent\">AffineIndependent</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L199-L200","name":"EuclideanGeometry.concyclic_pair","line":199,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_pair","doc":"Two points are concyclic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_pair\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">concyclic_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">{<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L195-L196","name":"EuclideanGeometry.concyclic_singleton","line":195,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_singleton","doc":"A single point is concyclic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_singleton\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">concyclic_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">{<span class=\"fn\">p</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L191-L192","name":"EuclideanGeometry.concyclic_empty","line":191,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_empty","doc":"The empty set is concyclic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.concyclic_empty\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">concyclic_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L187-L188","name":"EuclideanGeometry.Concyclic.subset","line":187,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.subset","doc":"A subset of a concyclic set is concyclic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.subset\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Concyclic</span>.<span class=\"name\">subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">ps₁</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">ps₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">ps₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">ps₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L184-L184","name":"EuclideanGeometry.Concyclic.Coplanar","line":184,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.Coplanar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.Coplanar\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Concyclic</span>.<span class=\"name\">Coplanar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.html#Coplanar\">Coplanar</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">ps</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L183-L183","name":"EuclideanGeometry.Concyclic.Cospherical","line":183,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.Cospherical","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.Cospherical\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Concyclic</span>.<span class=\"name\">Cospherical</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L182-L182","name":"EuclideanGeometry.Concyclic.mk","line":182,"kind":"ctor","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic.mk\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Concyclic</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Cospherical : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Coplanar : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/FiniteDimensional.html#Coplanar\">_root_.Coplanar</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\">EuclideanGeometry.Concyclic</a> <span class=\"fn\">ps</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L182-L184","name":"EuclideanGeometry.Concyclic","line":182,"kind":"structure","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic","doc":"A set of points is concyclic if it is cospherical and coplanar. (Most results are stated\ndirectly in terms of `Cospherical` instead of using `Concyclic`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Concyclic\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Concyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L174-L178","name":"EuclideanGeometry.cospherical_pair","line":174,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_pair","doc":"Two points are cospherical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_pair\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">cospherical_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₂ : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">{<span class=\"fn\">p₁</span>, <span class=\"fn\">p₂</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L163-L165","name":"EuclideanGeometry.cospherical_singleton","line":163,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_singleton","doc":"A single point is cospherical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_singleton\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">cospherical_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">{<span class=\"fn\">p</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L158-L160","name":"EuclideanGeometry.cospherical_empty","line":158,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_empty","doc":"The empty set is cospherical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_empty\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">cospherical_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L152-L155","name":"EuclideanGeometry.Cospherical.subset","line":152,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.subset","doc":"A subset of a cospherical set is cospherical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical.subset\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Cospherical</span>.<span class=\"name\">subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">ps₁</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">ps₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L148-L149","name":"EuclideanGeometry.Sphere.cospherical","line":148,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.cospherical","doc":"The set of points in a sphere is cospherical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.cospherical\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">cospherical</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L139-L145","name":"EuclideanGeometry.cospherical_iff_exists_sphere","line":139,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_iff_exists_sphere","doc":"A set of points is cospherical if and only if they lie in some sphere. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_iff_exists_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">cospherical_iff_exists_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>), <span class=\"fn\"><span class=\"fn\">ps</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L134-L136","name":"EuclideanGeometry.cospherical_def","line":134,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_def","doc":"The definition of `Cospherical`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.cospherical_def\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">cospherical_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\">EuclideanGeometry.Cospherical</a> <span class=\"fn\">ps</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">center</span> : <span class=\"fn\">P</span>) (<span class=\"fn\">radius</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">ps</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p</span> <span class=\"fn\">center</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">radius</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L130-L131","name":"EuclideanGeometry.Cospherical","line":130,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical","doc":"A set of points is cospherical if they are equidistant from some\npoint. In two dimensions, this is the same thing as being\nconcyclic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Cospherical\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Cospherical</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L123-L125","name":"EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere'","line":123,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere'\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">dist_center_eq_dist_center_of_mem_sphere'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L119-L121","name":"EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere","line":119,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_center_eq_dist_center_of_mem_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">dist_center_eq_dist_center_of_mem_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp₂ : <span class=\"fn\"><span class=\"fn\">p₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₁</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L115-L117","name":"EuclideanGeometry.Sphere.center_ne_iff_ne_of_mem","line":115,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center_ne_iff_ne_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center_ne_iff_ne_of_mem\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">center_ne_iff_ne_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs₁ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₂ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.center</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.center</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L109-L113","name":"EuclideanGeometry.Sphere.center_eq_iff_eq_of_mem","line":109,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center_eq_iff_eq_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center_eq_iff_eq_of_mem\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">center_eq_iff_eq_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs₁ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₂ : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.center</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.center</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L105-L107","name":"EuclideanGeometry.Sphere.ne_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ne_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ne_iff\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">ne_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.center</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.center</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.radius</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.radius</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L101-L103","name":"EuclideanGeometry.dist_of_mem_subset_mk_sphere","line":101,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_of_mem_subset_mk_sphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_of_mem_subset_mk_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">dist_of_mem_subset_mk_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps : <span class=\"fn\"><span class=\"fn\">ps</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.center</span> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.radius</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L97-L99","name":"EuclideanGeometry.dist_of_mem_subset_sphere","line":97,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_of_mem_subset_sphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.dist_of_mem_subset_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">dist_of_mem_subset_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">ps</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps : <span class=\"fn\"><span class=\"fn\">ps</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L94-L95","name":"EuclideanGeometry.subset_sphere","line":94,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.subset_sphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.subset_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">subset_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ps : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ps</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">ps</span>, <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L91-L92","name":"EuclideanGeometry.mem_sphere'","line":91,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.mem_sphere'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.mem_sphere'\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">mem_sphere'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L88-L89","name":"EuclideanGeometry.mem_sphere","line":88,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.mem_sphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.mem_sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">mem_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L85-L86","name":"EuclideanGeometry.Sphere.mem_coe'","line":85,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mem_coe'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mem_coe'\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mem_coe'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">s</span>.center</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L81-L82","name":"EuclideanGeometry.Sphere.mem_coe","line":81,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mem_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mem_coe\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mem_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">s</span>.center</span> <span class=\"fn\"><span class=\"fn\">s</span>.radius</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L77-L78","name":"EuclideanGeometry.Sphere.coe_mk","line":77,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.coe_mk\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.center</span> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.radius</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">c</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L69-L70","name":"EuclideanGeometry.Sphere.mk_center_radius","line":69,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_center_radius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_center_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mk_center_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\"><span class=\"fn\">s</span>.center</span>, <span class=\"fn\">radius</span> := <span class=\"fn\"><span class=\"fn\">s</span>.radius</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L65-L66","name":"EuclideanGeometry.Sphere.mk_radius","line":65,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_radius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mk_radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.radius</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L62-L63","name":"EuclideanGeometry.Sphere.mk_center","line":62,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk_center\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mk_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">center</span> := <span class=\"fn\">c</span>, <span class=\"fn\">radius</span> := <span class=\"fn\">r</span> }</span>.center</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L59-L60","name":"EuclideanGeometry.instMembershipSphere","line":59,"kind":"instance","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instMembershipSphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instMembershipSphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">instMembershipSphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L56-L57","name":"EuclideanGeometry.instCoeSphereSet","line":56,"kind":"instance","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instCoeSphereSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instCoeSphereSet\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">instCoeSphereSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L53-L54","name":"EuclideanGeometry.instNonemptySphere","line":53,"kind":"instance","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instNonemptySphere","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.instNonemptySphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">instNonemptySphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L45-L45","name":"EuclideanGeometry.Sphere.radius","line":45,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.radius","doc":"radius of the sphere: not required to be positive "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.radius\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">radius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L43-L43","name":"EuclideanGeometry.Sphere.center","line":43,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center","doc":"center of this sphere "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.center\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L41-L41","name":"EuclideanGeometry.Sphere.mk","line":41,"kind":"ctor","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.mk\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(center : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(radius : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L41-L45","name":"EuclideanGeometry.Sphere","line":41,"kind":"structure","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere","doc":"A `Sphere P` bundles a `center` and `radius`. This definition does not require the radius to\nbe positive; that should be given as a hypothesis to lemmas that require it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(P : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L40-L40","name":"EuclideanGeometry.Sphere.ext_iff","line":40,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ext_iff\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>} (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.center</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.center</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.radius</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.radius</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Geometry/Euclidean/Sphere/Basic.lean#L40-L40","name":"EuclideanGeometry.Sphere.ext","line":40,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere.ext\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">Sphere</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>} (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Sphere/Basic.html#EuclideanGeometry.Sphere\">EuclideanGeometry.Sphere</a> <span class=\"fn\">P</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.center</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.center</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.radius</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.radius</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"}]}