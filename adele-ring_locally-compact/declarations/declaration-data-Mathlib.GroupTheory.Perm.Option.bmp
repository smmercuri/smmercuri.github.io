{"name":"Mathlib.GroupTheory.Perm.Option","instances":[],"imports":["Init","Mathlib.Data.Fintype.Option","Mathlib.Data.Fintype.Perm","Mathlib.Data.Fintype.Prod","Mathlib.GroupTheory.Perm.Sign","Mathlib.Logic.Equiv.Option"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L77-L80","name":"Finset.univ_perm_option","line":77,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Finset.univ_perm_option","doc":"The set of all permutations of `Option α` can be constructed by augmenting the set of\npermutations of `α` by each element of `Option α` in turn. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Finset.univ_perm_option\"><span class=\"name\">Finset</span>.<span class=\"name\">univ_perm_option</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Finset.univ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.decomposeOption</span>.symm</span>.toEmbedding</span> <span class=\"fn\">Finset.univ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L72-L73","name":"Equiv.Perm.decomposeOption_symm_sign","line":72,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_sign","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_sign\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">decomposeOption_symm_sign</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.sign</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.decomposeOption</span>.symm</span> <span class=\"fn\">(<span class=\"fn\">none</span>, <span class=\"fn\">e</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Equiv.Perm.sign</span> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L69-L70","name":"Equiv.Perm.decomposeOption_symm_of_none_apply","line":69,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_of_none_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_of_none_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">decomposeOption_symm_of_none_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.decomposeOption</span>.symm</span> <span class=\"fn\">(<span class=\"fn\">none</span>, <span class=\"fn\">e</span>)</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">e</span></span>)</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L59-L67","name":"Equiv.Perm.decomposeOption","line":59,"kind":"def","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption","doc":"Permutations of `Option α` are equivalent to fixing an\n`Option α` and permuting the remaining with a `Perm α`.\nThe fixed `Option α` is swapped with `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">decomposeOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L58-L58","name":"Equiv.Perm.decomposeOption_symm_apply","line":58,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_symm_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">decomposeOption_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.decomposeOption</span>.symm</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">none</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr\">Equiv.optionCongr</a> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L58-L58","name":"Equiv.Perm.decomposeOption_apply","line":58,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.Perm.decomposeOption_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">decomposeOption_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.decomposeOption</span> <span class=\"fn\">σ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> <span class=\"fn\">none</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone\">Equiv.removeNone</a> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L42-L53","name":"map_equiv_removeNone","line":42,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#map_equiv_removeNone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#map_equiv_removeNone\"><span class=\"name\">map_equiv_removeNone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone\">Equiv.removeNone</a> <span class=\"fn\">σ</span></span>)</span>.optionCongr</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">none</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> <span class=\"fn\">none</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L34-L39","name":"Equiv.optionCongr_sign","line":34,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_sign","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_sign\"><span class=\"name\">Equiv</span>.<span class=\"name\">optionCongr_sign</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.sign</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr\">Equiv.optionCongr</a> <span class=\"fn\">e</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Equiv.Perm.sign</span> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L24-L31","name":"Equiv.optionCongr_swap","line":24,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_swap\"><span class=\"name\">Equiv</span>.<span class=\"name\">optionCongr_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr\">Equiv.optionCongr</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/GroupTheory/Perm/Option.lean#L20-L21","name":"Equiv.optionCongr_one","line":20,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Option.html#Equiv.optionCongr_one\"><span class=\"name\">Equiv</span>.<span class=\"name\">optionCongr_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.optionCongr\">Equiv.optionCongr</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"}]}