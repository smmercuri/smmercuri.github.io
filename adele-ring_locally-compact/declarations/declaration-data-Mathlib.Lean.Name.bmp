{"name":"Mathlib.Lean.Name","instances":[],"imports":["Init","Batteries.Data.HashMap.Basic","Batteries.Lean.SMap","Lean.Meta.Match.MatcherInfo","Lean.Meta.Tactic.Delta"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Lean/Name.lean#L63-L64","name":"Lean.Meta.unfoldAuxLemmas","line":63,"kind":"def","docLink":"./Mathlib/Lean/Name.html#Lean.Meta.unfoldAuxLemmas","doc":"Unfold all lemmas created by `Lean.Meta.mkAuxLemma`.\nThe names of these lemmas end in `_auxLemma.nn` where `nn` is a number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Name.html#Lean.Meta.unfoldAuxLemmas\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">unfoldAuxLemmas</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Lean/Name.lean#L59-L59","name":"Lean.Name.isAuxLemma","line":59,"kind":"def","docLink":"./Mathlib/Lean/Name.html#Lean.Name.isAuxLemma","doc":"Whether the lemma has a name of the form produced by `Lean.Meta.mkAuxLemma`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Name.html#Lean.Name.isAuxLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isAuxLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Lean/Name.lean#L53-L56","name":"Lean.Name.decapitalize","line":53,"kind":"def","docLink":"./Mathlib/Lean/Name.html#Lean.Name.decapitalize","doc":"Decapitalize the last component of a name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Name.html#Lean.Name.decapitalize\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">decapitalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Lean/Name.lean#L41-L50","name":"allNamesByModule","line":41,"kind":"def","docLink":"./Mathlib/Lean/Name.html#allNamesByModule","doc":"Retrieve all names in the environment satisfying a predicate,\ngathered together into a `HashMap` according to the module they are defined in.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Name.html#allNamesByModule\"><span class=\"name\">allNamesByModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Batteries/Data/HashMap/Basic.html#Batteries.HashMap\">Batteries.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Lean/Name.lean#L30-L35","name":"allNames","line":30,"kind":"def","docLink":"./Mathlib/Lean/Name.html#allNames","doc":"Retrieve all names in the environment satisfying a predicate.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Name.html#allNames\"><span class=\"name\">allNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span></div></div>"}]}