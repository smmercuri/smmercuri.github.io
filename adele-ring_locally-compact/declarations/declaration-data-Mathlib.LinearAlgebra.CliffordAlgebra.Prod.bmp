{"name":"Mathlib.LinearAlgebra.CliffordAlgebra.Prod","instances":[],"imports":["Init","Mathlib.LinearAlgebra.CliffordAlgebra.Grading","Mathlib.LinearAlgebra.TensorProduct.Graded.Internal","Mathlib.LinearAlgebra.QuadraticForm.Prod"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L164-L164","name":"CliffordAlgebra.prodEquiv_apply","line":164,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv_apply\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">prodEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv\">CliffordAlgebra.prodEquiv</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd\">CliffordAlgebra.ofProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L164-L164","name":"CliffordAlgebra.prodEquiv_symm_apply","line":164,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv_symm_apply\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">prodEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct\">GradedTensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv.symm\">AlgEquiv.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv\">CliffordAlgebra.prodEquiv</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\">CliffordAlgebra.toProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L160-L166","name":"CliffordAlgebra.prodEquiv","line":160,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv","doc":"The Clifford algebra over an orthogonal direct sum of quadratic vector spaces is isomorphic\nas an algebra to the graded tensor product of the Clifford algebras of each space.\n\nThis is `CliffordAlgebra.toProd` and `CliffordAlgebra.ofProd` as an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.prodEquiv\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">prodEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct\">GradedTensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L157-L158","name":"CliffordAlgebra.ofProd_comp_toProd","line":157,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd_comp_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd_comp_toProd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">ofProd_comp_toProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">AlgHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd\">CliffordAlgebra.ofProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\">CliffordAlgebra.toProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct\">GradedTensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L150-L155","name":"CliffordAlgebra.toProd_comp_ofProd","line":150,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_comp_ofProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_comp_ofProd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">toProd_comp_ofProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">AlgHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\">CliffordAlgebra.toProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd\">CliffordAlgebra.ofProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.id\">AlgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L146-L148","name":"CliffordAlgebra.toProd_one_tmul_ι","line":146,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_one_tmul_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_one_tmul_ι\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">toProd_one_tmul_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\">CliffordAlgebra.toProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">ᵍ⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">]</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">m₂</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">m₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L141-L143","name":"CliffordAlgebra.toProd_ι_tmul_one","line":141,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_ι_tmul_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd_ι_tmul_one\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">toProd_ι_tmul_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\">M₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\">CliffordAlgebra.toProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">ᵍ⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">]</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">0</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L133-L138","name":"CliffordAlgebra.toProd","line":133,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd","doc":"The reverse direction of `CliffordAlgebra.prodEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.toProd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">toProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct\">GradedTensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L128-L131","name":"CliffordAlgebra.ofProd_ι_mk","line":128,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd_ι_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd_ι_mk\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">ofProd_ι_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\">M₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\">M₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd\">CliffordAlgebra.ofProd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">ᵍ⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">]</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">ᵍ⊗ₜ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct.tmul\">]</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.ι\">CliffordAlgebra.ι</a> <span class=\"fn\">Q₂</span></span>)</span> <span class=\"fn\">m₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L108-L125","name":"CliffordAlgebra.ofProd","line":108,"kind":"def","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd","doc":"The forward direction of `CliffordAlgebra.prodEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.ofProd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">ofProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Prod.html#QuadraticForm.prod\">QuadraticForm.prod</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">Q₂</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorProduct/Graded/Internal.html#GradedTensorProduct\">GradedTensorProduct</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L101-L104","name":"CliffordAlgebra.map_mul_map_eq_neg_of_isOrtho_of_mem_evenOdd_one","line":101,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.map_mul_map_eq_neg_of_isOrtho_of_mem_evenOdd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.map_mul_map_eq_neg_of_isOrtho_of_mem_evenOdd_one\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">map_mul_map_eq_neg_of_isOrtho_of_mem_evenOdd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Qₙ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">Q₁</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">Q₂</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M₁</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">M₂</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm.IsOrtho\">QuadraticForm.IsOrtho</a> <span class=\"fn\">Qₙ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₁ : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₂ : <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L96-L99","name":"CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_right","line":96,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_right\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Qₙ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">Q₁</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">Q₂</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M₁</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">M₂</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm.IsOrtho\">QuadraticForm.IsOrtho</a> <span class=\"fn\">Qₙ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm₁ : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">i₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₂ : <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L91-L94","name":"CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_left","line":91,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_left\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">commute_map_mul_map_of_isOrtho_of_mem_evenOdd_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Qₙ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">Q₁</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">Q₂</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M₁</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">M₂</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm.IsOrtho\">QuadraticForm.IsOrtho</a> <span class=\"fn\">Qₙ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm₁ : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₂ : <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span> <span class=\"fn\">i₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/LinearAlgebra/CliffordAlgebra/Prod.lean#L49-L89","name":"CliffordAlgebra.map_mul_map_of_isOrtho_of_mem_evenOdd","line":49,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.map_mul_map_of_isOrtho_of_mem_evenOdd","doc":"If `m₁` and `m₂` are both homogenous,\nand the quadratic spaces `Q₁` and `Q₂` map into\northogonal subspaces of `Qₙ` (for instance, when `Qₙ = Q₁.prod Q₂`),\nthen the product of the embedding in `CliffordAlgebra Q` commutes up to a sign factor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Prod.html#CliffordAlgebra.map_mul_map_of_isOrtho_of_mem_evenOdd\"><span class=\"name\">CliffordAlgebra</span>.<span class=\"name\">map_mul_map_of_isOrtho_of_mem_evenOdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₁ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₂ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">M₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Qₙ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm\">QuadraticForm</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">Q₁</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">Q₂</span> <a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Isometry.html#QuadraticForm.Isometry\">→qᵢ</a> <span class=\"fn\">Qₙ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M₁</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">M₂</span>), <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/QuadraticForm/Basic.html#QuadraticForm.IsOrtho\">QuadraticForm.IsOrtho</a> <span class=\"fn\">Qₙ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">y</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra\">CliffordAlgebra</a> <span class=\"fn\">Q₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₁ : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i₂ : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm₁ : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₁</span> <span class=\"fn\">i₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm₂ : <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Grading.html#CliffordAlgebra.evenOdd\">CliffordAlgebra.evenOdd</a> <span class=\"fn\">Q₂</span> <span class=\"fn\">i₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">i₁</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">m₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/CliffordAlgebra/Basic.html#CliffordAlgebra.map\">CliffordAlgebra.map</a> <span class=\"fn\">f₁</span></span>)</span> <span class=\"fn\">m₁</span></span></span>)</span></span></span></div></div>"}]}