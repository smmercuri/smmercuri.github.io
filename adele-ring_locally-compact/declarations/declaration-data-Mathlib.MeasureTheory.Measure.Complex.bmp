{"name":"Mathlib.MeasureTheory.Measure.Complex","instances":[],"imports":["Init","Mathlib.MeasureTheory.Measure.VectorMeasure"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L105-L111","name":"MeasureTheory.ComplexMeasure.absolutelyContinuous_ennreal_iff","line":105,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.absolutelyContinuous_ennreal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.absolutelyContinuous_ennreal_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">absolutelyContinuous_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure\">MeasureTheory.VectorMeasure</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure.AbsolutelyContinuous\">MeasureTheory.VectorMeasure.AbsolutelyContinuous</a> <span class=\"fn\">c</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure.AbsolutelyContinuous\">MeasureTheory.VectorMeasure.AbsolutelyContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.re</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure.AbsolutelyContinuous\">MeasureTheory.VectorMeasure.AbsolutelyContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.im</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">μ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L93-L101","name":"MeasureTheory.ComplexMeasure.equivSignedMeasureₗ","line":93,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ","doc":"The complex measures form a linear isomorphism to the type of pairs of signed measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasureₗ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L92-L92","name":"MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply","line":92,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasureₗ_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasureₗ</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasure</span>.invFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L92-L92","name":"MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply","line":92,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasureₗ_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ConstMulAction.html#ContinuousConstSMul\">ContinuousConstSMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasureₗ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasure</span>.toFun</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L80-L84","name":"MeasureTheory.ComplexMeasure.equivSignedMeasure","line":80,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure","doc":"The complex measures form an equivalence to the type of pairs of signed measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L79-L79","name":"MeasureTheory.ComplexMeasure.equivSignedMeasure_apply","line":79,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasure_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasure</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.re</span> <span class=\"fn\">c</span></span>, <span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.im</span> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L79-L79","name":"MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply","line":79,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">equivSignedMeasure_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.equivSignedMeasure</span>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\">match <span class=\"fn\">x</span> with\n    | <span class=\"fn\">(<span class=\"fn\">s</span>, <span class=\"fn\">t</span>)</span> =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L75-L76","name":"MeasureTheory.SignedMeasure.im_toComplexMeasure","line":75,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.im_toComplexMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.im_toComplexMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">im_toComplexMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.im</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L72-L73","name":"MeasureTheory.SignedMeasure.re_toComplexMeasure","line":72,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.re_toComplexMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.re_toComplexMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">re_toComplexMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.re</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L69-L70","name":"MeasureTheory.ComplexMeasure.toComplexMeasure_to_signedMeasure","line":69,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.toComplexMeasure_to_signedMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.toComplexMeasure_to_signedMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">toComplexMeasure_to_signedMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.re</span> <span class=\"fn\">c</span></span>)</span>.toComplexMeasure</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.im</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L66-L67","name":"MeasureTheory.SignedMeasure.toComplexMeasure_apply","line":66,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">toComplexMeasure_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span>)</span></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">i</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <span class=\"fn\">i</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L59-L64","name":"MeasureTheory.SignedMeasure.toComplexMeasure","line":59,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure","doc":"Given `s` and `t` signed measures, `s + it` is a complex measure"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">toComplexMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L58-L58","name":"MeasureTheory.SignedMeasure.toComplexMeasure_apply_im","line":58,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply_im\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">toComplexMeasure_apply_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span>)</span></span> <span class=\"fn\">i</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L58-L58","name":"MeasureTheory.SignedMeasure.toComplexMeasure_apply_re","line":58,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.SignedMeasure.toComplexMeasure_apply_re\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SignedMeasure</span>.<span class=\"name\">toComplexMeasure_apply_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toComplexMeasure</span> <span class=\"fn\">t</span></span>)</span></span> <span class=\"fn\">i</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L54-L55","name":"MeasureTheory.ComplexMeasure.im","line":54,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.im","doc":"The imaginary part of a complex measure is a signed measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.im\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L53-L53","name":"MeasureTheory.ComplexMeasure.im_apply","line":53,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.im_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.im_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">im_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure\">MeasureTheory.VectorMeasure</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.im</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.mapRange</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Module.html#Complex.imLm\">Complex.imLm</a>.toAddMonoidHom</span> <a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.continuous_im\">Complex.continuous_im</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L49-L50","name":"MeasureTheory.ComplexMeasure.re","line":49,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.re","doc":"The real part of a complex measure is a signed measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.re\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.ComplexMeasure\">MeasureTheory.ComplexMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.SignedMeasure\">MeasureTheory.SignedMeasure</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Complex.lean#L48-L48","name":"MeasureTheory.ComplexMeasure.re_apply","line":48,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.re_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Complex.html#MeasureTheory.ComplexMeasure.re_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ComplexMeasure</span>.<span class=\"name\">re_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/VectorMeasure.html#MeasureTheory.VectorMeasure\">MeasureTheory.VectorMeasure</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.ComplexMeasure.re</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.mapRange</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Module.html#Complex.reLm\">Complex.reLm</a>.toAddMonoidHom</span> <a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.continuous_re\">Complex.continuous_re</a></span></span></div></div>"}]}