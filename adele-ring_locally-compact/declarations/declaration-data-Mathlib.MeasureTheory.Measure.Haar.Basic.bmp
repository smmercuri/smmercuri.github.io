{"name":"Mathlib.MeasureTheory.Measure.Haar.Basic","instances":[{"typeNames":["MeasureTheory.Measure.addHaarMeasure"],"name":"MeasureTheory.Measure.isAddLeftInvariant_addHaarMeasure","className":"MeasureTheory.Measure.IsAddLeftInvariant"},{"typeNames":["MeasureTheory.Measure.haarMeasure"],"name":"MeasureTheory.Measure.isMulLeftInvariant_haarMeasure","className":"MeasureTheory.Measure.IsMulLeftInvariant"},{"typeNames":["MeasureTheory.Measure.addHaarMeasure"],"name":"MeasureTheory.Measure.regular_addHaarMeasure","className":"MeasureTheory.Measure.Regular"},{"typeNames":["MeasureTheory.Measure.haarMeasure"],"name":"MeasureTheory.Measure.regular_haarMeasure","className":"MeasureTheory.Measure.Regular"},{"typeNames":["MeasureTheory.Measure.addHaarMeasure"],"name":"MeasureTheory.Measure.sigmaFinite_addHaarMeasure","className":"MeasureTheory.SigmaFinite"},{"typeNames":["MeasureTheory.Measure.haarMeasure"],"name":"MeasureTheory.Measure.sigmaFinite_haarMeasure","className":"MeasureTheory.SigmaFinite"},{"typeNames":["MeasureTheory.Measure.addHaarMeasure"],"name":"MeasureTheory.Measure.isAddHaarMeasure_addHaarMeasure","className":"MeasureTheory.Measure.IsAddHaarMeasure"},{"typeNames":["MeasureTheory.Measure.haarMeasure"],"name":"MeasureTheory.Measure.isHaarMeasure_haarMeasure","className":"MeasureTheory.Measure.IsHaarMeasure"}],"imports":["Init","Mathlib.MeasureTheory.Measure.Content","Mathlib.MeasureTheory.Group.Prod","Mathlib.Topology.Algebra.Group.Compact"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L668-L670","name":"MeasureTheory.Measure.regular_of_isMulLeftInvariant","line":668,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_of_isMulLeftInvariant","doc":"To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite\non some compact set with non-empty interior. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_of_isMulLeftInvariant\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">regular_of_isMulLeftInvariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsMulLeftInvariant</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2K : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">K</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hμK : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span>.Regular</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L665-L667","name":"MeasureTheory.Measure.regular_of_isAddLeftInvariant","line":665,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_of_isAddLeftInvariant","doc":"To show that an invariant σ-finite measure is regular it is sufficient to show that it is finite on\nsome compact set with non-empty interior."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_of_isAddLeftInvariant\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">regular_of_isAddLeftInvariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsAddLeftInvariant</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2K : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">K</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hμK : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span>.Regular</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L654-L657","name":"MeasureTheory.Measure.haarMeasure_eq_iff","line":654,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_eq_iff","doc":"Let `μ` be a σ-finite left invariant measure on `G`. Then `μ` is equal to the Haar measure\ndefined by `K₀` iff `μ K₀ = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_eq_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsMulLeftInvariant</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L653-L653","name":"MeasureTheory.Measure.addHaarMeasure_eq_iff","line":653,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_eq_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsAddLeftInvariant</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L643-L649","name":"MeasureTheory.Measure.haarMeasure_unique","line":643,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_unique","doc":"**Uniqueness of left-invariant measures**: In a second-countable locally compact group, any\nσ-finite left-invariant measure is a scalar multiple of the Haar measure.\nThis is slightly weaker than assuming that `μ` is a Haar measure (in particular we don't require\n`μ ≠ 0`).\nSee also `isMulLeftInvariant_eq_smul_of_regular`\nfor a statement not assuming second-countability. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_unique\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsMulLeftInvariant</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L636-L642","name":"MeasureTheory.Measure.addHaarMeasure_unique","line":636,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_unique","doc":"**Uniqueness of left-invariant measures**: In a second-countable locally compact additive group,\nany σ-finite left-invariant measure is a scalar multiple of the additive Haar measure.\nThis is slightly weaker than assuming that `μ` is a additive Haar measure (in particular we don't\nrequire `μ ≠ 0`).\nSee also `isAddLeftInvariant_eq_smul_of_regular`\nfor a statement not assuming second-countability."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_unique\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsAddLeftInvariant</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L594-L614","name":"MeasureTheory.Measure.div_mem_nhds_one_of_haar_pos","line":594,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.div_mem_nhds_one_of_haar_pos","doc":"**Steinhaus Theorem** In any locally compact group `G` with an inner regular Haar measure `μ`,\nfor any measurable set `E` of positive measure, the set `E / E` is a neighbourhood of `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.div_mem_nhds_one_of_haar_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">div_mem_nhds_one_of_haar_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsHaarMeasure</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.InnerRegular</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hEpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L591-L593","name":"MeasureTheory.Measure.sub_mem_nhds_zero_of_addHaar_pos","line":591,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sub_mem_nhds_zero_of_addHaar_pos","doc":"**Steinhaus Theorem** In any locally compact group `G` with an inner regular Haar measure `μ`,\nfor any measurable set `E` of positive measure, the set `E - E` is a neighbourhood of `0`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sub_mem_nhds_zero_of_addHaar_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">sub_mem_nhds_zero_of_addHaar_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.IsAddHaarMeasure</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">μ</span>.InnerRegular</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hE : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hEpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">E</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L577-L578","name":"MeasureTheory.Measure.haar","line":577,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar","doc":"`haar` is some choice of a Haar measure, on a locally compact group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L575-L576","name":"MeasureTheory.Measure.addHaar.proof_1","line":575,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaar.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaar.proof_1\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaar</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L575-L576","name":"MeasureTheory.Measure.addHaar","line":575,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaar","doc":"`addHaar` is some choice of a Haar measure, on a locally compact additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L567-L572","name":"MeasureTheory.Measure.isHaarMeasure_haarMeasure","line":567,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isHaarMeasure_haarMeasure","doc":"The Haar measure is a Haar measure, i.e., it is invariant and gives finite mass to compact\nsets and positive mass to nonempty open sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isHaarMeasure_haarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">isHaarMeasure_haarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.IsHaarMeasure</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L564-L566","name":"MeasureTheory.Measure.isAddHaarMeasure_addHaarMeasure","line":564,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isAddHaarMeasure_addHaarMeasure","doc":"The additive Haar measure is an additive Haar measure, i.e., it is invariant and gives finite mass\nto compact sets and positive mass to nonempty open sets."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isAddHaarMeasure_addHaarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">isAddHaarMeasure_addHaarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.IsAddHaarMeasure</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L558-L560","name":"MeasureTheory.Measure.sigmaFinite_haarMeasure","line":558,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sigmaFinite_haarMeasure","doc":"The Haar measure is sigma-finite in a second countable group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sigmaFinite_haarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">sigmaFinite_haarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L557-L557","name":"MeasureTheory.Measure.sigmaFinite_addHaarMeasure","line":557,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sigmaFinite_addHaarMeasure","doc":"The additive Haar measure is sigma-finite in a second countable group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.sigmaFinite_addHaarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">sigmaFinite_addHaarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.SigmaFinite\">MeasureTheory.SigmaFinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L553-L554","name":"MeasureTheory.Measure.haarMeasure_closure_self","line":553,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_closure_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_closure_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure_closure_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L552-L552","name":"MeasureTheory.Measure.addHaarMeasure_closure_self","line":552,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_closure_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_closure_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure_closure_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L545-L550","name":"MeasureTheory.Measure.regular_haarMeasure","line":545,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_haarMeasure","doc":"The Haar measure is regular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_haarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">regular_haarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.Regular</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L544-L544","name":"MeasureTheory.Measure.regular_addHaarMeasure","line":544,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_addHaarMeasure","doc":"The additive Haar measure is regular."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.regular_addHaarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">regular_addHaarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.Regular</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L535-L541","name":"MeasureTheory.Measure.haarMeasure_self","line":535,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L534-L534","name":"MeasureTheory.Measure.addHaarMeasure_self","line":534,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L524-L532","name":"MeasureTheory.Measure.isMulLeftInvariant_haarMeasure","line":524,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isMulLeftInvariant_haarMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isMulLeftInvariant_haarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">isMulLeftInvariant_haarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.IsMulLeftInvariant</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L523-L523","name":"MeasureTheory.Measure.isAddLeftInvariant_addHaarMeasure","line":523,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isAddLeftInvariant_addHaarMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.isAddLeftInvariant_addHaarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">isAddLeftInvariant_addHaarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span>.IsAddLeftInvariant</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L518-L521","name":"MeasureTheory.Measure.haarMeasure_apply","line":518,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\">MeasureTheory.Measure.haarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.measure</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L517-L517","name":"MeasureTheory.Measure.addHaarMeasure_apply","line":517,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\">MeasureTheory.Measure.addHaarMeasure</a> <span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.measure</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L514-L515","name":"MeasureTheory.Measure.haarMeasure","line":514,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure","doc":"The Haar measure on the locally compact group `G`, scaled so that `haarMeasure K₀ K₀ = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L511-L513","name":"MeasureTheory.Measure.addHaarMeasure.proof_1","line":511,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure.proof_1\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L511-L513","name":"MeasureTheory.Measure.addHaarMeasure.proof_2","line":511,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure.proof_2\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#R1Space\">R1Space</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L511-L513","name":"MeasureTheory.Measure.addHaarMeasure","line":511,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure","doc":"The Haar measure on the locally compact additive group `G`, scaled so that\n`addHaarMeasure K₀ K₀ = 1`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.addHaarMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">addHaarMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L496-L498","name":"MeasureTheory.Measure.haar.haarContent_outerMeasure_closure_pos","line":496,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_outerMeasure_closure_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_outerMeasure_closure_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarContent_outerMeasure_closure_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L495-L495","name":"MeasureTheory.Measure.haar.addHaarContent_outerMeasure_closure_pos","line":495,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_outerMeasure_closure_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_outerMeasure_closure_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent_outerMeasure_closure_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L488-L493","name":"MeasureTheory.Measure.haar.haarContent_outerMeasure_self_pos","line":488,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_outerMeasure_self_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_outerMeasure_self_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarContent_outerMeasure_self_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L487-L487","name":"MeasureTheory.Measure.haar.addHaarContent_outerMeasure_self_pos","line":487,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_outerMeasure_self_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_outerMeasure_self_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent_outerMeasure_self_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.outerMeasure</span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L482-L485","name":"MeasureTheory.Measure.haar.is_left_invariant_haarContent","line":482,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_haarContent","doc":"The variant of `is_left_invariant_chaar` for `haarContent` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_haarContent\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_haarContent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L481-L481","name":"MeasureTheory.Measure.haar.is_left_invariant_addHaarContent","line":481,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addHaarContent","doc":"The variant of `is_left_invariant_addCHaar` for `addHaarContent`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addHaarContent\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_addHaarContent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L477-L478","name":"MeasureTheory.Measure.haar.haarContent_self","line":477,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_self","doc":"The variant of `chaar_self` for `haarContent` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarContent_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L476-L476","name":"MeasureTheory.Measure.haar.addHaarContent_self","line":476,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_self","doc":"The variant of `addCHaar_self` for `addHaarContent`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L471-L473","name":"MeasureTheory.Measure.haar.haarContent_apply","line":471,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarContent_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\">MeasureTheory.Measure.haar.haarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">let_fun <span class=\"fn\">this</span> := <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span>;\n    <span class=\"fn\">this</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L470-L470","name":"MeasureTheory.Measure.haar.addHaarContent_apply","line":470,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\">MeasureTheory.Measure.haar.addHaarContent</a> <span class=\"fn\">K₀</span></span>)</span>.toFun</span> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">let_fun <span class=\"fn\">this</span> := <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span>;\n    <span class=\"fn\">this</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L459-L465","name":"MeasureTheory.Measure.haar.haarContent","line":459,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent","doc":"The function `chaar` interpreted in `ℝ≥0`, as a content "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarContent\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarContent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Content.html#MeasureTheory.Content\">MeasureTheory.Content</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L458-L458","name":"MeasureTheory.Measure.haar.addHaarContent.proof_3","line":458,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_3\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent</span>.<span class=\"name\">proof_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L458-L458","name":"MeasureTheory.Measure.haar.addHaarContent","line":458,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent","doc":"additive version of `MeasureTheory.Measure.haar.haarContent`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Content.html#MeasureTheory.Content\">MeasureTheory.Content</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L458-L458","name":"MeasureTheory.Measure.haar.addHaarContent.proof_2","line":458,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_2\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent</span>.<span class=\"name\">proof_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <span class=\"fn\">↑<span class=\"fn\">K₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_h₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">↑<span class=\"fn\">K₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">↑<span class=\"fn\">K₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L458-L458","name":"MeasureTheory.Measure.haar.addHaarContent.proof_1","line":458,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarContent.proof_1\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarContent</span>.<span class=\"name\">proof_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L445-L455","name":"MeasureTheory.Measure.haar.is_left_invariant_chaar","line":445,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_chaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_chaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_chaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L444-L444","name":"MeasureTheory.Measure.haar.is_left_invariant_addCHaar","line":444,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addCHaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addCHaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_addCHaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L411-L442","name":"MeasureTheory.Measure.haar.chaar_sup_eq","line":411,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_sup_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L410-L410","name":"MeasureTheory.Measure.haar.addCHaar_sup_eq","line":410,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_sup_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L398-L408","name":"MeasureTheory.Measure.haar.chaar_sup_le","line":398,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_sup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_sup_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L397-L397","name":"MeasureTheory.Measure.haar.addCHaar_sup_le","line":397,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_sup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_sup_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L386-L395","name":"MeasureTheory.Measure.haar.chaar_mono","line":386,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L385-L385","name":"MeasureTheory.Measure.haar.addCHaar_mono","line":385,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">↑<span class=\"fn\">K₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L375-L383","name":"MeasureTheory.Measure.haar.chaar_self","line":375,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L374-L374","name":"MeasureTheory.Measure.haar.addCHaar_self","line":374,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L365-L372","name":"MeasureTheory.Measure.haar.chaar_empty","line":365,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L364-L364","name":"MeasureTheory.Measure.haar.addCHaar_empty","line":364,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L361-L362","name":"MeasureTheory.Measure.haar.chaar_nonneg","line":361,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_nonneg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L360-L360","name":"MeasureTheory.Measure.haar.addCHaar_nonneg","line":360,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_nonneg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L355-L358","name":"MeasureTheory.Measure.haar.chaar_mem_clPrehaar","line":355,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mem_clPrehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mem_clPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_mem_clPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clPrehaar\">MeasureTheory.Measure.haar.clPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L354-L354","name":"MeasureTheory.Measure.haar.addCHaar_mem_clAddPrehaar","line":354,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mem_clAddPrehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mem_clAddPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_mem_clAddPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clAddPrehaar\">MeasureTheory.Measure.haar.clAddPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L351-L352","name":"MeasureTheory.Measure.haar.chaar_mem_haarProduct","line":351,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mem_haarProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar_mem_haarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar_mem_haarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\">MeasureTheory.Measure.haar.chaar</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct\">MeasureTheory.Measure.haar.haarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L350-L350","name":"MeasureTheory.Measure.haar.addCHaar_mem_addHaarProduct","line":350,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mem_addHaarProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar_mem_addHaarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar_mem_addHaarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\">MeasureTheory.Measure.haar.addCHaar</a> <span class=\"fn\">K₀</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct\">MeasureTheory.Measure.haar.addHaarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L347-L348","name":"MeasureTheory.Measure.haar.chaar","line":347,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar","doc":"This is the \"limit\" of `prehaar K₀ U K` as `U` becomes a smaller and smaller open\nneighborhood of `(1 : G)`. More precisely, it is defined to be an arbitrary element\nin the intersection of all the sets `clPrehaar K₀ V` in `haarProduct K₀`.\nThis is roughly equal to the Haar measure on compact sets,\nbut it can differ slightly. We do know that\n`haarMeasure K₀ (interior K) ≤ chaar K₀ K ≤ haarMeasure K₀ K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.chaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">chaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L346-L346","name":"MeasureTheory.Measure.haar.addCHaar","line":346,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar","doc":"additive version of `MeasureTheory.Measure.haar.chaar`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addCHaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addCHaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L321-L334","name":"MeasureTheory.Measure.haar.nonempty_iInter_clPrehaar","line":321,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.nonempty_iInter_clPrehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.nonempty_iInter_clPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">nonempty_iInter_clPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct\">MeasureTheory.Measure.haar.haarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a>     <span class=\"fn\">⋂ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">1</span></span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clPrehaar\">MeasureTheory.Measure.haar.clPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></span>)</span>.Nonempty</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L320-L320","name":"MeasureTheory.Measure.haar.nonempty_iInter_clAddPrehaar","line":320,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.nonempty_iInter_clAddPrehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.nonempty_iInter_clAddPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">nonempty_iInter_clAddPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct\">MeasureTheory.Measure.haar.addHaarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a>     <span class=\"fn\">⋂ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">0</span></span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clAddPrehaar\">MeasureTheory.Measure.haar.clAddPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></span>)</span>.Nonempty</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L316-L318","name":"MeasureTheory.Measure.haar.prehaar_mem_haarProduct","line":316,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_mem_haarProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_mem_haarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_mem_haarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct\">MeasureTheory.Measure.haar.haarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L315-L315","name":"MeasureTheory.Measure.haar.addPrehaar_mem_addHaarProduct","line":315,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_mem_addHaarProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_mem_addHaarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_mem_addHaarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct\">MeasureTheory.Measure.haar.addHaarProduct</a> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L306-L309","name":"MeasureTheory.Measure.haar.is_left_invariant_prehaar","line":306,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_prehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_prehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_prehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L305-L305","name":"MeasureTheory.Measure.haar.is_left_invariant_addPrehaar","line":305,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addPrehaar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_addPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts.map\">TopologicalSpace.Compacts.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L297-L303","name":"MeasureTheory.Measure.haar.prehaar_sup_eq","line":297,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_sup_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">U</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">U</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L296-L296","name":"MeasureTheory.Measure.haar.addPrehaar_sup_eq","line":296,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_sup_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_sup_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_sup_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">U</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">U</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L289-L294","name":"MeasureTheory.Measure.haar.prehaar_sup_le","line":289,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_sup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_sup_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L288-L288","name":"MeasureTheory.Measure.haar.addPrehaar_sup_le","line":288,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_sup_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_sup_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_sup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">K₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L284-L286","name":"MeasureTheory.Measure.haar.prehaar_self","line":284,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L283-L283","name":"MeasureTheory.Measure.haar.addPrehaar_self","line":283,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\"><span class=\"fn\">K₀</span>.toCompacts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L276-L281","name":"MeasureTheory.Measure.haar.prehaar_mono","line":276,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L275-L275","name":"MeasureTheory.Measure.haar.addPrehaar_mono","line":275,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">K₁</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L269-L273","name":"MeasureTheory.Measure.haar.prehaar_pos","line":269,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h1K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2K : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">K</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">K</span>, <span class=\"fn\">isCompact'</span> := <span class=\"fn\">h1K</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L268-L268","name":"MeasureTheory.Measure.haar.addPrehaar_pos","line":268,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h1K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2K : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">K</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">{ <span class=\"fn\">carrier</span> := <span class=\"fn\">K</span>, <span class=\"fn\">isCompact'</span> := <span class=\"fn\">h1K</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L262-L266","name":"MeasureTheory.Measure.haar.prehaar_le_index","line":262,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_le_index","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_le_index\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_le_index</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L261-L261","name":"MeasureTheory.Measure.haar.add_prehaar_le_addIndex","line":261,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.add_prehaar_le_addIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.add_prehaar_le_addIndex\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">add_prehaar_le_addIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">U</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L250-L254","name":"MeasureTheory.Measure.haar.is_left_invariant_index","line":250,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_index","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_index\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_index</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L249-L249","name":"MeasureTheory.Measure.haar.is_left_invariant_addIndex","line":249,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.is_left_invariant_addIndex\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">is_left_invariant_addIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L237-L247","name":"MeasureTheory.Measure.haar.mul_left_index_le","line":237,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mul_left_index_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mul_left_index_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">mul_left_index_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L236-L236","name":"MeasureTheory.Measure.haar.add_left_addIndex_le","line":236,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.add_left_addIndex_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.add_left_addIndex_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">add_left_addIndex_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L202-L234","name":"MeasureTheory.Measure.haar.index_union_eq","line":202,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_union_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_union_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_union_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">V</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">V</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L201-L201","name":"MeasureTheory.Measure.haar.addIndex_union_eq","line":201,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_union_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_union_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_union_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">V</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">V</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L190-L199","name":"MeasureTheory.Measure.haar.index_union_le","line":190,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_union_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_union_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_union_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L189-L189","name":"MeasureTheory.Measure.haar.addIndex_union_le","line":189,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_union_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_union_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_union_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\"><span class=\"fn\">K₁</span>.carrier</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\"><span class=\"fn\">K₂</span>.carrier</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L184-L187","name":"MeasureTheory.Measure.haar.index_mono","line":184,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK' : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">K'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">K'</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L183-L183","name":"MeasureTheory.Measure.haar.addIndex_mono","line":183,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK' : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">K'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">K'</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L173-L181","name":"MeasureTheory.Measure.haar.index_pos","line":173,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L172-L172","name":"MeasureTheory.Measure.haar.addIndex_pos","line":172,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L159-L170","name":"MeasureTheory.Measure.haar.le_index_mul","line":159,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.le_index_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.le_index_mul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">le_index_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L158-L158","name":"MeasureTheory.Measure.haar.le_addIndex_mul","line":158,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.le_addIndex_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.le_addIndex_mul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">le_addIndex_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">↑<span class=\"fn\">K</span></span> <span class=\"fn\">↑<span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L154-L156","name":"MeasureTheory.Measure.haar.index_elim","line":154,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_elim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_elim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ <span class=\"fn\">g</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">V</span></span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L153-L153","name":"MeasureTheory.Measure.haar.addIndex_elim","line":153,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_elim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_elim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ <span class=\"fn\">g</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">V</span></span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L149-L151","name":"MeasureTheory.Measure.haar.index_defined","line":149,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_defined","doc":"If `K` is compact and `V` has nonempty interior, then the index `(K : V)` is well-defined,\nthere is a finite set `t` satisfying the desired properties. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_defined\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_defined</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">Finset.card</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">G</span></span> | <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ <span class=\"fn\">g</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">V</span></span></span></span>}</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L146-L148","name":"MeasureTheory.Measure.haar.addIndex_defined","line":146,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_defined","doc":"If `K` is compact and `V` has nonempty interior, then the index `(K : V)` is well-defined, there is\na finite set `t` satisfying the desired properties."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_defined\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_defined</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">V</span></span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">Finset.card</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">G</span></span> | <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ <span class=\"fn\">g</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">h</span></span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">V</span></span></span></span>}</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L134-L135","name":"MeasureTheory.Measure.haar.clPrehaar","line":134,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clPrehaar","doc":"The closure of the collection of elements of the form `prehaar K₀ U`,\nfor `U` open neighbourhoods of `1`, contained in `V`. The closure is taken in the space\n`compacts G → ℝ`, with the topology of pointwise convergence.\nWe show that the intersection of all these sets is nonempty, and the Haar measure\non compact sets is defined to be an element in the closure of this intersection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">clPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L133-L133","name":"MeasureTheory.Measure.haar.clAddPrehaar","line":133,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clAddPrehaar","doc":"additive version of `MeasureTheory.Measure.haar.clPrehaar`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.clAddPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">clAddPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.OpenNhdsOf\">TopologicalSpace.OpenNhdsOf</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L124-L126","name":"MeasureTheory.Measure.haar.mem_prehaar_empty","line":124,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mem_prehaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mem_prehaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">mem_prehaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct\">MeasureTheory.Measure.haar.haarProduct</a> <span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">K₀</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L123-L123","name":"MeasureTheory.Measure.haar.mem_addPrehaar_empty","line":123,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mem_addPrehaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.mem_addPrehaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">mem_addPrehaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct\">MeasureTheory.Measure.haar.addHaarProduct</a> <span class=\"fn\">K₀</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K</span></span>)</span> <span class=\"fn\">K₀</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L120-L121","name":"MeasureTheory.Measure.haar.haarProduct","line":120,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct","doc":"`haarProduct K₀` is the product of intervals `[0, (K : K₀)]`, for all compact sets `K`.\nFor all `U`, we can show that `prehaar K₀ U ∈ haarProduct K₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.haarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">haarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L119-L119","name":"MeasureTheory.Measure.haar.addHaarProduct","line":119,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct","doc":"additive version of `MeasureTheory.Measure.haar.haarProduct`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addHaarProduct\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addHaarProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L114-L115","name":"MeasureTheory.Measure.haar.prehaar_nonneg","line":114,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_nonneg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L113-L113","name":"MeasureTheory.Measure.haar.addPrehaar_nonneg","line":113,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_nonneg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L110-L111","name":"MeasureTheory.Measure.haar.prehaar_empty","line":110,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\">MeasureTheory.Measure.haar.prehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L109-L109","name":"MeasureTheory.Measure.haar.addPrehaar_empty","line":109,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.PositiveCompacts\">TopologicalSpace.PositiveCompacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\">MeasureTheory.Measure.haar.addPrehaar</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">K₀</span></span>)</span> <span class=\"fn\">U</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L106-L107","name":"MeasureTheory.Measure.haar.prehaar","line":106,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar","doc":"`prehaar K₀ U K` is a weighted version of the index, defined as `(K : U)/(K₀ : U)`.\nIn the applications `K₀` is compact with non-empty interior, `U` is open containing `1`,\nand `K` is any compact set.\nThe argument `K` is a (bundled) compact set, so that we can consider `prehaar K₀ U` as an\nelement of `haarProduct` (below). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.prehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">prehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L105-L105","name":"MeasureTheory.Measure.haar.addPrehaar","line":105,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar","doc":"additive version of `MeasureTheory.Measure.haar.prehaar`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addPrehaar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addPrehaar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.Compacts\">TopologicalSpace.Compacts</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L94-L96","name":"MeasureTheory.Measure.haar.index_empty","line":94,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\">MeasureTheory.Measure.haar.index</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L93-L93","name":"MeasureTheory.Measure.haar.addIndex_empty","line":93,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\">MeasureTheory.Measure.haar.addIndex</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L90-L91","name":"MeasureTheory.Measure.haar.index","line":90,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index","doc":"The index or Haar covering number or ratio of `K` w.r.t. `V`, denoted `(K : V)`:\nit is the smallest number of (left) translates of `V` that is necessary to cover `K`.\nIt is defined to be 0 if no finite number of translates cover `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.index\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">index</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/MeasureTheory/Measure/Haar/Basic.lean#L89-L89","name":"MeasureTheory.Measure.haar.addIndex","line":89,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex","doc":"additive version of `MeasureTheory.Measure.haar.index`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Haar/Basic.html#MeasureTheory.Measure.haar.addIndex\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">haar</span>.<span class=\"name\">addIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"}]}