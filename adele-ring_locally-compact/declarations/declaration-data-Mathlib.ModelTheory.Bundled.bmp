{"name":"Mathlib.ModelTheory.Bundled","instances":[{"typeNames":["CategoryTheory.Bundled.α"],"name":"CategoryTheory.Bundled.structure","className":"FirstOrder.Language.Structure"},{"typeNames":["CategoryTheory.Bundled"],"name":"FirstOrder.Language.equivSetoid","className":"Setoid"},{"typeNames":["FirstOrder.Language.Theory.ModelType","_builtin_typeu"],"name":"FirstOrder.Language.Theory.ModelType.instCoeSort","className":"CoeSort"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.Theory.ModelType.instNonempty","className":"Nonempty"},{"typeNames":["FirstOrder.Language.Theory.ModelType"],"name":"FirstOrder.Language.Theory.ModelType.instInhabited","className":"Inhabited"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.Theory.ModelType.of_small","className":"Small"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.Theory.ModelType.leftStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.Theory.ModelType.rightStructure","className":"FirstOrder.Language.Structure"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.Theory.ModelType.subtheoryModel_models","className":"FirstOrder.Language.Theory.Model"},{"typeNames":["FirstOrder.Language.Theory.ModelType.Carrier"],"name":"FirstOrder.Language.ElementarySubstructure.toModel.instSmall","className":"Small"}],"imports":["Init","Mathlib.ModelTheory.ElementarySubstructures","Mathlib.CategoryTheory.ConcreteCategory.Bundled"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L193-L195","name":"FirstOrder.Language.ElementarySubstructure.toModel.instSmall","line":193,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarySubstructure.toModel.instSmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarySubstructure.toModel.instSmall\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">ElementarySubstructure</span>.<span class=\"name\">toModel</span>.<span class=\"name\">instSmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.ElementarySubstructure</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w, x}</a>    <span class=\"fn\">↥<span class=\"fn\">S</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w, x}</a>    <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarySubstructure.toModel\">FirstOrder.Language.ElementarySubstructure.toModel</a> <span class=\"fn\">T</span> <span class=\"fn\">S</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L189-L191","name":"FirstOrder.Language.ElementarySubstructure.toModel","line":189,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarySubstructure.toModel","doc":"An elementary substructure of a bundled model as a bundled model. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarySubstructure.toModel\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">ElementarySubstructure</span>.<span class=\"name\">toModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.ElementarySubstructure</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L181-L186","name":"FirstOrder.Language.ElementarilyEquivalent.toModel","line":181,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarilyEquivalent.toModel","doc":"A structure that is elementarily equivalent to a model, bundled as a model. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.ElementarilyEquivalent.toModel\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">ElementarilyEquivalent</span>.<span class=\"name\">toModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[LN : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.ElementarilyEquivalent</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">M</span></span>)</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L175-L176","name":"FirstOrder.Language.Theory.coe_of","line":175,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.coe_of\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">h</span>.bundled</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L171-L172","name":"FirstOrder.Language.Theory.Model.bundled","line":171,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.Model.bundled","doc":"Bundles `M ⊨ T` as a `T.ModelType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.Model.bundled\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Model</span>.<span class=\"name\">bundled</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[LM : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ne : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L162-L164","name":"FirstOrder.Language.Theory.ModelType.subtheoryModel_models","line":162,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_models","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_models\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">subtheoryModel_models</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T' : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">T'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.subtheoryModel</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L158-L160","name":"FirstOrder.Language.Theory.ModelType.subtheoryModel","line":158,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel","doc":"A model of a theory is also a model of any subtheory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">subtheoryModel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T' : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">T'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T'</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L157-L157","name":"FirstOrder.Language.Theory.ModelType.subtheoryModel_Carrier","line":157,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_Carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_Carrier\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">subtheoryModel_Carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T' : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">T'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.subtheoryModel</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L157-L157","name":"FirstOrder.Language.Theory.ModelType.subtheoryModel_struc","line":157,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_struc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.subtheoryModel_struc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">subtheoryModel_struc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T' : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">T'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.subtheoryModel</span> <span class=\"fn\">h</span></span>)</span>.struc</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.struc</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L152-L154","name":"FirstOrder.Language.Theory.ModelType.rightStructure","line":152,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.rightStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.rightStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">rightStructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.sum</span> <span class=\"fn\">L'</span></span>)</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Structure</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L149-L150","name":"FirstOrder.Language.Theory.ModelType.leftStructure","line":149,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.leftStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.leftStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">leftStructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.sum</span> <span class=\"fn\">L'</span></span>)</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L138-L147","name":"FirstOrder.Language.Theory.ModelType.defaultExpansion","line":138,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion","doc":"When `φ` is injective, `defaultExpansion` expands a model of `T` to a model of `φ.onTheory T`\narbitrarily. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">defaultExpansion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">φ</span>.Injective</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Functions</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Functions</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onFunction</span> <span class=\"fn\">f</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Relations</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Relations</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onRelation</span> <span class=\"fn\">r</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onTheory</span> <span class=\"fn\">T</span></span>)</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L137-L137","name":"FirstOrder.Language.Theory.ModelType.defaultExpansion_struc","line":137,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion_struc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion_struc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">defaultExpansion_struc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">φ</span>.Injective</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Functions</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Functions</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onFunction</span> <span class=\"fn\">f</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Relations</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Relations</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onRelation</span> <span class=\"fn\">r</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion\">FirstOrder.Language.Theory.ModelType.defaultExpansion</a> <span class=\"fn\">h</span> <span class=\"fn\">M</span></span>)</span>.struc</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.defaultExpansion</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L137-L137","name":"FirstOrder.Language.Theory.ModelType.defaultExpansion_Carrier","line":137,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion_Carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion_Carrier\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">defaultExpansion_Carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">φ</span>.Injective</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Functions</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Functions</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onFunction</span> <span class=\"fn\">f</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.Relations</span> <span class=\"fn\">n</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Relations</span> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onRelation</span> <span class=\"fn\">r</span></span></span></span></span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.defaultExpansion\">FirstOrder.Language.Theory.ModelType.defaultExpansion</a> <span class=\"fn\">h</span> <span class=\"fn\">M</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L129-L133","name":"FirstOrder.Language.Theory.ModelType.reduct","line":129,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct","doc":"The reduct of any model of `φ.onTheory T` is a model of `T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">reduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onTheory</span> <span class=\"fn\">T</span></span>)</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L128-L128","name":"FirstOrder.Language.Theory.ModelType.reduct_struc","line":128,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct_struc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct_struc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">reduct_struc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onTheory</span> <span class=\"fn\">T</span></span>)</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct\">FirstOrder.Language.Theory.ModelType.reduct</a> <span class=\"fn\">φ</span> <span class=\"fn\">M</span></span>)</span>.struc</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.reduct</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L128-L128","name":"FirstOrder.Language.Theory.ModelType.reduct_Carrier","line":128,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct_Carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct_Carrier\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">reduct_Carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L' : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">L</span> <a href=\"./Mathlib/ModelTheory/LanguageMap.html#FirstOrder.Language.LHom\">→ᴸ</a> <span class=\"fn\">L'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.onTheory</span> <span class=\"fn\">T</span></span>)</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.reduct\">FirstOrder.Language.Theory.ModelType.reduct</a> <span class=\"fn\">φ</span> <span class=\"fn\">M</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L124-L125","name":"FirstOrder.Language.Theory.ModelType.ulift","line":124,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.ulift","doc":"Lifts a model to a particular universe. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.ulift\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">ulift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L120-L121","name":"FirstOrder.Language.Theory.ModelType.shrink","line":120,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.shrink","doc":"Shrinks a small model to a particular universe. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.shrink\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w', w}</a>    <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L115-L117","name":"FirstOrder.Language.Theory.ModelType.of_small","line":115,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of_small","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of_small\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">of_small</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w', w}</a>    <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w', w}</a>    <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of\">FirstOrder.Language.Theory.ModelType.of</a> <span class=\"fn\">T</span> <span class=\"fn\">M</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L108-L113","name":"FirstOrder.Language.Theory.ModelType.equivInduced","line":108,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.equivInduced","doc":"Maps a bundled model along a bijection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.equivInduced\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">equivInduced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">M</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L100-L101","name":"FirstOrder.Language.Theory.ModelType.instInhabited","line":100,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instInhabited\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.ModelType</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L93-L94","name":"FirstOrder.Language.Theory.ModelType.instNonempty","line":93,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instNonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instNonempty\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">instNonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L90-L91","name":"FirstOrder.Language.Theory.ModelType.coe_of","line":90,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.coe_of\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of\">FirstOrder.Language.Theory.ModelType.of</a> <span class=\"fn\">T</span> <span class=\"fn\">M</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L86-L87","name":"FirstOrder.Language.Theory.ModelType.of","line":86,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of","doc":"The object in the category of R-algebras associated to a type equipped with the appropriate\ntypeclasses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.of\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L81-L82","name":"FirstOrder.Language.Theory.ModelType.instCoeSort","line":81,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instCoeSort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.instCoeSort\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">instCoeSort</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> w)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L71-L71","name":"FirstOrder.Language.Theory.ModelType.nonempty'","line":71,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.nonempty'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.nonempty'\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">nonempty'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">self</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L70-L70","name":"FirstOrder.Language.Theory.ModelType.is_model","line":70,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.is_model","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.is_model\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">is_model</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">self</span></span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L69-L69","name":"FirstOrder.Language.Theory.ModelType.struc","line":69,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.struc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.struc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">struc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">↑<span class=\"fn\">self</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L68-L68","name":"FirstOrder.Language.Theory.ModelType.Carrier","line":68,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.Carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.Carrier\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">Carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L67-L67","name":"FirstOrder.Language.Theory.ModelType.mk","line":67,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Carrier : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[struc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">Carrier</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[is_model : <span class=\"fn\"><span class=\"fn\">Carrier</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[nonempty' : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">T</span>.ModelType</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L67-L71","name":"FirstOrder.Language.Theory.ModelType","line":67,"kind":"structure","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType","doc":"The type of nonempty models of a first-order theory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.Theory.ModelType\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ModelType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">L</span>.Theory</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) (w + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L56-L60","name":"FirstOrder.Language.equivSetoid","line":56,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.equivSetoid","doc":"The equivalence relation on bundled `L.Structure`s indicating that they are isomorphic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.equivSetoid\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">equivSetoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.Structure</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L46-L47","name":"Equiv.bundledInducedEquiv","line":46,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInducedEquiv","doc":"An equivalence of types as a first-order equivalence to the bundled structure on the codomain.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInducedEquiv\"><span class=\"name\">Equiv</span>.<span class=\"name\">bundledInducedEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Equiv</span> <span class=\"fn\">M</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced\">Equiv.bundledInduced</a> <span class=\"fn\">L</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L40-L41","name":"Equiv.bundledInduced","line":40,"kind":"def","docLink":"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced","doc":"A type bundled with the structure induced by an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced\"><span class=\"name\">Equiv</span>.<span class=\"name\">bundledInduced</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.Structure</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L39-L39","name":"Equiv.bundledInduced_α","line":39,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced_α","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced_α\"><span class=\"name\">Equiv</span>.<span class=\"name\">bundledInduced_α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced\">Equiv.bundledInduced</a> <span class=\"fn\">L</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L39-L39","name":"Equiv.bundledInduced_str","line":39,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced_str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced_str\"><span class=\"name\">Equiv</span>.<span class=\"name\">bundledInduced_str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> w'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Bundled.html#Equiv.bundledInduced\">Equiv.bundledInduced</a> <span class=\"fn\">L</span> <span class=\"fn\">g</span></span>)</span>.str</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.inducedStructure</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/ModelTheory/Bundled.lean#L27-L29","name":"CategoryTheory.Bundled.structure","line":27,"kind":"instance","docLink":"./Mathlib/ModelTheory/Bundled.html#CategoryTheory.Bundled.structure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Bundled.html#CategoryTheory.Bundled.structure\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bundled</span>.<span class=\"name\">structure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">FirstOrder.Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.Structure</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.Structure</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"}]}