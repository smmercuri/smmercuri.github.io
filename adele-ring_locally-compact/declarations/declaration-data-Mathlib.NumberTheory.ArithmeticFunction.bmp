{"name":"Mathlib.NumberTheory.ArithmeticFunction","instances":[{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.zero","className":"Zero"},{"typeNames":["ArithmeticFunction"],"name":"instInhabitedArithmeticFunction","className":"Inhabited"},{"typeNames":["ArithmeticFunction","Nat"],"name":"ArithmeticFunction.instFunLikeArithmeticFunctionNat","className":"DFunLike"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.one","className":"One"},{"typeNames":["ArithmeticFunction","ArithmeticFunction"],"name":"ArithmeticFunction.natCoe","className":"Coe"},{"typeNames":["ArithmeticFunction","ArithmeticFunction"],"name":"ArithmeticFunction.intCoe","className":"Coe"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.add","className":"Add"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instAddMonoid","className":"AddMonoid"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instAddMonoidWithOne","className":"AddMonoidWithOne"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instAddCommMonoid","className":"AddCommMonoid"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instNegArithmeticFunctionToZero","className":"Neg"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","className":"AddGroup"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","className":"AddCommGroup"},{"typeNames":["ArithmeticFunction","ArithmeticFunction"],"name":"ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","className":"SMul"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","className":"Mul"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instMonoid","className":"Monoid"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instSemiring","className":"Semiring"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","className":"CommSemiring"},{"typeNames":["ArithmeticFunction"],"name":"ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","className":"CommRing"},{"typeNames":["ArithmeticFunction","ArithmeticFunction"],"name":"ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","className":"Module"},{"typeNames":["ArithmeticFunction.natToArithmeticFunction"],"name":"ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","className":"Invertible"}],"imports":["Init","Mathlib.Algebra.BigOperators.Ring","Mathlib.Algebra.Module.BigOperators","Mathlib.NumberTheory.Divisors","Mathlib.Data.Nat.Squarefree","Mathlib.Data.Nat.GCD.BigOperators","Mathlib.Data.Nat.Factorization.Basic","Mathlib.Tactic.ArithMult"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1338-L1362","name":"ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero","line":1338,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero","doc":"Möbius inversion for functions to a `CommGroupWithZero`, where the equalities only hold on\na well-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1330-L1334","name":"ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on","line":1330,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on","doc":"Möbius inversion for functions to a `CommGroup`, where the equalities only hold on a\nwell-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1317-L1326","name":"ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on","line":1317,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on","doc":"Möbius inversion for functions to a `Ring`, where the equalities only hold on a well-behaved\nset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_mul_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1305-L1313","name":"ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'","line":1305,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq_on'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₀ : <span class=\"fn\"><span class=\"fn\">0</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1280-L1303","name":"ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on","line":1280,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on","doc":"Möbius inversion for functions to an `AddCommGroup`, where the equalities only hold on a\nwell-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1253-L1275","name":"ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero","line":1253,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero","doc":"Möbius inversion for functions to a `CommGroupWithZero`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1246-L1249","name":"ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq","line":1246,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq","doc":"Möbius inversion for functions to a `CommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1236-L1242","name":"ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq","line":1236,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq","doc":"Möbius inversion for functions to a `Ring`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_mul_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1200-L1232","name":"ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq","line":1200,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq","doc":"Möbius inversion for functions to an `AddCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1193-L1194","name":"ArithmeticFunction.inv_zetaUnit","line":1193,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.inv_zetaUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.inv_zetaUnit\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">inv_zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zetaUnit</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1188-L1189","name":"ArithmeticFunction.coe_zetaUnit","line":1188,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zetaUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zetaUnit\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ArithmeticFunction.zetaUnit</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1183-L1184","name":"ArithmeticFunction.zetaUnit","line":1183,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zetaUnit","doc":"A unit in `ArithmeticFunction R` that evaluates to `ζ`, with inverse `μ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zetaUnit\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1177-L1180","name":"ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","line":1177,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Invertible/Defs.html#Invertible\">Invertible</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1169-L1170","name":"ArithmeticFunction.coe_zeta_mul_coe_moebius","line":1169,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_coe_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_coe_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_coe_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1164-L1165","name":"ArithmeticFunction.coe_moebius_mul_coe_zeta","line":1164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_moebius_mul_coe_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_moebius_mul_coe_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_moebius_mul_coe_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1159-L1160","name":"ArithmeticFunction.coe_zeta_mul_moebius","line":1159,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1138-L1155","name":"ArithmeticFunction.moebius_mul_coe_zeta","line":1138,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_mul_coe_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_mul_coe_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_mul_coe_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1124-L1133","name":"ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree","line":1124,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_one_sub_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">d</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">d</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1114-L1122","name":"ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree","line":1114,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_one_add_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1106-L1111","name":"ArithmeticFunction.isMultiplicative_moebius","line":1106,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1097-L1102","name":"ArithmeticFunction.moebius_apply_isPrimePow_not_prime","line":1097,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_isPrimePow_not_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_isPrimePow_not_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_isPrimePow_not_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1088-L1094","name":"ArithmeticFunction.moebius_apply_prime_pow","line":1088,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_prime_pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> then <span class=\"fn\">-<span class=\"fn\">1</span></span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1084-L1085","name":"ArithmeticFunction.moebius_apply_prime","line":1084,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1076-L1081","name":"ArithmeticFunction.moebius_ne_zero_iff_eq_or","line":1076,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_ne_zero_iff_eq_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_ne_zero_iff_eq_or\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_ne_zero_iff_eq_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1069-L1073","name":"ArithmeticFunction.moebius_ne_zero_iff_squarefree","line":1069,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_ne_zero_iff_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_ne_zero_iff_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_ne_zero_iff_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1066-L1066","name":"ArithmeticFunction.moebius_apply_one","line":1066,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1062-L1063","name":"ArithmeticFunction.moebius_eq_zero_of_not_squarefree","line":1062,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_eq_zero_of_not_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_eq_zero_of_not_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_eq_zero_of_not_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1057-L1058","name":"ArithmeticFunction.moebius_apply_of_squarefree","line":1057,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius_apply_of_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1053-L1054","name":"ArithmeticFunction.Moebius.termμ","line":1053,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.Moebius.termμ","doc":"`μ` is the Möbius function. If `n` is squarefree with an even number of distinct prime factors,\n`μ n = 1`. If `n` is squarefree with an odd number of distinct prime factors, `μ n = -1`.\nIf `n` is not squarefree, `μ n = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.Moebius.termμ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">Moebius</span>.<span class=\"name\">termμ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1050-L1051","name":"ArithmeticFunction.termμ","line":1050,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termμ","doc":"`μ` is the Möbius function. If `n` is squarefree with an even number of distinct prime factors,\n`μ n = 1`. If `n` is squarefree with an odd number of distinct prime factors, `μ n = -1`.\nIf `n` is not squarefree, `μ n = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termμ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termμ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1046-L1047","name":"ArithmeticFunction.moebius","line":1046,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius","doc":"`μ` is the Möbius function. If `n` is squarefree with an even number of distinct prime factors,\n`μ n = 1`. If `n` is squarefree with an odd number of distinct prime factors, `μ n = -1`.\nIf `n` is not squarefree, `μ n = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1039-L1040","name":"ArithmeticFunction.cardDistinctFactors_apply_prime","line":1039,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1033-L1035","name":"ArithmeticFunction.cardDistinctFactors_apply_prime_pow","line":1033,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply_prime_pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1022-L1029","name":"ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree","line":1022,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_eq_cardFactors_iff_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1018-L1019","name":"ArithmeticFunction.cardDistinctFactors_apply","line":1018,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/List/Defs.html#List.dedup\">List.dedup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factors.html#Nat.factors\">Nat.factors</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1015-L1015","name":"ArithmeticFunction.cardDistinctFactors_one","line":1015,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1011-L1011","name":"ArithmeticFunction.cardDistinctFactors_zero","line":1011,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors_zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardDistinctFactors</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1008-L1009","name":"ArithmeticFunction.omega.termω","line":1008,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.omega.termω","doc":"`ω n` is the number of distinct prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.omega.termω\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">omega</span>.<span class=\"name\">termω</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1005-L1006","name":"ArithmeticFunction.termω","line":1005,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termω","doc":"`ω n` is the number of distinct prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termω\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termω</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L1001-L1002","name":"ArithmeticFunction.cardDistinctFactors","line":1001,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors","doc":"`ω n` is the number of distinct prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardDistinctFactors\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L996-L997","name":"ArithmeticFunction.cardFactors_apply_prime_pow","line":996,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply_prime_pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L991-L992","name":"ArithmeticFunction.cardFactors_apply_prime","line":991,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L983-L987","name":"ArithmeticFunction.cardFactors_multiset_prod","line":983,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_multiset_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_multiset_prod\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_multiset_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<span class=\"fn\">⇑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors\">ArithmeticFunction.cardFactors</a></span>)</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L977-L980","name":"ArithmeticFunction.cardFactors_mul","line":977,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_mul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n0 : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L967-L974","name":"ArithmeticFunction.cardFactors_eq_one_iff_prime","line":967,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_eq_one_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_eq_one_iff_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_eq_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L963-L963","name":"ArithmeticFunction.cardFactors_one","line":963,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L961-L961","name":"ArithmeticFunction.cardFactors_zero","line":961,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L956-L957","name":"ArithmeticFunction.cardFactors_apply","line":956,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.cardFactors</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factors.html#Nat.factors\">Nat.factors</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L953-L954","name":"ArithmeticFunction.Omega.termΩ","line":953,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.Omega.termΩ","doc":"`Ω n` is the number of prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.Omega.termΩ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">Omega</span>.<span class=\"name\">termΩ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L950-L951","name":"ArithmeticFunction.termΩ","line":950,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termΩ","doc":"`Ω n` is the number of prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termΩ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termΩ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L946-L947","name":"ArithmeticFunction.cardFactors","line":946,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors","doc":"`Ω n` is the number of prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.cardFactors\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L940-L942","name":"ArithmeticFunction.isMultiplicative_sigma","line":940,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_sigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_sigma\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L935-L936","name":"ArithmeticFunction.isMultiplicative_pow","line":935,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow\">ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L926-L931","name":"ArithmeticFunction.IsMultiplicative.ppow","line":926,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.ppow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.ppow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">ppow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L921-L922","name":"ArithmeticFunction.isMultiplicative_id","line":921,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_id\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.id\">ArithmeticFunction.id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L916-L917","name":"ArithmeticFunction.isMultiplicative_zeta","line":916,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L904-L912","name":"ArithmeticFunction.isMultiplicative_one","line":904,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.isMultiplicative_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L893-L900","name":"ArithmeticFunction.zeta_mul_pow_eq_sigma","line":893,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_mul_pow_eq_sigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_mul_pow_eq_sigma\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_mul_pow_eq_sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow\">ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L889-L890","name":"ArithmeticFunction.sigma_zero_apply_prime_pow","line":889,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_zero_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_zero_apply_prime_pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_zero_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L886-L886","name":"ArithmeticFunction.sigma_zero_apply","line":886,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_zero_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_zero_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span>.card</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L883-L883","name":"ArithmeticFunction.sigma_one_apply","line":883,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_one_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_one_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_one_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L879-L880","name":"ArithmeticFunction.sigma_apply","line":879,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\">ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L876-L877","name":"ArithmeticFunction.sigma.termσ","line":876,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma.termσ","doc":"`σ k n` is the sum of the `k`th powers of the divisors of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma.termσ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma</span>.<span class=\"name\">termσ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L873-L874","name":"ArithmeticFunction.termσ","line":873,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termσ","doc":"`σ k n` is the sum of the `k`th powers of the divisors of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termσ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termσ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L869-L870","name":"ArithmeticFunction.sigma","line":869,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma","doc":"`σ k n` is the sum of the `k`th powers of the divisors of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.sigma\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L863-L865","name":"ArithmeticFunction.pow_zero_eq_zeta","line":863,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow_zero_eq_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow_zero_eq_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow_zero_eq_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow\">ArithmeticFunction.pow</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L856-L860","name":"ArithmeticFunction.pow_apply","line":856,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow\">ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span> then <span class=\"fn\">0</span> else <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L851-L852","name":"ArithmeticFunction.pow","line":851,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow","doc":"`pow k n = n ^ k`, except `pow 0 0 = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L846-L847","name":"ArithmeticFunction.id_apply","line":846,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.id_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.id</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L841-L842","name":"ArithmeticFunction.id","line":841,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.id","doc":"The identity on `ℕ` as an `ArithmeticFunction`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.id\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L808-L833","name":"ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply","line":808,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">lcm_apply_mul_gcd_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Nat/Basic.html#Nat.lcm\">Nat.lcm</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L793-L806","name":"ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree","line":793,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_add_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors\">ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">p</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L784-L791","name":"ArithmeticFunction.IsMultiplicative.prodPrimeFactors","line":784,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.prodPrimeFactors\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors\">ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L769-L780","name":"ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers","line":769,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers","doc":"Two multiplicative functions `f` and `g` are equal if and only if\nthey agree on prime powers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">eq_iff_eq_on_prime_powers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p </span>i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L756-L764","name":"ArithmeticFunction.IsMultiplicative.iff_ne_zero","line":756,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.iff_ne_zero","doc":"A recapitulation of the definition of multiplicative that is simpler for proofs "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.iff_ne_zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">iff_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ {<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L749-L752","name":"ArithmeticFunction.IsMultiplicative.multiplicative_factorization","line":749,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.multiplicative_factorization","doc":"For any multiplicative function `f` and any `n > 0`,\nwe can evaluate `f n` by evaluating `f` at `p ^ k` over the factorization of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.multiplicative_factorization\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">multiplicative_factorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Finsupp.html#Finsupp.prod\">Finsupp.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization\">Nat.factorization</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L739-L744","name":"ArithmeticFunction.IsMultiplicative.pdiv","line":739,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.pdiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.pdiv\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">pdiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv\">ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L731-L735","name":"ArithmeticFunction.IsMultiplicative.pmul","line":731,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.pmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.pmul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L669-L727","name":"ArithmeticFunction.IsMultiplicative.mul","line":669,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.mul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L662-L665","name":"ArithmeticFunction.IsMultiplicative.int_cast","line":662,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.int_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.int_cast\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">int_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L655-L658","name":"ArithmeticFunction.IsMultiplicative.nat_cast","line":655,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.nat_cast\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">nat_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L648-L652","name":"ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors","line":648,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod_of_subset_primeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">l</span>.primeFactors</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L642-L646","name":"ArithmeticFunction.IsMultiplicative.map_prod_of_prime","line":642,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod_of_prime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L631-L639","name":"ArithmeticFunction.IsMultiplicative.map_prod","line":631,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_prod\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Set.Pairwise</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L624-L626","name":"ArithmeticFunction.IsMultiplicative.map_mul_of_coprime","line":624,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_mul_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_mul_of_coprime\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_mul_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L619-L620","name":"ArithmeticFunction.IsMultiplicative.map_one","line":619,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative.map_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L608-L609","name":"ArithmeticFunction.IsMultiplicative","line":608,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative","doc":"Multiplicative functions "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L601-L603","name":"ArithmeticFunction.prodPrimeFactors_apply","line":601,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prodPrimeFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors\">ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L595-L596","name":"ArithmeticFunction.bigproddvd","line":595,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.bigproddvd","doc":"`∏ᵖ p ∣ n, f p` is custom notation for `prodPrimeFactors f n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.bigproddvd\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">bigproddvd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L589-L591","name":"ArithmeticFunction.prodPrimeFactors","line":589,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors","doc":"The map $n \\mapsto \\prod_{p \\mid n} f(p)$ as an arithmetic function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.prodPrimeFactors\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prodPrimeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L579-L582","name":"ArithmeticFunction.pdiv_zeta","line":579,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv_zeta","doc":"This result only holds for `DivisionSemiring`s instead of `GroupWithZero`s because zeta takes\nvalues in ℕ, and hence the coercion requires an `AddMonoidWithOne`. TODO: Generalise zeta "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionSemiring\">DivisionSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv\">ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L573-L574","name":"ArithmeticFunction.pdiv_apply","line":573,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv\">ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L569-L570","name":"ArithmeticFunction.pdiv","line":569,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv","doc":"This is the pointwise division of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pdiv\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L557-L561","name":"ArithmeticFunction.ppow_succ'","line":557,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_succ'\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{kpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L551-L554","name":"ArithmeticFunction.ppow_succ","line":551,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_succ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L546-L548","name":"ArithmeticFunction.ppow_apply","line":546,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(kpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L542-L542","name":"ArithmeticFunction.ppow_zero","line":542,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow_zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\">ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L537-L538","name":"ArithmeticFunction.ppow","line":537,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow","doc":"This is the pointwise power of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ppow\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L527-L529","name":"ArithmeticFunction.zeta_pmul","line":527,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_pmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_pmul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">(<span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L521-L523","name":"ArithmeticFunction.pmul_zeta","line":521,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L511-L514","name":"ArithmeticFunction.pmul_assoc","line":511,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_assoc\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₃ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span></span>)</span> <span class=\"fn\">f₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f₁</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f₂</span> <span class=\"fn\">f₃</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L506-L508","name":"ArithmeticFunction.pmul_comm","line":506,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_comm\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L502-L503","name":"ArithmeticFunction.pmul_apply","line":502,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MulZeroClass\">MulZeroClass</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\">ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L497-L498","name":"ArithmeticFunction.pmul","line":497,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul","doc":"This is the pointwise product of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.pmul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MulZeroClass\">MulZeroClass</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L485-L486","name":"ArithmeticFunction.mul_zeta_apply","line":485,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_zeta_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L480-L481","name":"ArithmeticFunction.zeta_mul_apply","line":480,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_mul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L470-L477","name":"ArithmeticFunction.coe_mul_zeta_apply","line":470,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_mul_zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_mul_zeta_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_mul_zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L464-L466","name":"ArithmeticFunction.coe_zeta_mul_apply","line":464,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_mul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L452-L460","name":"ArithmeticFunction.coe_zeta_smul_apply","line":452,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_zeta_smul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L447-L448","name":"ArithmeticFunction.zeta_apply_ne","line":447,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_apply_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_apply_ne\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_apply_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L443-L444","name":"ArithmeticFunction.zeta_apply","line":443,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> then <span class=\"fn\">0</span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L439-L440","name":"ArithmeticFunction.zeta.termζ","line":439,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta.termζ","doc":"`ζ 0 = 0`, otherwise `ζ x = 1`. The Dirichlet Series is the Riemann `ζ`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta.termζ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta</span>.<span class=\"name\">termζ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L436-L437","name":"ArithmeticFunction.termζ","line":436,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termζ","doc":"`ζ 0 = 0`, otherwise `ζ x = 1`. The Dirichlet Series is the Riemann `ζ`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.termζ\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termζ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L432-L433","name":"ArithmeticFunction.zeta","line":432,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta","doc":"`ζ 0 = 0`, otherwise `ζ x = 1`. The Dirichlet Series is the Riemann `ζ`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L412-L427","name":"ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","line":412,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L406-L410","name":"ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","line":406,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L399-L404","name":"ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","line":399,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L378-L394","name":"ArithmeticFunction.instSemiring","line":378,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instSemiring\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L355-L375","name":"ArithmeticFunction.instMonoid","line":355,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L327-L346","name":"ArithmeticFunction.one_smul'","line":327,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_smul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_smul'\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L319-L324","name":"ArithmeticFunction.mul_smul'","line":319,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_smul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_smul'\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L309-L312","name":"ArithmeticFunction.intCoe_mul","line":309,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_mul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L302-L305","name":"ArithmeticFunction.natCoe_mul","line":302,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_mul\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L298-L298","name":"ArithmeticFunction.mul_apply_one","line":298,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_apply_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_apply_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_apply_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L293-L295","name":"ArithmeticFunction.mul_apply","line":293,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.mul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L289-L290","name":"ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","line":289,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","doc":"The Dirichlet convolution of two arithmetic functions `f` and `g` is another arithmetic function\nsuch that `(f * g) n` is the sum of `f x * g y` over all `(x,y)` such that `x * y = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instMulArithmeticFunctionToZeroToMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L280-L282","name":"ArithmeticFunction.smul_apply","line":280,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.smul_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L276-L277","name":"ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","line":276,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","doc":"The Dirichlet convolution of two arithmetic functions `f` and `g` is another arithmetic function\nsuch that `(f * g) n` is the sum of `f x * g y` over all `(x,y)` such that `x * y = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L266-L268","name":"ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","line":266,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L261-L264","name":"ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","line":261,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L258-L259","name":"ArithmeticFunction.instNegArithmeticFunctionToZero","line":258,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instNegArithmeticFunctionToZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instNegArithmeticFunctionToZero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instNegArithmeticFunctionToZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#NegZeroClass\">NegZeroClass</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L255-L256","name":"ArithmeticFunction.instAddCommMonoid","line":255,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddCommMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L247-L252","name":"ArithmeticFunction.instAddMonoidWithOne","line":247,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddMonoidWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddMonoidWithOne\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddMonoidWithOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L236-L242","name":"ArithmeticFunction.instAddMonoid","line":236,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instAddMonoid\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L232-L233","name":"ArithmeticFunction.add_apply","line":232,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.add_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L228-L229","name":"ArithmeticFunction.add","line":228,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.add\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L218-L221","name":"ArithmeticFunction.intCoe_one","line":218,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L211-L214","name":"ArithmeticFunction.natCoe_one","line":211,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L204-L207","name":"ArithmeticFunction.coe_coe","line":204,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_coe\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L199-L200","name":"ArithmeticFunction.intCoe_apply","line":199,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L194-L195","name":"ArithmeticFunction.intCoe_int","line":194,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe_int\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L189-L190","name":"ArithmeticFunction.intCoe","line":189,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.intCoe\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L185-L187","name":"ArithmeticFunction.ofInt","line":185,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ofInt","doc":"Coerce an arithmetic function with values in `ℤ` to one with values in `R`. We cannot inline\nthis in `intCoe` because it gets unfolded too much. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ofInt\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ofInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L177-L179","name":"ArithmeticFunction.natCoe_apply","line":177,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L172-L173","name":"ArithmeticFunction.natCoe_nat","line":172,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe_nat\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L167-L168","name":"ArithmeticFunction.natCoe","line":167,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natCoe\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L163-L165","name":"ArithmeticFunction.natToArithmeticFunction","line":163,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natToArithmeticFunction","doc":"Coerce an arithmetic function with values in `ℕ` to one with values in `R`. We cannot inline\nthis in `natCoe` because it gets unfolded too much. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.natToArithmeticFunction\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natToArithmeticFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L152-L153","name":"ArithmeticFunction.one_apply_ne","line":152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_apply_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_apply_ne\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_apply_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L147-L148","name":"ArithmeticFunction.one_one","line":147,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L142-L143","name":"ArithmeticFunction.one_apply","line":142,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L139-L140","name":"ArithmeticFunction.one","line":139,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L131-L132","name":"ArithmeticFunction.ext_iff","line":131,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ext_iff\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L127-L128","name":"ArithmeticFunction.ext","line":127,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.ext\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L122-L123","name":"ArithmeticFunction.zero_apply","line":122,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zero_apply\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L117-L118","name":"ArithmeticFunction.coe_inj","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_inj\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L113-L114","name":"ArithmeticFunction.map_zero","line":113,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.map_zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L109-L110","name":"ArithmeticFunction.coe_mk","line":109,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.coe_mk\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">hf</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L105-L105","name":"ArithmeticFunction.toFun_eq","line":105,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.toFun_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.toFun_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">toFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L101-L102","name":"ArithmeticFunction.instFunLikeArithmeticFunctionNat","line":101,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instFunLikeArithmeticFunctionNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.instFunLikeArithmeticFunctionNat\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instFunLikeArithmeticFunctionNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L90-L90","name":"instInhabitedArithmeticFunction","line":90,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#instInhabitedArithmeticFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#instInhabitedArithmeticFunction\"><span class=\"name\">instInhabitedArithmeticFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L87-L88","name":"ArithmeticFunction.zero","line":87,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zero\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/ArithmeticFunction.lean#L83-L84","name":"ArithmeticFunction","line":83,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction","doc":"An arithmetic function is a function from `ℕ` that maps 0 to 0. In the literature, they are\noften instead defined as functions from `ℕ+`. Multiplication on `ArithmeticFunctions` is by\nDirichlet convolution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\"><span class=\"name\">ArithmeticFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}