{"name":"Mathlib.NumberTheory.DiophantineApproximation","instances":[],"imports":["Init","Mathlib.Algebra.ContinuedFractions.Computation.ApproximationCorollaries","Mathlib.Algebra.ContinuedFractions.Computation.Translations","Mathlib.Data.Real.Irrational","Mathlib.RingTheory.Coprime.Lemmas","Mathlib.Tactic.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L579-L582","name":"Real.exists_convs_eq_rat","line":579,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_convs_eq_rat","doc":"The main result, *Legendre's Theorem* on rational approximation:\nif `ξ` is a real number and `q` is a rational number such that `|ξ - q| < 1/(2*q.den^2)`,\nthen `q` is a convergent of the continued fraction expansion of `ξ`.\nThis is the version using `GenContFract.convs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_convs_eq_rat\"><span class=\"name\">Real</span>.<span class=\"name\">exists_convs_eq_rat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">ξ</span></span>)</span>.convs</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L562-L573","name":"Real.exists_rat_eq_convergent","line":562,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_eq_convergent","doc":"The main result, *Legendre's Theorem* on rational approximation:\nif `ξ` is a real number and `q` is a rational number such that `|ξ - q| < 1/(2*q.den^2)`,\nthen `q` is a convergent of the continued fraction expansion of `ξ`.\nThis version uses `Real.convergent`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_eq_convergent\"><span class=\"name\">Real</span>.<span class=\"name\">exists_rat_eq_convergent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span>.convergent</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L513-L556","name":"Real.exists_rat_eq_convergent'","line":513,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_eq_convergent'","doc":"The technical version of *Legendre's Theorem*. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_eq_convergent'\"><span class=\"name\">Real</span>.<span class=\"name\">exists_rat_eq_convergent'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.ContfracLegendre.Ass\">Real.ContfracLegendre.Ass</a> <span class=\"fn\">ξ</span> <span class=\"fn\">u</span> <span class=\"fn\">↑<span class=\"fn\">v</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span>.convergent</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L385-L387","name":"Real.ContfracLegendre.Ass","line":385,"kind":"def","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.ContfracLegendre.Ass","doc":"Define the technical condition to be used as assumption in the inductive proof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.ContfracLegendre.Ass\"><span class=\"name\">Real</span>.<span class=\"name\">ContfracLegendre</span>.<span class=\"name\">Ass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L363-L368","name":"Real.convs_eq_convergent","line":363,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convs_eq_convergent","doc":"The `n`th convergent of the `GenContFract.of ξ` agrees with `ξ.convergent n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convs_eq_convergent\"><span class=\"name\">Real</span>.<span class=\"name\">convs_eq_convergent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">ξ</span></span>)</span>.convs</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span>.convergent</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L349-L353","name":"Real.convergent_of_int","line":349,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_of_int","doc":"If `ξ` is an integer, all its convergents equal `ξ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_of_int\"><span class=\"name\">Real</span>.<span class=\"name\">convergent_of_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">ξ</span></span>)</span>.convergent</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">ξ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L342-L345","name":"Real.convergent_of_zero","line":342,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_of_zero","doc":"All convergents of `0` are zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_of_zero\"><span class=\"name\">Real</span>.<span class=\"name\">convergent_of_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent\">Real.convergent</a> <span class=\"fn\">0</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L334-L338","name":"Real.convergent_succ","line":334,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_succ","doc":"The `(n+1)`th convergent of `ξ` is the `n`th convergent of `1/(fract ξ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_succ\"><span class=\"name\">Real</span>.<span class=\"name\">convergent_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span>.convergent</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">ξ</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">ξ</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span>.convergent</span> <span class=\"fn\">n</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L329-L330","name":"Real.convergent_zero","line":329,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_zero","doc":"The zeroth convergent of `ξ` is `⌊ξ⌋`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent_zero\"><span class=\"name\">Real</span>.<span class=\"name\">convergent_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span>.convergent</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">ξ</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L323-L325","name":"Real.convergent","line":323,"kind":"def","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent","doc":"We give a direct recursive definition of the convergents of the continued fraction\nexpansion of a real number `ξ`. The main reason for that is that we want to have the\nconvergents as rational numbers; the versions `(GenContFract.of ξ).convs` and\n`(GenContFract.of ξ).convs'` always give something of the same type as `ξ`.\nWe can then also use dot notation `ξ.convergent n`.\nAnother minor reason is that this demonstrates that the proof\nof Legendre's theorem does not need anything beyond this definition.\nWe provide a proof that this definition agrees with the other one;\nsee `Real.convs_eq_convergent`.\n(Note that we use the fact that `1/0 = 0` here to make it work for rational `ξ`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.convergent\"><span class=\"name\">Real</span>.<span class=\"name\">convergent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L278-L285","name":"Real.infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational","line":278,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational","doc":"The set of good rational approximations to a real number `ξ` is infinite if and only if\n`ξ` is irrational. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational\"><span class=\"name\">Real</span>.<span class=\"name\">infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> | <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span>}</span>.Infinite</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> <span class=\"fn\">ξ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L254-L272","name":"Rat.finite_rat_abs_sub_lt_one_div_den_sq","line":254,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Rat.finite_rat_abs_sub_lt_one_div_den_sq","doc":"A rational number has only finitely many good rational approximations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Rat.finite_rat_abs_sub_lt_one_div_den_sq\"><span class=\"name\">Rat</span>.<span class=\"name\">finite_rat_abs_sub_lt_one_div_den_sq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> | <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">q</span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span>}</span>.Finite</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L225-L251","name":"Rat.den_le_and_le_num_le_of_sub_lt_one_div_den_sq","line":225,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Rat.den_le_and_le_num_le_of_sub_lt_one_div_den_sq","doc":"If `ξ` is rational, then the good rational approximations to `ξ` have bounded\nnumerator and denominator. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Rat.den_le_and_le_num_le_of_sub_lt_one_div_den_sq\"><span class=\"name\">Rat</span>.<span class=\"name\">den_le_and_le_num_le_of_sub_lt_one_div_den_sq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">q</span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span>.den</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ξ</span>.den</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">q</span>.num</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span>.num</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L198-L205","name":"Real.infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational","line":198,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational","doc":"If `ξ` is an irrational real number, then there are infinitely many good\nrational approximations to `ξ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational\"><span class=\"name\">Real</span>.<span class=\"name\">infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hξ : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> <span class=\"fn\">ξ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> | <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span>}</span>.Infinite</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L177-L194","name":"Real.exists_rat_abs_sub_lt_and_lt_of_irrational","line":177,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_abs_sub_lt_and_lt_of_irrational","doc":"Given any rational approximation `q` to the irrational real number `ξ`, there is\na good rational approximation `q'` such that `|ξ - q'| < |ξ - q|`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_abs_sub_lt_and_lt_of_irrational\"><span class=\"name\">Real</span>.<span class=\"name\">exists_rat_abs_sub_lt_and_lt_of_irrational</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hξ : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> <span class=\"fn\">ξ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">q'</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q'</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q'</span>.den</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q'</span></span></span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L148-L159","name":"Real.exists_rat_abs_sub_le_and_den_le","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_abs_sub_le_and_den_le","doc":"*Dirichlet's approximation theorem:*\nFor any real number `ξ` and positive natural `n`, there is a fraction `q`\nsuch that `q.den ≤ n` and `|ξ - q| ≤ 1/((n+1)*q.den)`.\n\nSee also `AddCircle.exists_norm_nsmul_le`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_rat_abs_sub_le_and_den_le\"><span class=\"name\">Real</span>.<span class=\"name\">exists_rat_abs_sub_le_and_den_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n_pos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">q</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.den</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span>.den</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L136-L141","name":"Real.exists_nat_abs_mul_sub_round_le","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_nat_abs_mul_sub_round_le","doc":"*Dirichlet's approximation theorem:*\nFor any real number `ξ` and positive natural `n`, there is a natural number `k`,\nwith `0 < k ≤ n` such that `|k*ξ - round(k*ξ)| ≤ 1/(n+1)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_nat_abs_mul_sub_round_le\"><span class=\"name\">Real</span>.<span class=\"name\">exists_nat_abs_mul_sub_round_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n_pos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ξ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#round\">round</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ξ</span></span>)</span></span>)</span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/DiophantineApproximation.lean#L91-L130","name":"Real.exists_int_int_abs_mul_sub_le","line":91,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_int_int_abs_mul_sub_le","doc":"*Dirichlet's approximation theorem:*\nFor any real number `ξ` and positive natural `n`, there are integers `j` and `k`,\nwith `0 < k ≤ n` and `|k*ξ - j| ≤ 1/(n+1)`.\n\nSee also `Real.exists_nat_abs_mul_sub_round_le`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DiophantineApproximation.html#Real.exists_int_int_abs_mul_sub_le\"><span class=\"name\">Real</span>.<span class=\"name\">exists_int_int_abs_mul_sub_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ξ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n_pos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">j</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ξ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></span></span></div></div>"}]}