{"name":"Mathlib.NumberTheory.LSeries.AbstractFuncEq","instances":[],"imports":["Init","Mathlib.Analysis.MellinTransform"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L452-L463","name":"WeakFEPair.Λ_residue_zero","line":452,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ_residue_zero","doc":"The residue of `Λ` at `s = 0` is equal to `-f₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ_residue_zero\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">Λ_residue_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L435-L449","name":"WeakFEPair.Λ_residue_k","line":435,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ_residue_k","doc":"The residue of `Λ` at `s = k` is equal to `ε • g₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ_residue_k\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">Λ_residue_k</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L427-L432","name":"WeakFEPair.functional_equation","line":427,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.functional_equation","doc":"Functional equation formulated for `Λ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.functional_equation\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">functional_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L423-L424","name":"WeakFEPair.functional_equation₀","line":423,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.functional_equation₀","doc":"Functional equation formulated for `Λ₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.functional_equation₀\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">functional_equation₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ₀</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ₀</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L409-L420","name":"WeakFEPair.hasMellin","line":409,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hasMellin","doc":"Relation between `Λ s` and the Mellin transform of `f - f₀`, where the latter is defined. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hasMellin\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hasMellin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/MellinTransform.html#HasMellin\">HasMellin</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L396-L406","name":"WeakFEPair.differentiableAt_Λ","line":396,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.differentiableAt_Λ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.differentiableAt_Λ\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">differentiableAt_Λ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.g₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L394-L394","name":"WeakFEPair.differentiable_Λ₀","line":394,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.differentiable_Λ₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.differentiable_Λ₀\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">differentiable_Λ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#Differentiable\">Differentiable</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\"><span class=\"fn\">P</span>.Λ₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L389-L392","name":"WeakFEPair.symm_Λ₀_eq","line":389,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.symm_Λ₀_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.symm_Λ₀_eq\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">symm_Λ₀_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ₀</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L385-L387","name":"WeakFEPair.Λ₀_eq","line":385,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ₀_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ₀_eq\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">Λ₀_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ₀</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L383-L383","name":"WeakFEPair.Λ","line":383,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ","doc":"A meromorphic function which agrees with the Mellin transform of `f - f₀` where defined "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">Λ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L380-L380","name":"WeakFEPair.Λ₀","line":380,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ₀","doc":"An entire function which differs from the Mellin transform of `f - f₀`, where defined, by a\ncorrection term of the form `A / s + B / (k - s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.Λ₀\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">Λ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L338-L372","name":"WeakFEPair.f_modif_aux2","line":338,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif_aux2","doc":"Compute the Mellin transform of the modifying term used to kill off the constants at\n`0` and `∞`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif_aux2\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">f_modif_aux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/MellinTransform.html#mellin\">mellin</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f_modif</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L320-L334","name":"WeakFEPair.f_modif_aux1","line":320,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif_aux1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif_aux1\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">f_modif_aux1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f_modif</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>.indicator</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f₀</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>)</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">1</span>}</span>.indicator</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f₀</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">1</span></span></span></span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L299-L317","name":"WeakFEPair.toStrongFEPair","line":299,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.toStrongFEPair","doc":"Given a weak FE-pair `(f, g)`, modify it into a strong FE-pair by subtracting suitable\ncorrection terms from `f` and `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.toStrongFEPair\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">toStrongFEPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L279-L295","name":"WeakFEPair.hf_modif_FE","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_modif_FE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_modif_FE\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_modif_FE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f_modif</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.g_modif</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L260-L277","name":"WeakFEPair.hf_modif_int","line":260,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_modif_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_modif_int\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_modif_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LocallyIntegrable.html#MeasureTheory.LocallyIntegrableOn\">MeasureTheory.LocallyIntegrableOn</a> <span class=\"fn\"><span class=\"fn\">P</span>.f_modif</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L256-L258","name":"WeakFEPair.g_modif","line":256,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g_modif","doc":"Piecewise modified version of `g` with optimal asymptotics. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g_modif\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">g_modif</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L251-L253","name":"WeakFEPair.f_modif","line":251,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif","doc":"Piecewise modified version of `f` with optimal asymptotics. We deliberately choose intervals\nwhich don't quite join up, so the function is `0` at `x = 1`, in order to maintain symmetry;\nthere is no \"good\" choice of value at `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f_modif\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">f_modif</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L214-L236","name":"StrongFEPair.functional_equation","line":214,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.functional_equation","doc":"Main theorem about strong FE pairs: if `(f, g)` are a strong FE pair, then the Mellin\ntransforms of `f` and `g` are related by `s ↦ k - s`.\n\nThis is proved by making a substitution `t ↦ t⁻¹` in the Mellin transform integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.functional_equation\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">functional_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">P</span>.k</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L205-L208","name":"StrongFEPair.differentiable_Λ","line":205,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.differentiable_Λ","doc":"If `(f, g)` are a strong FE pair, then the Mellin transform of `f` is entire. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.differentiable_Λ\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">differentiable_Λ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#Differentiable\">Differentiable</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\"><span class=\"fn\">P</span>.Λ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L202-L202","name":"StrongFEPair.symm_Λ_eq","line":202,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.symm_Λ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.symm_Λ_eq\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">symm_Λ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.symm</span>.Λ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/MellinTransform.html#mellin\">mellin</a> <span class=\"fn\"><span class=\"fn\">P</span>.g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L200-L200","name":"StrongFEPair.Λ_eq","line":200,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.Λ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.Λ_eq\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">Λ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/MellinTransform.html#mellin\">mellin</a> <span class=\"fn\"><span class=\"fn\">P</span>.f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L195-L198","name":"StrongFEPair.hasMellin","line":195,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hasMellin","doc":"The Mellin transform of `f` is well-defined and equal to `P.Λ s`, for all `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hasMellin\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">hasMellin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/MellinTransform.html#HasMellin\">HasMellin</a> <span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.Λ</span> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L192-L192","name":"StrongFEPair.Λ","line":192,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.Λ","doc":"The completed L-function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.Λ\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">Λ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L183-L185","name":"StrongFEPair.hf_zero'","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf_zero'","doc":"As `x → 0`, `f x` decays faster than any power of `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf_zero'\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">hf_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L179-L180","name":"StrongFEPair.hf_top'","line":179,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf_top'","doc":"As `x → ∞`, `f x` decays faster than any power of `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf_top'\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">hf_top'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L159-L170","name":"WeakFEPair.hf_zero'","line":159,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_zero'","doc":"Power asymptotic for `f - f₀` as `x → 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_zero'\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">P</span>.f₀</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L136-L156","name":"WeakFEPair.hf_zero","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_zero","doc":"As `x → 0`, we have `f x = x ^ (-P.k) • constant` up to a rapidly decaying error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_zero\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>)</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">P</span>.g₀</span></span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L122-L125","name":"StrongFEPair.symm","line":122,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.symm","doc":"The hypotheses are symmetric in `f` and `g`, with the constant `ε` replaced by `ε⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.symm\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L112-L119","name":"WeakFEPair.symm","line":112,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.symm","doc":"The hypotheses are symmetric in `f` and `g`, with the constant `ε` replaced by `ε⁻¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.symm\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L104-L109","name":"WeakFEPair.h_feq'","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.h_feq'","doc":"Reformulated functional equation with `f` and `g` interchanged. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.h_feq'\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">h_feq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.ε</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">P</span>.k</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L97-L97","name":"StrongFEPair.hg₀","line":97,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hg₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hg₀\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">hg₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.g₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L97-L97","name":"StrongFEPair.hf₀","line":97,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.hf₀\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">hf₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.f₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L97-L97","name":"StrongFEPair.mk","line":97,"kind":"ctor","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair.mk\"><span class=\"name\">StrongFEPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toWeakFEPair : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toWeakFEPair</span>.f₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toWeakFEPair</span>.g₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\">StrongFEPair</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L97-L97","name":"StrongFEPair","line":97,"kind":"structure","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair","doc":"A structure designed to hold the hypotheses for the Mellin-functional-equation argument\n(version without constant terms) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#StrongFEPair\"><span class=\"name\">StrongFEPair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(E : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\"><span class=\"name\">WeakFEPair</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L93-L93","name":"WeakFEPair.hg_top","line":93,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hg_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hg_top\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hg_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">self</span>.g₀</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L92-L92","name":"WeakFEPair.hf_top","line":92,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_top\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">self</span>.f₀</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L91-L91","name":"WeakFEPair.h_feq","line":91,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.h_feq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.h_feq\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">h_feq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">self</span>.k</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L90-L90","name":"WeakFEPair.hε","line":90,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hε\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hε</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.ε</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L89-L89","name":"WeakFEPair.hk","line":89,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hk\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">self</span>.k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L88-L88","name":"WeakFEPair.hg_int","line":88,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hg_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hg_int\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hg_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LocallyIntegrable.html#MeasureTheory.LocallyIntegrableOn\">MeasureTheory.LocallyIntegrableOn</a> <span class=\"fn\"><span class=\"fn\">self</span>.g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L87-L87","name":"WeakFEPair.hf_int","line":87,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.hf_int\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">hf_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LocallyIntegrable.html#MeasureTheory.LocallyIntegrableOn\">MeasureTheory.LocallyIntegrableOn</a> <span class=\"fn\"><span class=\"fn\">self</span>.f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L86-L86","name":"WeakFEPair.g₀","line":86,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g₀","doc":"Constant terms at `∞` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g₀\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">g₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L86-L86","name":"WeakFEPair.f₀","line":86,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f₀","doc":"Constant terms at `∞` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f₀\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">f₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L84-L84","name":"WeakFEPair.ε","line":84,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.ε","doc":"Root number "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.ε\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">ε</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L82-L82","name":"WeakFEPair.k","line":82,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.k","doc":"Weight (exponent in the functional equation) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.k\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">k</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L80-L80","name":"WeakFEPair.g","line":80,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g","doc":"The functions whose Mellin transform we study "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.g\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L80-L80","name":"WeakFEPair.f","line":80,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f","doc":"The functions whose Mellin transform we study "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.f\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L78-L78","name":"WeakFEPair.mk","line":78,"kind":"ctor","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair.mk\"><span class=\"name\">WeakFEPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ε : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₀ : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g₀ : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf_int : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LocallyIntegrable.html#MeasureTheory.LocallyIntegrableOn\">MeasureTheory.LocallyIntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg_int : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LocallyIntegrable.html#MeasureTheory.LocallyIntegrableOn\">MeasureTheory.LocallyIntegrableOn</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_feq : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf_top : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">f₀</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg_top : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g₀</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">Filter.atTop</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">r</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\">WeakFEPair</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/AbstractFuncEq.lean#L78-L93","name":"WeakFEPair","line":78,"kind":"structure","docLink":"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair","doc":"A structure designed to hold the hypotheses for the Mellin-functional-equation argument\n(most general version: rapid decay at `∞` up to constant terms) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/AbstractFuncEq.html#WeakFEPair\"><span class=\"name\">WeakFEPair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(E : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}