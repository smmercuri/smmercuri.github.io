{"name":"Mathlib.NumberTheory.LSeries.Dirichlet","instances":[],"imports":["Init","Mathlib.NumberTheory.DirichletCharacter.Bounds","Mathlib.NumberTheory.LSeries.Convolution","Mathlib.NumberTheory.LSeries.Deriv","Mathlib.NumberTheory.LSeries.RiemannZeta","Mathlib.NumberTheory.SumPrimeReciprocals","Mathlib.NumberTheory.VonMangoldt"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L396-L402","name":"ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div","line":396,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div","doc":"The L-series of the von Mangoldt function `Λ` equals the negative logarithmic derivative\nof the Riemann zeta function on its domain of convergence `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_vonMangoldt_eq_deriv_riemannZeta_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L389-L392","name":"ArithmeticFunction.LSeries_vonMangoldt_eq","line":389,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq","doc":"The L-series of the von Mangoldt function `Λ` equals the negative logarithmic derivative\nof the L-series of the constant sequence `1` on its domain of convergence `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_vonMangoldt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L367-L380","name":"DirichletCharacter.LSeries_twist_vonMangoldt_eq","line":367,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_twist_vonMangoldt_eq","doc":"The L-series of the twist of the von Mangoldt function `Λ` by a Dirichlet character `χ` at `s`\nequals the negative logarithmic derivative of the L-series of `χ` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_twist_vonMangoldt_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_twist_vonMangoldt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span>)</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L360-L363","name":"DirichletCharacter.LSeriesSummable_twist_vonMangoldt","line":360,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_twist_vonMangoldt","doc":"The L-series of the twist of the von Mangoldt function `Λ` by a Dirichlet character `χ`\nconverges at `s` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_twist_vonMangoldt\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_twist_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L354-L356","name":"DirichletCharacter.convolution_twist_vonMangoldt","line":354,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_twist_vonMangoldt","doc":"A twisted version of the relation `Λ * ↑ζ = log` in terms of complex sequences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_twist_vonMangoldt\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">convolution_twist_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L338-L347","name":"ArithmeticFunction.LSeriesSummable_vonMangoldt","line":338,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_vonMangoldt","doc":"The L-series of the von Mangoldt function `Λ` converges at `s` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_vonMangoldt\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L334-L335","name":"ArithmeticFunction.convolution_vonMangoldt_const_one","line":334,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_const_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_const_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">convolution_vonMangoldt_const_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L328-L332","name":"ArithmeticFunction.convolution_vonMangoldt_zeta","line":328,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_zeta","doc":"A translation of the relation `Λ * ↑ζ = log` of (real-valued) arithmetic functions\nto an equality of complex sequences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">convolution_vonMangoldt_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.vonMangoldt</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L310-L311","name":"riemannZeta_ne_zero_of_one_lt_re","line":310,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#riemannZeta_ne_zero_of_one_lt_re","doc":"The Riemann Zeta Function does not vanish on the half-plane `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#riemannZeta_ne_zero_of_one_lt_re\"><span class=\"name\">riemannZeta_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L306-L307","name":"LSeries_one_ne_zero_of_one_lt_re","line":306,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_ne_zero_of_one_lt_re","doc":"The L-series of the constant sequence `1` does not vanish on the right half-plane\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_ne_zero_of_one_lt_re\"><span class=\"name\">LSeries_one_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L301-L302","name":"LSeries_one_mul_Lseries_moebius","line":301,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_mul_Lseries_moebius","doc":"The L-series of the constant sequence `1` and of the Möbius function are inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_mul_Lseries_moebius\"><span class=\"name\">LSeries_one_mul_Lseries_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L297-L298","name":"LSeriesHasSum_one","line":297,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesHasSum_one","doc":"The L-series of the constant sequence `1` equals the Riemann zeta function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesHasSum_one\"><span class=\"name\">LSeriesHasSum_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesHasSum\">LSeriesHasSum</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L292-L293","name":"LSeries_one_eq_riemannZeta","line":292,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_eq_riemannZeta","doc":"The L-series of the constant sequence `1` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_eq_riemannZeta\"><span class=\"name\">LSeries_one_eq_riemannZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L283-L284","name":"ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re","line":283,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re","doc":"The L-series of the arithmetic function `ζ` does not vanish on the right half-plane\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L275-L279","name":"ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius","line":275,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius","doc":"The L-series of the arithmetic function `ζ` and of the Möbius function are inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_mul_Lseries_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L271-L272","name":"ArithmeticFunction.LSeriesHasSum_zeta","line":271,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesHasSum_zeta","doc":"The L-series of the arithmetic function `ζ` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesHasSum_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesHasSum_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesHasSum\">LSeriesHasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L261-L267","name":"ArithmeticFunction.LSeries_zeta_eq_riemannZeta","line":261,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq_riemannZeta","doc":"The L-series of the arithmetic function `ζ` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq_riemannZeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_eq_riemannZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L256-L257","name":"ArithmeticFunction.abscissaOfAbsConv_zeta","line":256,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_zeta","doc":"The abscissa of (absolute) convergence of the arithmetic function `ζ` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">abscissaOfAbsConv_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L252-L253","name":"ArithmeticFunction.zeta_LSeriesSummable_iff_one_lt_re","line":252,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.zeta_LSeriesSummable_iff_one_lt_re","doc":"**Alias** of `ArithmeticFunction.LSeriesSummable_zeta_iff`.\n\n---\n\nThe `LSeries` associated to the arithmetic function `ζ` converges at `s` if and only if\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.zeta_LSeriesSummable_iff_one_lt_re\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_LSeriesSummable_iff_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L249-L250","name":"ArithmeticFunction.LSeriesSummable_zeta_iff","line":249,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_zeta_iff","doc":"The `LSeries` associated to the arithmetic function `ζ` converges at `s` if and only if\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_zeta_iff\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_zeta_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L243-L245","name":"ArithmeticFunction.LSeries_zeta_eq","line":243,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq","doc":"The `LSeries` of the arithmetic function `ζ` is the same as the `LSeries` associated\nto the constant sequence `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L235-L236","name":"LSeriesSummable_one_iff","line":235,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesSummable_one_iff","doc":"The `LSeries` of the constant sequence `1` converges at `s` if and only if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesSummable_one_iff\"><span class=\"name\">LSeriesSummable_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L231-L232","name":"LSeries.abscissaOfAbsConv_one","line":231,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.abscissaOfAbsConv_one","doc":"The abscissa of (absolute) convergence of the constant sequence `1` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.abscissaOfAbsConv_one\"><span class=\"name\">LSeries</span>.<span class=\"name\">abscissaOfAbsConv_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L211-L213","name":"DirichletCharacter.LSeries_ne_zero_of_one_lt_re","line":211,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_ne_zero_of_one_lt_re","doc":"The L-series of a Dirichlet character does not vanish on the right half-plane `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_ne_zero_of_one_lt_re\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L199-L203","name":"DirichletCharacter.LSeries.mul_mu_eq_one","line":199,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries.mul_mu_eq_one","doc":"The L-series of a Dirichlet character `χ` and of the twist of `μ` by `χ` are multiplicative\ninverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries.mul_mu_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries</span>.<span class=\"name\">mul_mu_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L189-L194","name":"DirichletCharacter.LSeriesSummable_mul","line":189,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_mul","doc":"The L-series of the twist of `f` by a Dirichlet character converges at `s` if the L-series\nof `f` does. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L182-L185","name":"DirichletCharacter.absicssaOfAbsConv_eq_one","line":182,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.absicssaOfAbsConv_eq_one","doc":"The abscissa of absolute convergence of the L-series of a Dirichlet character mod `N > 0`\nis `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.absicssaOfAbsConv_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">absicssaOfAbsConv_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L174-L178","name":"DirichletCharacter.LSeriesSummable_iff","line":174,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_iff","doc":"The L-series of a Dirichlet character mod `N > 0` converges absolutely at `s` if and only if\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_iff\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L168-L170","name":"DirichletCharacter.LSeriesSummable_of_one_lt_re","line":168,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_of_one_lt_re","doc":"The L-series of a Dirichlet character converges absolutely at `s` if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_of_one_lt_re\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L156-L165","name":"DirichletCharacter.not_LSeriesSummable_at_one","line":156,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.not_LSeriesSummable_at_one","doc":"The L-series of a Dirichlet character mod `N > 0` does not converge absolutely at `s = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.not_LSeriesSummable_at_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">not_LSeriesSummable_at_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L152-L153","name":"DirichletCharacter.LSeries_modOne_eq","line":152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_modOne_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_modOne_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_modOne_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L147-L150","name":"DirichletCharacter.modOne_eq_one","line":147,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modOne_eq_one","doc":"The Dirichlet character mod `1` corresponds to the constant function `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modOne_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">modOne_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L137-L144","name":"DirichletCharacter.modZero_eq_delta","line":137,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modZero_eq_delta","doc":"The Dirichlet character mod `0` corresponds to `δ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modZero_eq_delta\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">modZero_eq_delta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L129-L134","name":"DirichletCharacter.convolution_mul_moebius","line":129,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_mul_moebius","doc":"The convolution of a Dirichlet character `χ` with the twist `χ * μ` is `δ`,\nthe indicator function of `{1}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_mul_moebius\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">convolution_mul_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L123-L124","name":"DirichletCharacter.delta_mul","line":123,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.delta_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.delta_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">delta_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L120-L121","name":"DirichletCharacter.mul_delta","line":120,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_delta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_delta\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul_delta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L111-L118","name":"DirichletCharacter.mul_convolution_distrib","line":111,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_convolution_distrib","doc":"Twisting by a Dirichlet character `χ` distributes over convolution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_convolution_distrib\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul_convolution_distrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(χ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L103-L104","name":"Dchar_one","line":103,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#Dchar_one","doc":"`χ₁` is (local) notation for the (necessarily trivial) Dirichlet character modulo `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#Dchar_one\"><span class=\"name\">Dchar_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L99-L101","name":"LSeries.convolution_one_eq_convolution_zeta","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.convolution_one_eq_convolution_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.convolution_one_eq_convolution_zeta\"><span class=\"name\">LSeries</span>.<span class=\"name\">convolution_one_eq_convolution_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L95-L97","name":"LSeries.one_convolution_eq_zeta_convolution","line":95,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.one_convolution_eq_zeta_convolution","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.one_convolution_eq_zeta_convolution\"><span class=\"name\">LSeries</span>.<span class=\"name\">one_convolution_eq_zeta_convolution</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">1</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L91-L93","name":"ArithmeticFunction.const_one_eq_zeta","line":91,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.const_one_eq_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.const_one_eq_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">const_one_eq_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">ArithmeticFunction.zeta</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L75-L77","name":"ArithmeticFunction.abscissaOfAbsConv_moebius","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_moebius","doc":"The abscissa of absolute convergence of the L-series of the Möbius function is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">abscissaOfAbsConv_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L65-L72","name":"ArithmeticFunction.LSeriesSummable_moebius_iff","line":65,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_moebius_iff","doc":"The L-series of the Möbius function converges absolutely at `s` if and only if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_moebius_iff\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_moebius_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L54-L62","name":"ArithmeticFunction.not_LSeriesSummable_moebius_at_one","line":54,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.not_LSeriesSummable_moebius_at_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.not_LSeriesSummable_moebius_at_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">not_LSeriesSummable_moebius_at_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ArithmeticFunction.moebius</span> <span class=\"fn\">n</span></span>)</span></span></span>)</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L37-L39","name":"ArithmeticFunction.one_eq_delta","line":37,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.one_eq_delta","doc":"`δ` is the function underlying the arithmetic function `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.one_eq_delta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_eq_delta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></span></div></div>"}]}