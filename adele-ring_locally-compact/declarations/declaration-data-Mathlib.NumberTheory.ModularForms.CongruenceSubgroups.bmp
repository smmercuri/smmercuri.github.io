{"name":"Mathlib.NumberTheory.ModularForms.CongruenceSubgroups","instances":[],"imports":["Init","Mathlib.Algebra.Group.Subgroup.Pointwise","Mathlib.Data.ZMod.Basic","Mathlib.GroupTheory.GroupAction.ConjAct","Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L224-L229","name":"CongruenceSubgroup.conj_cong_is_cong","line":224,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conj_cong_is_cong","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.conj_cong_is_cong\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">conj_cong_is_cong</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/ConjAct.html#ConjAct\">ConjAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Γ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L221-L222","name":"CongruenceSubgroup.Gamma_cong_eq_self","line":221,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_cong_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_cong_eq_self\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_cong_eq_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/ConjAct.html#ConjAct\">ConjAct</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L212-L213","name":"CongruenceSubgroup.Gamma0_is_congruence","line":212,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_is_congruence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_is_congruence\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0_is_congruence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L206-L210","name":"CongruenceSubgroup.Gamma1_is_congruence","line":206,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_is_congruence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_is_congruence\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_is_congruence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">CongruenceSubgroup.Gamma1</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L203-L204","name":"CongruenceSubgroup.Gamma_is_cong_sub","line":203,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_is_cong_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_is_cong_sub\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_is_cong_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L198-L201","name":"CongruenceSubgroup.isCongruenceSubgroup_trans","line":198,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.isCongruenceSubgroup_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.isCongruenceSubgroup_trans\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">isCongruenceSubgroup_trans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2 : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\">CongruenceSubgroup.IsCongruenceSubgroup</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L195-L196","name":"CongruenceSubgroup.IsCongruenceSubgroup","line":195,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup","doc":"A congruence subgroup is a subgroup of `SL(2, ℤ)` which contains some `Gamma N` for some\n`(N : ℕ+)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.IsCongruenceSubgroup\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">IsCongruenceSubgroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L186-L189","name":"CongruenceSubgroup.Gamma1_in_Gamma0","line":186,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_in_Gamma0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_in_Gamma0\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_in_Gamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">CongruenceSubgroup.Gamma1</a> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L166-L184","name":"CongruenceSubgroup.Gamma1_mem","line":166,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\">CongruenceSubgroup.Gamma1</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L162-L163","name":"CongruenceSubgroup.Gamma1","line":162,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1","doc":"The congruence subgroup `Gamma1` of `SL(2, ℤ)` consisting of matrices whose bottom\nrow is congruent to `(0,1)` modulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L142-L158","name":"CongruenceSubgroup.Gamma1_to_Gamma0_mem","line":142,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_to_Gamma0_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_to_Gamma0_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_to_Gamma0_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\">CongruenceSubgroup.Gamma1'</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L139-L140","name":"CongruenceSubgroup.Gamma1_mem'","line":139,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1_mem'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1_mem'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\">CongruenceSubgroup.Gamma1'</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map\">CongruenceSubgroup.Gamma0Map</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L135-L136","name":"CongruenceSubgroup.Gamma1'","line":135,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'","doc":"The congruence subgroup `Gamma1` (as a subgroup of `Gamma0`) of matrices whose bottom\nrow is congruent to `(0,1)` modulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma1'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma1'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L119-L131","name":"CongruenceSubgroup.Gamma0Map","line":119,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map","doc":"The group homomorphism from `Gamma0` to `ZMod N` given by mapping a matrix to its lower\nright-hand entry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0Map\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0Map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L115-L115","name":"CongruenceSubgroup.Gamma0_det","line":115,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_det","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_det\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0_det</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span>.det</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L112-L113","name":"CongruenceSubgroup.Gamma0_mem","line":112,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\">CongruenceSubgroup.Gamma0</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">A</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L93-L109","name":"CongruenceSubgroup.Gamma0","line":93,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0","doc":"The congruence subgroup of `SL(2, ℤ)` of matrices whose lower left-hand entry reduces to zero\nmodulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma0\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L83-L89","name":"CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma","line":83,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.ModularGroup_T_pow_mem_Gamma\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">ModularGroup_T_pow_mem_Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">ModularGroup.T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\"><span class=\"fn\">N</span>.natAbs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L71-L81","name":"CongruenceSubgroup.Gamma_zero_bot","line":71,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_zero_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_zero_bot\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_zero_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L67-L69","name":"CongruenceSubgroup.Gamma_one_top","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_one_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_one_top\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_one_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L64-L65","name":"CongruenceSubgroup.Gamma_normal","line":64,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_normal\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_normal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">N</span></span>)</span>.Normal</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L52-L62","name":"CongruenceSubgroup.Gamma_mem","line":52,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L48-L49","name":"CongruenceSubgroup.Gamma_mem'","line":48,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma_mem'\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma_mem'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\">CongruenceSubgroup.Gamma</a> <span class=\"fn\">N</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L45-L46","name":"CongruenceSubgroup.Gamma","line":45,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma","doc":"The full level `N` congruence subgroup of `SL(2, ℤ)` of matrices that reduce to the identity\nmodulo `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#CongruenceSubgroup.Gamma\"><span class=\"name\">CongruenceSubgroup</span>.<span class=\"name\">Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.lean#L37-L39","name":"SL_reduction_mod_hom_val","line":37,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#SL_reduction_mod_hom_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/CongruenceSubgroups.html#SL_reduction_mod_hom_val\"><span class=\"name\">SL_reduction_mod_hom_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">γ</span></span>)</span></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"}]}