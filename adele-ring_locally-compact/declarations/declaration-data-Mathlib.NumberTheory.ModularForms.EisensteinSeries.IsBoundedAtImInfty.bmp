{"name":"Mathlib.NumberTheory.ModularForms.EisensteinSeries.IsBoundedAtImInfty","instances":[],"imports":["Init","Mathlib.Analysis.Complex.UpperHalfPlane.FunctionsBoundedAtInfty","Mathlib.Analysis.Normed.Order.Lattice","Mathlib.NumberTheory.ModularForms.EisensteinSeries.UniformConvergence","Mathlib.NumberTheory.ModularForms.Identities"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.lean#L53-L69","name":"EisensteinSeries.isBoundedAtImInfty_eisensteinSeries_SIF","line":53,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.isBoundedAtImInfty_eisensteinSeries_SIF","doc":"Eisenstein series are bounded at infinity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.isBoundedAtImInfty_eisensteinSeries_SIF\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">isBoundedAtImInfty_eisensteinSeries_SIF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/FunctionsBoundedAtInfty.html#UpperHalfPlane.IsBoundedAtImInfty\">UpperHalfPlane.IsBoundedAtImInfty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisensteinSeries_SIF\">EisensteinSeries.eisensteinSeries_SIF</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span></span>)</span>.toFun</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.lean#L45-L50","name":"EisensteinSeries.abs_le_tsum_abs","line":45,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.abs_le_tsum_abs","doc":"The absolute value of the restricted sum is less than the full sum of the absolute values. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.abs_le_tsum_abs\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">abs_le_tsum_abs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.abs</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#eisensteinSeries\">eisensteinSeries</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>), <span class=\"fn\"><span class=\"fn\">Complex.abs</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisSummand\">EisensteinSeries.eisSummand</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.lean#L35-L42","name":"EisensteinSeries.summable_norm_eisSummand","line":35,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.summable_norm_eisSummand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/IsBoundedAtImInfty.html#EisensteinSeries.summable_norm_eisSummand\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">summable_norm_eisSummand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisSummand\">EisensteinSeries.eisSummand</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"}]}