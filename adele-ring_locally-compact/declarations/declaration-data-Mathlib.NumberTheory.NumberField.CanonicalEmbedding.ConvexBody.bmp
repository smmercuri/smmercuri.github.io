{"name":"Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody","instances":[{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","className":"MeasureTheory.Measure.IsAddHaarMeasure"},{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instNoAtomsProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","className":"MeasureTheory.NoAtoms"}],"imports":["Init","Mathlib.MeasureTheory.Group.GeometryOfNumbers","Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls","Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L629-L634","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","line":629,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_of_norm_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm/Defs.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L596-L627","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le","line":596,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le","doc":"Let `I` be a fractional ideal of `K`. Assume that `B : ℝ` is such that\n`minkowskiBound K I < volume (convexBodySum K B)` where `convexBodySum K B` is the set of points\n`x` such that `∑ w real, ‖x w‖ + 2 * ∑ w complex, ‖x w‖ ≤ B` (see `convexBodySum_volume` for\nthe computation of this volume), then there exists a nonzero algebraic number `a` in `I` such\nthat `|Norm a| < (B / d) ^ d` where `d` is the degree of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_of_norm_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm/Defs.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">a</span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L561-L589","name":"NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex","line":561,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_primitive_element_lt_of_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw₀ : <span class=\"fn\"><span class=\"fn\">w₀</span>.IsComplex</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">↑<span class=\"fn\">a</span></span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">√</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L545-L559","name":"NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal","line":545,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_primitive_element_lt_of_isReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw₀ : <span class=\"fn\"><span class=\"fn\">w₀</span>.IsReal</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">↑<span class=\"fn\">a</span></span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">B</span> <span class=\"fn\">1</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L537-L543","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'","line":537,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'","doc":"A version of `exists_ne_zero_mem_ideal_lt'` for the ring of integers of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_lt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L530-L534","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","line":530,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","doc":"A version of `exists_ne_zero_mem_ideal_lt` for the ring of integers of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L515-L527","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'","line":515,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'","doc":"A version of `exists_ne_zero_mem_ideal_lt` where the absolute value of the real part of `a` is\nsmaller than `1` at some fixed complex place. This is useful to ensure that `a` is not real. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_lt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">a</span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">a</span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L501-L511","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt","line":501,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt","doc":"Let `I` be a fractional ideal of `K`. Assume that `f : InfinitePlace K → ℝ≥0` is such that\n`minkowskiBound K I < volume (convexBodyLT K f)` where `convexBodyLT K f` is the set of\npoints `x` such that `‖x w‖ < f w` for all infinite places `w` (see `convexBodyLT_volume` for\nthe computation of this volume), then there exists a nonzero algebraic number `a` in `I` such\nthat `w a < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L489-L492","name":"NumberField.mixedEmbedding.minkowskiBound_pos","line":489,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound_pos\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L484-L487","name":"NumberField.mixedEmbedding.minkowskiBound_lt_top","line":484,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound_lt_top\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L470-L482","name":"NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis","line":470,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">volume_fundamentalDomain_fractionalIdealLatticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice/Basic.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis\">NumberField.mixedEmbedding.fractionalIdealLatticeBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FractionalIdeal.absNorm</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice/Basic.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L467-L468","name":"NumberField.mixedEmbedding.minkowskiBound","line":467,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound","doc":"The bound that appears in **Minkowski Convex Body theorem**, see\n`MeasureTheory.exists_ne_zero_mem_lattice_of_measure_mul_two_pow_lt_measure`. See\n`NumberField.mixedEmbedding.volume_fundamentalDomain_idealLatticeBasis_eq` and\n`NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis` for the computation of\n`volume (fundamentalDomain (idealLatticeBasis K))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.minkowskiBound\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L399-L449","name":"NumberField.mixedEmbedding.convexBodySum_volume","line":399,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_volume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L393-L396","name":"NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","line":393,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L390-L391","name":"NumberField.mixedEmbedding.convexBodySumFactor","line":390,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L382-L387","name":"NumberField.mixedEmbedding.convexBodySum_compact","line":382,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_compact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_compact\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_compact</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L376-L380","name":"NumberField.mixedEmbedding.convexBodySum_isBounded","line":376,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_isBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_isBounded\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_isBounded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.IsBounded\">Bornology.IsBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L371-L374","name":"NumberField.mixedEmbedding.convexBodySum_convex","line":371,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L366-L369","name":"NumberField.mixedEmbedding.convexBodySum_neg_mem","line":366,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L360-L364","name":"NumberField.mixedEmbedding.convexBodySum_mem","line":360,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">w</span>.mult</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">w</span></span> <span class=\"fn\">x</span></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L347-L358","name":"NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","line":347,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume_eq_zero_of_le_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L345-L345","name":"NumberField.mixedEmbedding.convexBodySum","line":345,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum","doc":"The convex body equal to the set of points `x : E` such that\n`∑ w real, ‖x w‖ + 2 * ∑ w complex, ‖x w‖ ≤ B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySum\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L335-L341","name":"NumberField.mixedEmbedding.convexBodySumFun_continuous","line":335,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_continuous\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_continuous</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">NumberField.mixedEmbedding.convexBodySumFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L324-L331","name":"NumberField.mixedEmbedding.norm_le_convexBodySumFun","line":324,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">norm_le_convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L314-L322","name":"NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","line":314,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L310-L312","name":"NumberField.mixedEmbedding.convexBodySumFun_smul","line":310,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_smul\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\">c</span>|</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L304-L308","name":"NumberField.mixedEmbedding.convexBodySumFun_add_le","line":304,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_add_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L300-L302","name":"NumberField.mixedEmbedding.convexBodySumFun_neg","line":300,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_neg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L296-L298","name":"NumberField.mixedEmbedding.convexBodySumFun_nonneg","line":296,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L284-L294","name":"NumberField.mixedEmbedding.convexBodySumFun_apply'","line":284,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_apply'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\">w</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <span class=\"fn\">w</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L281-L282","name":"NumberField.mixedEmbedding.convexBodySumFun_apply","line":281,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">w</span>.mult</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding.normAtPlace\">NumberField.mixedEmbedding.normAtPlace</a> <span class=\"fn\">w</span></span>)</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L279-L279","name":"NumberField.mixedEmbedding.convexBodySumFun","line":279,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun","doc":"The function that sends `x : ({w // IsReal w} → ℝ) × ({w // IsComplex w} → ℂ)` to\n`∑ w, ‖x.1 w‖ + 2 * ∑ w, ‖x.2 w‖`. It defines a norm and it used to define `convexBodySum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L219-L264","name":"NumberField.mixedEmbedding.convexBodyLT'_volume","line":219,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_volume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">∏ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">w</span>.mult</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L215-L217","name":"NumberField.mixedEmbedding.one_le_convexBodyLT'Factor","line":215,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.one_le_convexBodyLT'Factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.one_le_convexBodyLT'Factor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">one_le_convexBodyLT'Factor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L212-L213","name":"NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero","line":212,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'Factor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L209-L210","name":"NumberField.mixedEmbedding.convexBodyLT'Factor","line":209,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLT'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'Factor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'Factor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L194-L200","name":"NumberField.mixedEmbedding.convexBodyLT'_convex","line":194,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L187-L192","name":"NumberField.mixedEmbedding.convexBodyLT'_neg_mem","line":187,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L168-L185","name":"NumberField.mixedEmbedding.convexBodyLT'_mem","line":168,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">x</span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">w₀</span></span>)</span>.embedding</span> <span class=\"fn\">x</span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L163-L166","name":"NumberField.mixedEmbedding.convexBodyLT'","line":163,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'","doc":"A version of `convexBodyLT` with an additional condition at a fixed complex place. This is\nneeded to ensure the element constructed is not real, see for example\n`exists_primitive_element_lt_of_isComplex`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L136-L147","name":"NumberField.mixedEmbedding.adjust_f","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.adjust_f","doc":"This is a technical result: quite often, we want to impose conditions at all infinite places\nbut one and choose the value at the remaining place so that we can apply\n`exists_ne_zero_mem_ringOfIntegers_lt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.adjust_f\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">adjust_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₁ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">∏ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">w</span>.mult</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L106-L129","name":"NumberField.mixedEmbedding.convexBodyLT_volume","line":106,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_volume","doc":"The volume of `(ConvexBodyLt K f)` where `convexBodyLT K f` is the set of points `x`\nsuch that `‖x w‖ < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">∏ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">w</span>.mult</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L100-L102","name":"NumberField.mixedEmbedding.one_le_convexBodyLTFactor","line":100,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.one_le_convexBodyLTFactor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.one_le_convexBodyLTFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">one_le_convexBodyLTFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L97-L98","name":"NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero","line":97,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L94-L95","name":"NumberField.mixedEmbedding.convexBodyLTFactor","line":94,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLT`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLTFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L86-L91","name":"NumberField.mixedEmbedding.instNoAtomsProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","line":86,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.instNoAtomsProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.instNoAtomsProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instNoAtomsProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.NoAtoms\">MeasureTheory.NoAtoms</a> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L84-L84","name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","line":84,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instIsAddHaarMeasureProdForallSubtypeInfinitePlaceIsRealRealForallIsComplexComplexVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span>.IsAddHaarMeasure</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L75-L76","name":"NumberField.mixedEmbedding.convexBodyLT_convex","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L68-L73","name":"NumberField.mixedEmbedding.convexBodyLT_neg_mem","line":68,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L61-L66","name":"NumberField.mixedEmbedding.convexBodyLT_mem","line":61,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.lean#L57-L59","name":"NumberField.mixedEmbedding.convexBodyLT","line":57,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT","doc":"The convex body defined by `f`: the set of points `x : E` such that `‖x w‖ < f w` for all\ninfinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/ConvexBody.html#NumberField.mixedEmbedding.convexBodyLT\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/NNReal/Basic.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsReal</span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><span class=\"fn\">w</span>.IsComplex</span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"}]}