{"name":"Mathlib.NumberTheory.NumberField.CanonicalEmbedding","instances":[{"typeNames":["Prod"],"name":"NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","className":"Nontrivial"},{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","className":"MeasureTheory.Measure.IsAddHaarMeasure"},{"typeNames":["MeasureTheory.MeasureSpace.volume"],"name":"NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","className":"MeasureTheory.NoAtoms"}],"imports":["Init","Mathlib.Algebra.Module.Zlattice","Mathlib.MeasureTheory.Group.GeometryOfNumbers","Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls","Mathlib.NumberTheory.NumberField.Embeddings","Mathlib.NumberTheory.NumberField.FractionalIdeal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1098-L1103","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","line":1098,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_of_norm_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">a</span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1065-L1096","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le","line":1065,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_of_norm_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">a</span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1036-L1063","name":"NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex","line":1036,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_primitive_element_lt_of_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w₀</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">a</span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">Real.sqrt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1021-L1034","name":"NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal","line":1021,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_primitive_element_lt_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_primitive_element_lt_of_isReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw₀ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w₀</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">a</span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">B</span> <span class=\"fn\">1</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1013-L1019","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'","line":1013,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'","doc":"A version of `exists_ne_zero_mem_ideal_lt'` for the ring of integers of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_lt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L1006-L1010","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","line":1006,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt","doc":"A version of `exists_ne_zero_mem_ideal_lt` for the ring of integers of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L991-L1003","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'","line":991,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'","doc":"A version of `exists_ne_zero_mem_ideal_lt` where the absolute value of the real part of `a` is\nsmaller than `1` at some fixed complex place. This is useful to ensure that `a` is not real. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_lt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L977-L987","name":"NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt","line":977,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt","doc":"Let `I` be a fractional ideal of `K`. Assume that `f : InfinitePlace K → ℝ≥0` is such that\n`minkowskiBound K I < volume (convexBodyLT K f)` where `convexBodyLT K f` is the set of\npoints `x` such that `‖x w‖ < f w` for all infinite places `w` (see `convexBodyLT_volume` for\nthe computation of this volume), then there exists a nonzero algebraic number `a` in `I` such\nthat `w a < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.exists_ne_zero_mem_ideal_lt\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">exists_ne_zero_mem_ideal_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L965-L968","name":"NumberField.mixedEmbedding.minkowskiBound_pos","line":965,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_pos\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L960-L963","name":"NumberField.mixedEmbedding.minkowskiBound_lt_top","line":960,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound_lt_top\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L946-L958","name":"NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis","line":946,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_fractionalIdealLatticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">volume_fundamentalDomain_fractionalIdealLatticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis\">NumberField.mixedEmbedding.fractionalIdealLatticeBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FractionalIdeal.absNorm</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L943-L944","name":"NumberField.mixedEmbedding.minkowskiBound","line":943,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound","doc":"The bound that appears in **Minkowski Convex Body theorem**, see\n`MeasureTheory.exists_ne_zero_mem_lattice_of_measure_mul_two_pow_lt_measure`. See\n`NumberField.mixedEmbedding.volume_fundamentalDomain_idealLatticeBasis_eq` and\n`NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis` for the computation of\n`volume (fundamentalDomain (idealLatticeBasis K))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">minkowskiBound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L873-L925","name":"NumberField.mixedEmbedding.convexBodySum_volume","line":873,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L867-L870","name":"NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","line":867,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\">NumberField.mixedEmbedding.convexBodySumFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L864-L865","name":"NumberField.mixedEmbedding.convexBodySumFactor","line":864,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L856-L861","name":"NumberField.mixedEmbedding.convexBodySum_compact","line":856,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_compact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_compact\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_compact</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L850-L854","name":"NumberField.mixedEmbedding.convexBodySum_isBounded","line":850,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_isBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_isBounded\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_isBounded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.IsBounded\">Bornology.IsBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L845-L848","name":"NumberField.mixedEmbedding.convexBodySum_convex","line":845,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L840-L843","name":"NumberField.mixedEmbedding.convexBodySum_neg_mem","line":840,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L831-L838","name":"NumberField.mixedEmbedding.convexBodySum_mem","line":831,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">w</span></span> <span class=\"fn\">x</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L818-L829","name":"NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","line":818,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum_volume_eq_zero_of_le_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hB : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\">NumberField.mixedEmbedding.convexBodySum</a> <span class=\"fn\">K</span> <span class=\"fn\">B</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L816-L816","name":"NumberField.mixedEmbedding.convexBodySum","line":816,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum","doc":"The convex body equal to the set of points `x : E` such that\n`∑ w real, ‖x w‖ + 2 * ∑ w complex, ‖x w‖ ≤ B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySum\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L805-L812","name":"NumberField.mixedEmbedding.convexBodySumFun_continuous","line":805,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_continuous\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_continuous</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">NumberField.mixedEmbedding.convexBodySumFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L789-L801","name":"NumberField.mixedEmbedding.norm_le_convexBodySumFun","line":789,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.norm_le_convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">norm_le_convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L775-L787","name":"NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","line":775,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_eq_zero_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L769-L773","name":"NumberField.mixedEmbedding.convexBodySumFun_smul","line":769,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_smul\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\">c</span>|</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L759-L767","name":"NumberField.mixedEmbedding.convexBodySumFun_add_le","line":759,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_add_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_add_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L755-L757","name":"NumberField.mixedEmbedding.convexBodySumFun_neg","line":755,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_neg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L749-L753","name":"NumberField.mixedEmbedding.convexBodySumFun_nonneg","line":749,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun_nonneg\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\">NumberField.mixedEmbedding.convexBodySumFun</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L747-L747","name":"NumberField.mixedEmbedding.convexBodySumFun","line":747,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun","doc":"The function that sends `x : ({w // IsReal w} → ℝ) × ({w // IsComplex w} → ℂ)` to\n`∑ w, ‖x.1 w‖ + 2 * ∑ w, ‖x.2 w‖`. It defines a norm and it used to define `convexBodySum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodySumFun\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodySumFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L687-L732","name":"NumberField.mixedEmbedding.convexBodyLT'_volume","line":687,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_volume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L683-L685","name":"NumberField.mixedEmbedding.one_le_convexBodyLT'Factor","line":683,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.one_le_convexBodyLT'Factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.one_le_convexBodyLT'Factor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">one_le_convexBodyLT'Factor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L680-L681","name":"NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero","line":680,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'Factor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor\">NumberField.mixedEmbedding.convexBodyLT'Factor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L677-L678","name":"NumberField.mixedEmbedding.convexBodyLT'Factor","line":677,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLT'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'Factor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'Factor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L662-L668","name":"NumberField.mixedEmbedding.convexBodyLT'_convex","line":662,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L654-L660","name":"NumberField.mixedEmbedding.convexBodyLT'_neg_mem","line":654,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L635-L652","name":"NumberField.mixedEmbedding.convexBodyLT'_mem","line":635,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\">NumberField.mixedEmbedding.convexBodyLT'</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">w₀</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">x</span></span>)</span>.re</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span> <span class=\"fn\">x</span></span>)</span>.im</span>|</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">w₀</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L630-L633","name":"NumberField.mixedEmbedding.convexBodyLT'","line":630,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'","doc":"A version of `convexBodyLT` with an additional condition at a fixed complex place. This is\nneeded to ensure the element constructed is not real, see for example\n`exists_primitive_element_lt_of_isComplex`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT'\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w₀ : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L603-L614","name":"NumberField.mixedEmbedding.adjust_f","line":603,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.adjust_f","doc":"This is a technical result: quite often, we want to impose conditions at all infinite places\nbut one and choose the value at the remaining place so that we can apply\n`exists_ne_zero_mem_ringOfIntegers_lt`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.adjust_f\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">adjust_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₁ : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (g : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">w₁</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L574-L596","name":"NumberField.mixedEmbedding.convexBodyLT_volume","line":574,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_volume","doc":"The volume of `(ConvexBodyLt K f)` where `convexBodyLT K f` is the set of points `x`\nsuch that `‖x w‖ < f w` for all infinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_volume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_volume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.mult\">NumberField.InfinitePlace.mult</a> <span class=\"fn\">w</span></span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L568-L570","name":"NumberField.mixedEmbedding.one_le_convexBodyLTFactor","line":568,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.one_le_convexBodyLTFactor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.one_le_convexBodyLTFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">one_le_convexBodyLTFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L565-L566","name":"NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero","line":565,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\">NumberField.mixedEmbedding.convexBodyLTFactor</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L562-L563","name":"NumberField.mixedEmbedding.convexBodyLTFactor","line":562,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor","doc":"The fudge factor that appears in the formula for the volume of `convexBodyLT`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLTFactor\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLTFactor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L554-L559","name":"NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","line":554,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.NoAtoms\">MeasureTheory.NoAtoms</a> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L552-L552","name":"NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","line":552,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Group/Measure.html#MeasureTheory.Measure.IsAddHaarMeasure\">MeasureTheory.Measure.IsAddHaarMeasure</a> <span class=\"fn\">MeasureTheory.volume</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L543-L544","name":"NumberField.mixedEmbedding.convexBodyLT_convex","line":543,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_convex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_convex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_convex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/Basic.html#Convex\">Convex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L536-L541","name":"NumberField.mixedEmbedding.convexBodyLT_neg_mem","line":536,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_neg_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_neg_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_neg_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L529-L534","name":"NumberField.mixedEmbedding.convexBodyLT_mem","line":529,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT_mem\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\">NumberField.mixedEmbedding.convexBodyLT</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L525-L527","name":"NumberField.mixedEmbedding.convexBodyLT","line":525,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT","doc":"The convex body defined by `f`: the set of points `x : E` such that `‖x w‖ < f w` for all\ninfinite places `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.convexBodyLT\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">convexBodyLT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> → <a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L503-L513","name":"NumberField.mixedEmbedding.mem_span_fractionalIdealLatticeBasis","line":503,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_fractionalIdealLatticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_fractionalIdealLatticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">mem_span_fractionalIdealLatticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis\">NumberField.mixedEmbedding.fractionalIdealLatticeBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L498-L501","name":"NumberField.mixedEmbedding.fractionalIdealLatticeBasis_apply","line":498,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">fractionalIdealLatticeBasis_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis\">NumberField.mixedEmbedding.fractionalIdealLatticeBasis</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/FractionalIdeal.html#NumberField.basisOfFractionalIdeal\">NumberField.basisOfFractionalIdeal</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L483-L495","name":"NumberField.mixedEmbedding.fractionalIdealLatticeBasis","line":483,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis","doc":"A `ℝ`-basis of `ℝ^r₁ × ℂ^r₂` that is also a `ℤ`-basis of the image of the fractional\nideal `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fractionalIdealLatticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">fractionalIdealLatticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L467-L479","name":"NumberField.mixedEmbedding.det_basisOfFractionalIdeal_eq_norm","line":467,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_basisOfFractionalIdeal_eq_norm","doc":"The generalized index of the lattice generated by `I` in the lattice generated by\n`𝓞 K` is equal to the norm of the ideal `I`. The result is stated in terms of base change\ndeterminant and is the translation of `NumberField.det_basisOfFractionalIdeal_eq_absNorm` in\n`ℝ^r₁ × ℂ^r₂`. This is useful, in particular, to prove that the family obtained from\nthe `ℤ`-basis of `I` is actually an `ℝ`-basis of `ℝ^r₁ × ℂ^r₂`, see\n`fractionalIdealLatticeBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_basisOfFractionalIdeal_eq_norm\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">det_basisOfFractionalIdeal_eq_norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Determinant.html#Basis.det\">Basis.det</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/FractionalIdeal.html#NumberField.basisOfFractionalIdeal\">NumberField.basisOfFractionalIdeal</a> <span class=\"fn\">K</span> <span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">e</span></span></span></span>)</span></span>|</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FractionalIdeal.absNorm</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L443-L457","name":"NumberField.mixedEmbedding.latticeBasis_repr_apply","line":443,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_repr_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_repr_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">latticeBasis_repr_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L435-L441","name":"NumberField.mixedEmbedding.mem_rat_span_latticeBasis","line":435,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_rat_span_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_rat_span_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">mem_rat_span_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L425-L433","name":"NumberField.mixedEmbedding.mem_span_latticeBasis","line":425,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.mem_span_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">mem_span_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L420-L423","name":"NumberField.mixedEmbedding.latticeBasis_apply","line":420,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">latticeBasis_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L402-L417","name":"NumberField.mixedEmbedding.latticeBasis","line":402,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis","doc":"A `ℝ`-basis of `ℝ^r₁ × ℂ^r₂` that is also a `ℤ`-basis of the image of `𝓞 K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L357-L389","name":"NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul","line":357,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul","doc":"Let `x : (K →+* ℂ) → ℂ` such that `x_φ = conj x_(conj φ)` for all `φ : K →+* ℂ`, then the\nrepresentation of `commMap K x` on `stdBasis` is given (up to reindexing) by the product of\n`matrixToStdBasis` by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_repr_eq_matrixToStdBasis_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\">∀ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">φ</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix.mulVec\">Matrix.mulVec</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\">NumberField.mixedEmbedding.matrixToStdBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L342-L352","name":"NumberField.mixedEmbedding.det_matrixToStdBasis","line":342,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_matrixToStdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.det_matrixToStdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">det_matrixToStdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant.html#Matrix.det\">Matrix.det</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\">NumberField.mixedEmbedding.matrixToStdBasis</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.NrComplexPlaces\">NumberField.InfinitePlace.NrComplexPlaces</a> <span class=\"fn\">K</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L338-L340","name":"NumberField.mixedEmbedding.matrixToStdBasis","line":338,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis","doc":"The matrix that gives the representation on `stdBasis` of the image by `commMap` of an\nelement `x` of `(K →+* ℂ) → ℂ` fixed by the map `x_φ ↦ conj x_(conjugate φ)`,\nsee `stdBasis_repr_eq_matrixToStdBasis_mul`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.matrixToStdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">matrixToStdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L330-L331","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd","line":330,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsComplex_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">1</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L326-L327","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst","line":326,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsComplex_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">0</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L322-L323","name":"NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal","line":322,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv_apply_ofIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\">NumberField.mixedEmbedding.indexEquiv</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L302-L317","name":"NumberField.mixedEmbedding.indexEquiv","line":302,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv","doc":"The `Equiv` between `index K` and `K →+* ℂ` defined by sending a real infinite place `w` to\nthe unique corresponding embedding `w.embedding`, and the pair `⟨w, 0⟩` (resp. `⟨w, 1⟩`) for a\ncomplex infinite place `w` to `w.embedding` (resp. `conjugate w.embedding`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.indexEquiv\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">indexEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L291-L297","name":"NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis","line":291,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">volume_fundamentalDomain_stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L284-L289","name":"NumberField.mixedEmbedding.fundamentalDomain_stdBasis","line":284,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fundamentalDomain_stdBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.fundamentalDomain_stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">fundamentalDomain_stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a>     <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\">Complex.measurableEquivPi</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.pi\">Set.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L279-L280","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsComplex_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">1</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <span class=\"fn\">w</span></span>)</span>.im</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L275-L276","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst","line":275,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsComplex_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<span class=\"fn\">w</span>, <span class=\"fn\">0</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <span class=\"fn\">w</span></span>)</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L271-L272","name":"NumberField.mixedEmbedding.stdBasis_apply_ofIsReal","line":271,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis_apply_ofIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis_apply_ofIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\">NumberField.mixedEmbedding.stdBasis</a> <span class=\"fn\">K</span></span>)</span>.repr</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L264-L266","name":"NumberField.mixedEmbedding.stdBasis","line":264,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis","doc":"The `ℝ`-basis of `({w // IsReal w} → ℝ) × ({ w // IsComplex w } → ℂ)` formed by the vector\nequal to `1` at `w` and `0` elsewhere for `IsReal w` and by the couple of vectors equal to `1`\n(resp. `I`) at `w` and `0` elsewhere for `IsComplex w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.stdBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">stdBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\">NumberField.mixedEmbedding.index</a> <span class=\"fn\">K</span></span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L259-L259","name":"NumberField.mixedEmbedding.index","line":259,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index","doc":"The type indexing the basis `stdBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.index\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">index</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L224-L246","name":"NumberField.mixedEmbedding.disjoint_span_commMap_ker","line":224,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.disjoint_span_commMap_ker","doc":"This is a technical result to ensure that the image of the `ℂ`-basis of `ℂ^n` defined in\n`canonicalEmbedding.latticeBasis` is a `ℝ`-basis of `ℝ^r₁ × ℂ^r₂`,\nsee `mixedEmbedding.latticeBasis`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.disjoint_span_commMap_ker\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">disjoint_span_commMap_ker</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Ker.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L215-L219","name":"NumberField.mixedEmbedding.commMap_canonical_eq_mixed","line":215,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_canonical_eq_mixed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_canonical_eq_mixed\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_canonical_eq_mixed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L211-L212","name":"NumberField.mixedEmbedding.commMap_apply_of_isComplex","line":211,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_apply_of_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span>.2</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">w</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hw</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">w</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L208-L209","name":"NumberField.mixedEmbedding.commMap_apply_of_isReal","line":208,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap_apply_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap_apply_of_isReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\">NumberField.mixedEmbedding.commMap</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span>)</span>.1</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">w</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hw</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">NumberField.InfinitePlace.embedding</a> <span class=\"fn\">w</span></span>)</span></span>)</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L198-L206","name":"NumberField.mixedEmbedding.commMap","line":198,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap","doc":"The linear map that makes `canonicalEmbedding` and `mixedEmbedding` commute, see\n`commMap_canonical_eq_mixed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.commMap\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">commMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Basic.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Algebra/Module/LinearMap/Basic.html#LinearMap\">]</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L190-L192","name":"NumberField.mixedEmbedding_injective","line":190,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding_injective\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\">NumberField.mixedEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L183-L188","name":"NumberField.mixedEmbedding.finrank","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.finrank","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.finrank\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">finrank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>       <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L175-L181","name":"NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","line":175,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">instNontrivialProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L171-L173","name":"NumberField.mixedEmbedding","line":171,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding","doc":"The mixed embedding of a number field `K` of signature `(r₁, r₂)` into `ℝ^r₁ × ℂ^r₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a>     <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">K</span></span> // <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span> }</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L150-L158","name":"NumberField.canonicalEmbedding.mem_span_latticeBasis","line":150,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.mem_span_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.mem_span_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">mem_span_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L145-L148","name":"NumberField.canonicalEmbedding.latticeBasis_apply","line":145,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">latticeBasis_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\">NumberField.canonicalEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L116-L142","name":"NumberField.canonicalEmbedding.latticeBasis","line":116,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis","doc":"A `ℂ`-basis of `ℂ^n` that is also a `ℤ`-basis of the `integerLattice`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L99-L111","name":"NumberField.canonicalEmbedding.integerLattice.inter_ball_finite","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice.inter_ball_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice.inter_ball_finite\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">integerLattice</span>.<span class=\"name\">inter_ball_finite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice\">NumberField.canonicalEmbedding.integerLattice</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">r</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L96-L97","name":"NumberField.canonicalEmbedding.integerLattice","line":96,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice","doc":"The image of `𝓞 K` as a subring of `ℂ^n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.integerLattice\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">integerLattice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Subring/Basic.html#Subring\">Subring</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L82-L91","name":"NumberField.canonicalEmbedding.norm_le_iff","line":82,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.norm_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.norm_le_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">norm_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L78-L80","name":"NumberField.canonicalEmbedding.nnnorm_eq","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.nnnorm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.nnnorm_eq\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">nnnorm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Lattice.html#Finset.sup\">Finset.sup</a> <span class=\"fn\">Finset.univ</span> <span class=\"fn\">fun (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L67-L76","name":"NumberField.canonicalEmbedding.conj_apply","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.conj_apply","doc":"The image of `canonicalEmbedding` lives in the `ℝ`-submodule of the `x ∈ ((K →+* ℂ) → ℂ)` such\nthat `conj x_φ = x_(conj φ)` for all `∀ φ : K →+* ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.conj_apply\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">conj_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">φ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.ComplexEmbedding.conjugate\">NumberField.ComplexEmbedding.conjugate</a> <span class=\"fn\">φ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L61-L61","name":"NumberField.canonicalEmbedding.apply_at","line":61,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.apply_at","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding.apply_at\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span>.<span class=\"name\">apply_at</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L55-L56","name":"NumberField.canonicalEmbedding_injective","line":55,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding_injective\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/CanonicalEmbedding.lean#L53-L53","name":"NumberField.canonicalEmbedding","line":53,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding","doc":"The canonical embedding of a number field `K` of degree `n` into `ℂ^n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.canonicalEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></span></div></div>"}]}