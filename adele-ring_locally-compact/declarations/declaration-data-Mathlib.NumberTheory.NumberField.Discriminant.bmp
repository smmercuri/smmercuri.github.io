{"name":"Mathlib.NumberTheory.NumberField.Discriminant","instances":[],"imports":["Init","Mathlib.Data.Real.Pi.Bounds","Mathlib.NumberTheory.NumberField.CanonicalEmbedding"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L460-L488","name":"Algebra.discr_eq_discr_of_toMatrix_coeff_isIntegral","line":460,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#Algebra.discr_eq_discr_of_toMatrix_coeff_isIntegral","doc":"If `b` and `b'` are `ℚ`-bases of a number field `K` such that\n`∀ i j, IsIntegral ℤ (b.toMatrix b' i j)` and `∀ i j, IsIntegral ℤ (b'.toMatrix b i j)` then\n`discr ℚ b = discr ℚ b'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#Algebra.discr_eq_discr_of_toMatrix_coeff_isIntegral\"><span class=\"name\">Algebra</span>.<span class=\"name\">discr_eq_discr_of_toMatrix_coeff_isIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b' : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">ι'</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#IsIntegral\">IsIntegral</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/Basis.html#Basis.toMatrix\">Basis.toMatrix</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">b'</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι'</span>) (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/IntegralClosure.html#IsIntegral\">IsIntegral</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/Basis.html#Basis.toMatrix\">Basis.toMatrix</a> <span class=\"fn\">b'</span> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Discriminant.html#Algebra.discr\">Algebra.discr</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">⇑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Discriminant.html#Algebra.discr\">Algebra.discr</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">⇑<span class=\"fn\">b'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L451-L451","name":"NumberField.discr_rat","line":451,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_rat","doc":"**Alias** of `Rat.numberField_discr`.\n\n---\n\nThe absolute discriminant of the number field `ℚ` is 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_rat\"><span class=\"name\">NumberField</span>.<span class=\"name\">discr_rat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L437-L449","name":"Rat.numberField_discr","line":437,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#Rat.numberField_discr","doc":"The absolute discriminant of the number field `ℚ` is 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#Rat.numberField_discr\"><span class=\"name\">Rat</span>.<span class=\"name\">numberField_discr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L412-L425","name":"NumberField.finite_of_discr_bdd","line":412,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.finite_of_discr_bdd","doc":"**Hermite Theorem**. Let `N` be an integer. There are only finitely many number fields\n(in some fixed extension of `ℚ`) of discriminant bounded by `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.finite_of_discr_bdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">finite_of_discr_bdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\">{ <span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField.html#IntermediateField\">IntermediateField</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span> // <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">↥<span class=\"fn\">F</span></span></span> }</span> | <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L367-L408","name":"NumberField.hermiteTheorem.finite_of_discr_bdd_of_isComplex","line":367,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_discr_bdd_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_discr_bdd_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">finite_of_discr_bdd_of_isComplex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a>\n  <span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\">{ <span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField.html#IntermediateField\">IntermediateField</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span> // <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">↥<span class=\"fn\">F</span></span></span> }</span> |\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> | <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">NumberField.InfinitePlace.IsComplex</a> <span class=\"fn\">w</span></span>}</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L325-L365","name":"NumberField.hermiteTheorem.finite_of_discr_bdd_of_isReal","line":325,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_discr_bdd_of_isReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_discr_bdd_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">finite_of_discr_bdd_of_isReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a>\n  <span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\">{ <span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField.html#IntermediateField\">IntermediateField</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span> // <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">↥<span class=\"fn\">F</span></span></span> }</span> |\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">NumberField.InfinitePlace</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span> | <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">NumberField.InfinitePlace.IsReal</a> <span class=\"fn\">w</span></span>}</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">K</span></span></span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L317-L321","name":"NumberField.hermiteTheorem.natDegree_le_rankOfDiscrBdd","line":317,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.natDegree_le_rankOfDiscrBdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.natDegree_le_rankOfDiscrBdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">natDegree_le_rankOfDiscrBdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">a</span>⟯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">Polynomial.natDegree</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rankOfDiscrBdd\">NumberField.hermiteTheorem.rankOfDiscrBdd</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L303-L315","name":"NumberField.hermiteTheorem.minkowskiBound_lt_boundOfDiscBdd","line":303,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.minkowskiBound_lt_boundOfDiscBdd","doc":"If `|discr K| ≤ N` then the Minkowski bound of `K` is less than `boundOfDiscrBdd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.minkowskiBound_lt_boundOfDiscBdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">minkowskiBound_lt_boundOfDiscBdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.minkowskiBound\">NumberField.mixedEmbedding.minkowskiBound</a> <span class=\"fn\">K</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.boundOfDiscBdd\">NumberField.hermiteTheorem.boundOfDiscBdd</a> <span class=\"fn\">N</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L276-L299","name":"NumberField.hermiteTheorem.rank_le_rankOfDiscrBdd","line":276,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rank_le_rankOfDiscrBdd","doc":"If `|discr K| ≤ N` then the degree of `K` is at most `rankOfDiscrBdd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rank_le_rankOfDiscrBdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">rank_le_rankOfDiscrBdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>|</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rankOfDiscrBdd\">NumberField.hermiteTheorem.rankOfDiscrBdd</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L271-L271","name":"NumberField.hermiteTheorem.boundOfDiscBdd","line":271,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.boundOfDiscBdd","doc":"An upper bound on the Minkowski bound of a number field `K` with `|discr K| ≤ N`;\nsee `minkowskiBound_lt_boundOfDiscBdd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.boundOfDiscBdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">boundOfDiscBdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/NNReal.html#NNReal\">NNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L266-L267","name":"NumberField.hermiteTheorem.rankOfDiscrBdd","line":266,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rankOfDiscrBdd","doc":"An upper bound on the degree of a number field `K` with `|discr K| ≤ N`,\nsee `rank_le_rankOfDiscrBdd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.rankOfDiscrBdd\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">rankOfDiscrBdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L251-L260","name":"NumberField.hermiteTheorem.finite_of_finite_generating_set","line":251,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_finite_generating_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.hermiteTheorem.finite_of_finite_generating_set\"><span class=\"name\">NumberField</span>.<span class=\"name\">hermiteTheorem</span>.<span class=\"name\">finite_of_finite_generating_set</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField.html#IntermediateField\">IntermediateField</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">{ <span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IntermediateField.html#IntermediateField\">IntermediateField</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span> // <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">F</span></span> }</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">F</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\">∃ x ∈ <span class=\"fn\">T</span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>⟮<span class=\"fn\">x</span>⟯</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L202-L216","name":"NumberField.abs_discr_gt_two","line":202,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.abs_discr_gt_two","doc":"**Hermite-Minkowski Theorem**. A nontrivial number field has discriminant greater than `2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.abs_discr_gt_two\"><span class=\"name\">NumberField</span>.<span class=\"name\">abs_discr_gt_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>|</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L164-L199","name":"NumberField.abs_discr_ge","line":164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.abs_discr_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.abs_discr_ge\"><span class=\"name\">NumberField</span>.<span class=\"name\">abs_discr_ge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">4</span> / <span class=\"fn\">9</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">4</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>|</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L152-L160","name":"NumberField.exists_ne_zero_mem_ringOfIntegers_of_norm_le_mul_sqrt_discr","line":152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.exists_ne_zero_mem_ringOfIntegers_of_norm_le_mul_sqrt_discr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.exists_ne_zero_mem_ringOfIntegers_of_norm_le_mul_sqrt_discr\"><span class=\"name\">NumberField</span>.<span class=\"name\">exists_ne_zero_mem_ringOfIntegers_of_norm_le_mul_sqrt_discr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.NrComplexPlaces\">NumberField.InfinitePlace.NrComplexPlaces</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">Nat.factorial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a>           <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>         <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">Real.sqrt</a> <span class=\"fn\">|<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>)</span></span>|</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L105-L150","name":"NumberField.exists_ne_zero_mem_ideal_of_norm_le_mul_sqrt_discr","line":105,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.exists_ne_zero_mem_ideal_of_norm_le_mul_sqrt_discr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.exists_ne_zero_mem_ideal_of_norm_le_mul_sqrt_discr\"><span class=\"name\">NumberField</span>.<span class=\"name\">exists_ne_zero_mem_ideal_of_norm_le_mul_sqrt_discr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/FractionalIdeal/Basic.html#FractionalIdeal\">FractionalIdeal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span> <span class=\"fn\">K</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ a ∈ <span class=\"fn\">↑<span class=\"fn\">I</span></span>,\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">|<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Norm.html#Algebra.norm\">Algebra.norm</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span> <span class=\"fn\">a</span></span>|</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">FractionalIdeal.absNorm</span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.NrComplexPlaces\">NumberField.InfinitePlace.NrComplexPlaces</a> <span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>             <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">Nat.factorial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a>           <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>         <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">Real.sqrt</a> <span class=\"fn\">|<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>)</span></span>|</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L71-L103","name":"NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis","line":71,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis\"><span class=\"name\">NumberField</span>.<span class=\"name\">mixedEmbedding</span>.<span class=\"name\">volume_fundamentalDomain_latticeBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">MeasureTheory.volume</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Zlattice.html#Zspan.fundamentalDomain\">Zspan.fundamentalDomain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding.html#NumberField.mixedEmbedding.latticeBasis\">NumberField.mixedEmbedding.latticeBasis</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.NrComplexPlaces\">NumberField.InfinitePlace.NrComplexPlaces</a> <span class=\"fn\">K</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">NNReal.sqrt</span> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L55-L66","name":"NumberField.discr_eq_discr_of_algEquiv","line":55,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_eq_discr_of_algEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_eq_discr_of_algEquiv\"><span class=\"name\">NumberField</span>.<span class=\"name\">discr_eq_discr_of_algEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{L : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">L</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L50-L53","name":"NumberField.discr_eq_discr","line":50,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_eq_discr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_eq_discr\"><span class=\"name\">NumberField</span>.<span class=\"name\">discr_eq_discr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Discriminant.html#Algebra.discr\">Algebra.discr</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">⇑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L46-L48","name":"NumberField.discr_ne_zero","line":46,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr_ne_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">discr_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L43-L44","name":"NumberField.coe_discr","line":43,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.coe_discr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.coe_discr\"><span class=\"name\">NumberField</span>.<span class=\"name\">coe_discr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Discriminant.html#Algebra.discr\">Algebra.discr</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/NumberTheory/NumberField/Discriminant.lean#L41-L41","name":"NumberField.discr","line":41,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr","doc":"The absolute discriminant of a number field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Discriminant.html#NumberField.discr\"><span class=\"name\">NumberField</span>.<span class=\"name\">discr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"}]}