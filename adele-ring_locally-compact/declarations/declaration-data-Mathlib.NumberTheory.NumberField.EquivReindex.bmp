{"name":"Mathlib.NumberTheory.NumberField.EquivReindex","instances":[{"typeNames":["NumberField.basisMatrix"],"name":"NumberField.instInvertibleMatrixRingHomComplexBasisMatrix","className":"Invertible"}],"imports":["Init","Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L67-L71","name":"NumberField.inverse_basisMatrix_mulVec_eq_repr","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.inverse_basisMatrix_mulVec_eq_repr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.inverse_basisMatrix_mulVec_eq_repr\"><span class=\"name\">NumberField</span>.<span class=\"name\">inverse_basisMatrix_mulVec_eq_repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix\">NumberField.basisMatrix</a> <span class=\"fn\">K</span></span>)</span>.transpose</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span>.mulVec</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span>.reindex</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.equivReindex\">NumberField.equivReindex</a> <span class=\"fn\">K</span></span>)</span>.symm</span></span>)</span>.repr</span> <span class=\"fn\">↑<span class=\"fn\">α</span></span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L58-L65","name":"NumberField.canonicalEmbedding_eq_basisMatrix_mulVec","line":58,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.canonicalEmbedding_eq_basisMatrix_mulVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.canonicalEmbedding_eq_basisMatrix_mulVec\"><span class=\"name\">NumberField</span>.<span class=\"name\">canonicalEmbedding_eq_basisMatrix_mulVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.html#NumberField.canonicalEmbedding\">NumberField.canonicalEmbedding</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix\">NumberField.basisMatrix</a> <span class=\"fn\">K</span></span>)</span>.transpose</span>.mulVec</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>) =&gt;\n    <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.integralBasis\">NumberField.integralBasis</a> <span class=\"fn\">K</span></span>)</span>.reindex</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.equivReindex\">NumberField.equivReindex</a> <span class=\"fn\">K</span></span>)</span>.symm</span></span>)</span>.repr</span> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L53-L54","name":"NumberField.instInvertibleMatrixRingHomComplexBasisMatrix","line":53,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.instInvertibleMatrixRingHomComplexBasisMatrix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.instInvertibleMatrixRingHomComplexBasisMatrix\"><span class=\"name\">NumberField</span>.<span class=\"name\">instInvertibleMatrixRingHomComplexBasisMatrix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Invertible/Defs.html#Invertible\">Invertible</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix\">NumberField.basisMatrix</a> <span class=\"fn\">K</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L40-L51","name":"NumberField.det_of_basisMatrix_non_zero","line":40,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.det_of_basisMatrix_non_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.det_of_basisMatrix_non_zero\"><span class=\"name\">NumberField</span>.<span class=\"name\">det_of_basisMatrix_non_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix\">NumberField.basisMatrix</a> <span class=\"fn\">K</span></span>)</span>.det</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L35-L36","name":"NumberField.basisMatrix","line":35,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix","doc":"The basis matrix for the embeddings of `K` into `ℂ`. This matrix is formed by\ntaking the lattice basis vectors of `K` and reindexing them according to the\nequivalence `equivReindex`, then transposing the resulting matrix. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.basisMatrix\"><span class=\"name\">NumberField</span>.<span class=\"name\">basisMatrix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Basic.html#Matrix\">Matrix</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/NumberTheory/NumberField/EquivReindex.lean#L28-L30","name":"NumberField.equivReindex","line":28,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.equivReindex","doc":"An equivalence between the set of embeddings of `K` into `ℂ` and the\nindex set of the chosen basis of the ring of integers of `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/EquivReindex.html#NumberField.equivReindex\"><span class=\"name\">NumberField</span>.<span class=\"name\">equivReindex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free.ChooseBasisIndex\">Module.Free.ChooseBasisIndex</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span></span>)</span></span></span></div></div>"}]}