{"name":"Mathlib.Order.Category.BoolAlg","instances":[{"typeNames":["BoolAlg","_builtin_typeu"],"name":"BoolAlg.instCoeSortType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"BoolAlg.instBooleanAlgebra","className":"BooleanAlgebra"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instInhabited","className":"Inhabited"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instConcreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["BoolAlg","BddDistLat"],"name":"BoolAlg.hasForgetToBddDistLat","className":"CategoryTheory.HasForget₂"},{"typeNames":["BoolAlg","HeytAlg"],"name":"BoolAlg.hasForgetToHeytAlg","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.Order.Category.HeytAlg","Mathlib.Order.Hom.CompleteLattice"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L108-L111","name":"typeToBoolAlgOp","line":108,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp","doc":"The powerset functor. `Set` as a contravariant functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp\"><span class=\"name\">typeToBoolAlgOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L107-L107","name":"typeToBoolAlgOp_map","line":107,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp_map\"><span class=\"name\">typeToBoolAlgOp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp\">typeToBoolAlgOp</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">Quiver.Hom.op</a>\n    <span class=\"fn\">(<span class=\"fn\">let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L107-L107","name":"typeToBoolAlgOp_obj","line":107,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp_obj\"><span class=\"name\">typeToBoolAlgOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#typeToBoolAlgOp\">typeToBoolAlgOp</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\">BoolAlg.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L101-L104","name":"boolAlg_dual_comp_forget_to_bddDistLat","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#boolAlg_dual_comp_forget_to_bddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#boolAlg_dual_comp_forget_to_bddDistLat\"><span class=\"name\">boolAlg_dual_comp_forget_to_bddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a>.comp</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span>)</span>.comp</span> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.dual\">BddDistLat.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L93-L97","name":"BoolAlg.dualEquiv","line":93,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv","doc":"The equivalence between `BoolAlg` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L92-L92","name":"BoolAlg.dualEquiv_functor","line":92,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_functor\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\">BoolAlg.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L92-L92","name":"BoolAlg.dualEquiv_inverse","line":92,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_inverse\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\">BoolAlg.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L87-L89","name":"BoolAlg.dual","line":87,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L86-L86","name":"BoolAlg.dual_map","line":86,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_map\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toBddDistLat</span>.toBddLat</span>.toLat</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toBddDistLat</span>.toBddLat</span>.toLat</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">BoundedLatticeHom.dual</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L86-L86","name":"BoolAlg.dual_obj","line":86,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_obj\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\">BoolAlg.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L79-L83","name":"BoolAlg.Iso.mk","line":79,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk","doc":"Constructs an equivalence between Boolean algebras from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L78-L78","name":"BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","line":78,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\">BoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.symm</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L78-L78","name":"BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","line":78,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\">BoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L67-L73","name":"BoolAlg.hasForgetToHeytAlg","line":67,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/HeytAlg.html#HeytAlg\">HeytAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L66-L66","name":"BoolAlg.hasForgetToHeytAlg_forget₂_obj_α","line":66,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_α","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_α\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_obj_α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L66-L66","name":"BoolAlg.hasForgetToHeytAlg_forget₂_obj_str","line":66,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_str\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_obj_str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.obj</span> <span class=\"fn\">X</span></span>)</span>.str</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inferInstance</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L66-L66","name":"BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun","line":66,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L59-L60","name":"BoolAlg.hasForgetToBddDistLat","line":59,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L56-L57","name":"BoolAlg.instConcreteCategory","line":56,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instConcreteCategory\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instConcreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L53-L54","name":"BoolAlg.instLargeCategory","line":53,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instLargeCategory\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L50-L51","name":"BoolAlg.coe_toBddDistLat","line":50,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_toBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_toBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">coe_toBddDistLat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toBddDistLat</span>.toDistLat</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L46-L47","name":"BoolAlg.toBddDistLat","line":46,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat","doc":"Turn a `BoolAlg` into a `BddDistLat` by forgetting its complement operation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">toBddDistLat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L42-L43","name":"BoolAlg.instInhabited","line":42,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instInhabited\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L39-L40","name":"BoolAlg.coe_of","line":39,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_of\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\">BoolAlg.of</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L35-L36","name":"BoolAlg.of","line":35,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of","doc":"Construct a bundled `BoolAlg` from a `BooleanAlgebra`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L31-L32","name":"BoolAlg.instBooleanAlgebra","line":31,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instBooleanAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instBooleanAlgebra\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instBooleanAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L28-L29","name":"BoolAlg.instCoeSortType","line":28,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instCoeSortType\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Order/Category/BoolAlg.lean#L23-L24","name":"BoolAlg","line":23,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg","doc":"The category of boolean algebras. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\"><span class=\"name\">BoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}