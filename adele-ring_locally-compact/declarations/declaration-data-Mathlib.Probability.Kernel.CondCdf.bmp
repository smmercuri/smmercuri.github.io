{"name":"Mathlib.Probability.Kernel.CondCdf","instances":[{"typeNames":["StieltjesFunction.measure"],"name":"ProbabilityTheory.instIsProbabilityMeasure","className":"MeasureTheory.IsProbabilityMeasure"}],"imports":["Init","Mathlib.Logic.Encodable.Basic","Mathlib.Data.Set.Lattice","Mathlib.MeasureTheory.Measure.Stieltjes","Mathlib.MeasureTheory.Decomposition.RadonNikodym","Mathlib.MeasureTheory.Constructions.Prod.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L871-L893","name":"ProbabilityTheory.measurable_measure_condCDF","line":871,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_measure_condCDF","doc":"The function `a ↦ (condCDF ρ a).measure` is measurable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_measure_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measurable_measure_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Stieltjes.html#StieltjesFunction.measure\">StieltjesFunction.measure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L866-L868","name":"ProbabilityTheory.instIsProbabilityMeasure","line":866,"kind":"instance","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.instIsProbabilityMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.instIsProbabilityMeasure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">instIsProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Stieltjes.html#StieltjesFunction.measure\">StieltjesFunction.measure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L861-L863","name":"ProbabilityTheory.measure_condCDF_univ","line":861,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measure_condCDF_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measure_condCDF_univ\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_condCDF_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Stieltjes.html#StieltjesFunction.measure\">StieltjesFunction.measure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L855-L858","name":"ProbabilityTheory.measure_condCDF_Iic","line":855,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measure_condCDF_Iic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measure_condCDF_Iic\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_condCDF_Iic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Stieltjes.html#StieltjesFunction.measure\">StieltjesFunction.measure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L848-L850","name":"ProbabilityTheory.integral_condCDF","line":848,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.integral_condCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.integral_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integral_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Set.univ</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span></span>)</span></span>)</span>.toReal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L838-L845","name":"ProbabilityTheory.set_integral_condCDF","line":838,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_integral_condCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_integral_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">set_integral_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span></span>)</span></span>)</span>.toReal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L821-L835","name":"ProbabilityTheory.integrable_condCDF","line":821,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.integrable_condCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.integrable_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integrable_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L816-L818","name":"ProbabilityTheory.stronglyMeasurable_condCDF","line":816,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.stronglyMeasurable_condCDF","doc":"The conditional cdf is a strongly measurable function of `a : α` for all `x : ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.stronglyMeasurable_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">stronglyMeasurable_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.html#MeasureTheory.StronglyMeasurable\">MeasureTheory.StronglyMeasurable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L810-L812","name":"ProbabilityTheory.lintegral_condCDF","line":810,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.lintegral_condCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.lintegral_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">lintegral_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫⁻ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span>)</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Set.univ</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L764-L807","name":"ProbabilityTheory.set_lintegral_condCDF","line":764,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_condCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">set_lintegral_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫⁻ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span>)</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L755-L761","name":"ProbabilityTheory.set_lintegral_condCDF_rat","line":755,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_condCDF_rat","doc":"Auxiliary lemma for `set_lintegral_cond_cdf`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_condCDF_rat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">set_lintegral_condCDF_rat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫⁻ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L744-L751","name":"ProbabilityTheory.measurable_condCDF","line":744,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_condCDF","doc":"The conditional cdf is a measurable function of `a : α` for all `x : ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measurable_condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L736-L740","name":"ProbabilityTheory.ofReal_condCDF_ae_eq","line":736,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.ofReal_condCDF_ae_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.ofReal_condCDF_ae_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">ofReal_condCDF_ae_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L730-L733","name":"ProbabilityTheory.condCDF_ae_eq","line":730,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_ae_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_ae_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF_ae_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a>   <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span>.toReal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L712-L727","name":"ProbabilityTheory.tendsto_condCDF_atTop","line":712,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDF_atTop","doc":"The conditional cdf tends to 1 at +∞ for all `a : α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDF_atTop\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_condCDF_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L693-L708","name":"ProbabilityTheory.tendsto_condCDF_atBot","line":693,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDF_atBot","doc":"The conditional cdf tends to 0 at -∞ for all `a : α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDF_atBot\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_condCDF_atBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L684-L689","name":"ProbabilityTheory.condCDF_le_one","line":684,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_le_one","doc":"The conditional cdf is lower or equal to 1 for all `a : α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_le_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L679-L680","name":"ProbabilityTheory.condCDF_nonneg","line":679,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_nonneg","doc":"The conditional cdf is non-negative for all `a : α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L673-L675","name":"ProbabilityTheory.condCDF_eq_condCDFRat","line":673,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_eq_condCDFRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF_eq_condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF_eq_condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\">ProbabilityTheory.condCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L667-L670","name":"ProbabilityTheory.condCDF","line":667,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF","doc":"Conditional cdf of the measure given the value on `α`, as a Stieltjes function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/MeasureTheory/Measure/Stieltjes.html#StieltjesFunction\">StieltjesFunction</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L643-L660","name":"ProbabilityTheory.continuousWithinAt_condCDF'_Ici","line":643,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.continuousWithinAt_condCDF'_Ici","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.continuousWithinAt_condCDF'_Ici\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">continuousWithinAt_condCDF'_Ici</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L631-L640","name":"ProbabilityTheory.monotone_condCDF'","line":631,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_condCDF'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_condCDF'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">monotone_condCDF'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L626-L628","name":"ProbabilityTheory.bddBelow_range_condCDFRat_gt","line":626,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.bddBelow_range_condCDFRat_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.bddBelow_range_condCDFRat_gt\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">bddBelow_range_condCDFRat_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <span class=\"fn\">{ <span class=\"fn\">r'</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">r'</span></span></span> }</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L618-L623","name":"ProbabilityTheory.condCDF'_nonneg","line":618,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF'_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L605-L615","name":"ProbabilityTheory.condCDF'_eq_condCDFRat","line":605,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_eq_condCDFRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_eq_condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF'_eq_condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L601-L602","name":"ProbabilityTheory.condCDF'_def'","line":601,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_def'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF'_def'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (r : <span class=\"fn\">{ <span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> }</span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L595-L598","name":"ProbabilityTheory.condCDF'_def","line":595,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'_def\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF'_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\">ProbabilityTheory.condCDF'</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (r : <span class=\"fn\">{ <span class=\"fn\">r'</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> // <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">r'</span></span></span> }</span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L595-L598","name":"ProbabilityTheory.condCDF'","line":595,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'","doc":"Conditional cdf of the measure given the value on `α`, as a plain function. This is an auxiliary\ndefinition used to define `cond_cdf`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDF'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDF'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L558-L592","name":"ProbabilityTheory.inf_gt_condCDFRat","line":558,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.inf_gt_condCDFRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.inf_gt_condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">inf_gt_condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">t</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L551-L555","name":"ProbabilityTheory.ofReal_condCDFRat_ae_eq","line":551,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.ofReal_condCDFRat_ae_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.ofReal_condCDFRat_ae_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">ofReal_condCDFRat_ae_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L546-L548","name":"ProbabilityTheory.condCDFRat_ae_eq","line":546,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_ae_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_ae_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat_ae_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a>   <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span>.toReal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L532-L543","name":"ProbabilityTheory.tendsto_condCDFRat_atTop","line":532,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDFRat_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDFRat_atTop\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_condCDFRat_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L517-L529","name":"ProbabilityTheory.tendsto_condCDFRat_atBot","line":517,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDFRat_atBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_condCDFRat_atBot\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_condCDFRat_atBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L506-L514","name":"ProbabilityTheory.condCDFRat_le_one","line":506,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_le_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L496-L503","name":"ProbabilityTheory.condCDFRat_nonneg","line":496,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L488-L493","name":"ProbabilityTheory.measurable_condCDFRat","line":488,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_condCDFRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measurable_condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L472-L485","name":"ProbabilityTheory.monotone_condCDFRat","line":472,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_condCDFRat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">monotone_condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L468-L469","name":"ProbabilityTheory.condCDFRat_of_mem","line":468,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_of_mem\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\">ProbabilityTheory.condCDFSet</a> <span class=\"fn\">ρ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span>.toReal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L464-L465","name":"ProbabilityTheory.condCDFRat_of_not_mem","line":464,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_of_not_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat_of_not_mem\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat_of_not_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\">ProbabilityTheory.condCDFSet</a> <span class=\"fn\">ρ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\">ProbabilityTheory.condCDFRat</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span> then <span class=\"fn\">0</span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L460-L461","name":"ProbabilityTheory.condCDFRat","line":460,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat","doc":"Conditional cdf of the measure given the value on `α`, restricted to the rationals.\nIt is defined to be `pre_cdf` if `a ∈ condCDFSet`, and a default cdf-like function\notherwise. This is an auxiliary definition used to define `cond_cdf`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFRat\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFRat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L447-L450","name":"ProbabilityTheory.mem_condCDFSet_ae","line":447,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.mem_condCDFSet_ae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.mem_condCDFSet_ae\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mem_condCDFSet_ae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\">ProbabilityTheory.condCDFSet</a> <span class=\"fn\">ρ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L439-L444","name":"ProbabilityTheory.hasCondCDF_of_mem_condCDFSet","line":439,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.hasCondCDF_of_mem_condCDFSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.hasCondCDF_of_mem_condCDFSet\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">hasCondCDF_of_mem_condCDFSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\">ProbabilityTheory.condCDFSet</a> <span class=\"fn\">ρ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L435-L436","name":"ProbabilityTheory.measurableSet_condCDFSet","line":435,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurableSet_condCDFSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurableSet_condCDFSet\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measurableSet_condCDFSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\">ProbabilityTheory.condCDFSet</a> <span class=\"fn\">ρ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L431-L432","name":"ProbabilityTheory.condCDFSet","line":431,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet","doc":"A measurable set of elements of `α` such that `ρ` has a conditional cdf at all\n`a ∈ condCDFSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.condCDFSet\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">condCDFSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L423-L426","name":"ProbabilityTheory.hasCondCDF_ae","line":423,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.hasCondCDF_ae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.hasCondCDF_ae\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">hasCondCDF_ae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L420-L420","name":"ProbabilityTheory.HasCondCDF.iInf_rat_gt_eq","line":420,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.iInf_rat_gt_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.iInf_rat_gt_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">iInf_rat_gt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">t</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">t</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L419-L419","name":"ProbabilityTheory.HasCondCDF.tendsto_atBot_zero","line":419,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.tendsto_atBot_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.tendsto_atBot_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">tendsto_atBot_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L418-L418","name":"ProbabilityTheory.HasCondCDF.tendsto_atTop_one","line":418,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.tendsto_atTop_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.tendsto_atTop_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">tendsto_atTop_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L417-L417","name":"ProbabilityTheory.HasCondCDF.le_one","line":417,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.le_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L416-L416","name":"ProbabilityTheory.HasCondCDF.mono","line":416,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.mono\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L415-L415","name":"ProbabilityTheory.HasCondCDF.mk","line":415,"kind":"ctor","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF.mk\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mono : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(le_one : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tendsto_atTop_one : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tendsto_atBot_zero : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iInf_rat_gt_eq : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\">⨅ (r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">t</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">t</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\">ProbabilityTheory.HasCondCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L415-L420","name":"ProbabilityTheory.HasCondCDF","line":415,"kind":"structure","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF","doc":"A product measure on `α × ℝ` is said to have a conditional cdf at `a : α` if `preCDF` is\nmonotone with limit 0 at -∞ and 1 at +∞, and is right continuous.\nThis property holds almost everywhere (see `has_cond_cdf_ae`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.HasCondCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">HasCondCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L401-L407","name":"ProbabilityTheory.inf_gt_preCDF","line":401,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.inf_gt_preCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.inf_gt_preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">inf_gt_preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>,\n  <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\">⨅ (r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">t</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">t</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L339-L398","name":"ProbabilityTheory.tendsto_preCDF_atBot_zero","line":339,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_preCDF_atBot_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_preCDF_atBot_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_preCDF_atBot_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>,\n  <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L269-L336","name":"ProbabilityTheory.tendsto_preCDF_atTop_one","line":269,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_preCDF_atTop_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_preCDF_atTop_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_preCDF_atTop_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>,\n  <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L263-L266","name":"ProbabilityTheory.tendsto_lintegral_preCDF_atBot","line":263,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_lintegral_preCDF_atBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_lintegral_preCDF_atBot\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_lintegral_preCDF_atBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\">∫⁻ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span></span>)</span> <span class=\"fn\">Filter.atBot</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L256-L260","name":"ProbabilityTheory.tendsto_lintegral_preCDF_atTop","line":256,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_lintegral_preCDF_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.tendsto_lintegral_preCDF_atTop\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_lintegral_preCDF_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\">∫⁻ (a : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">Set.univ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L245-L253","name":"ProbabilityTheory.preCDF_le_one","line":245,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF_le_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">preCDF_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>, <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L225-L242","name":"ProbabilityTheory.set_lintegral_iInf_gt_preCDF","line":225,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_iInf_gt_preCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_iInf_gt_preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">set_lintegral_iInf_gt_preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫⁻ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">s</span>, <span class=\"fn\">⨅ (r : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">t</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">x</span></span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">t</span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L215-L222","name":"ProbabilityTheory.monotone_preCDF","line":215,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_preCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.monotone_preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">monotone_preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᵐ (a : <span class=\"fn\">α</span>) ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L204-L212","name":"ProbabilityTheory.set_lintegral_preCDF_fst","line":204,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_preCDF_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.set_lintegral_preCDF_fst\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">set_lintegral_preCDF_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫⁻ (x : <span class=\"fn\">α</span>) in <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L199-L201","name":"ProbabilityTheory.withDensity_preCDF","line":199,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.withDensity_preCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.withDensity_preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">withDensity_preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/WithDensity.html#MeasureTheory.Measure.withDensity\">MeasureTheory.Measure.withDensity</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L195-L196","name":"ProbabilityTheory.measurable_preCDF","line":195,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_preCDF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.measurable_preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measurable_preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\">ProbabilityTheory.preCDF</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L191-L192","name":"ProbabilityTheory.preCDF","line":191,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF","doc":"`pre_cdf` is the Radon-Nikodym derivative of `ρ.IicSnd` with respect to `ρ.fst` at each\n`r : ℚ`. This function `ℚ → α → ℝ≥0∞` is such that for almost all `a : α`, the function `ℚ → ℝ≥0∞`\nsatisfies the properties of a cdf (monotone with limit 0 at -∞ and 1 at +∞, right-continuous).\n\nWe define this function on `ℚ` and not `ℝ` because `ℚ` is countable, which allows us to prove\nproperties of the form `∀ᵐ a ∂ρ.fst, ∀ q, P (preCDF q a)`, instead of the weaker\n`∀ q, ∀ᵐ a ∂ρ.fst, P (preCDF q a)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#ProbabilityTheory.preCDF\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">preCDF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L141-L163","name":"MeasureTheory.Measure.tendsto_IicSnd_atBot","line":141,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.tendsto_IicSnd_atBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.tendsto_IicSnd_atBot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">tendsto_IicSnd_atBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L131-L138","name":"MeasureTheory.Measure.tendsto_IicSnd_atTop","line":131,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.tendsto_IicSnd_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.tendsto_IicSnd_atTop\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">tendsto_IicSnd_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span></span> <span class=\"fn\">s</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L113-L128","name":"MeasureTheory.Measure.iInf_IicSnd_gt","line":113,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.iInf_IicSnd_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.iInf_IicSnd_gt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">iInf_IicSnd_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (r : <span class=\"fn\">{ <span class=\"fn\">r'</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> // <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r'</span></span> }</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">↑<span class=\"fn\">t</span></span></span>)</span></span></span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L108-L110","name":"MeasureTheory.Measure.IsFiniteMeasure.IicSnd","line":108,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IsFiniteMeasure.IicSnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IsFiniteMeasure.IicSnd\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IsFiniteMeasure</span>.<span class=\"name\">IicSnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L104-L105","name":"MeasureTheory.Measure.IicSnd_ac_fst","line":104,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_ac_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_ac_fst\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd_ac_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.AbsolutelyContinuous\">MeasureTheory.Measure.AbsolutelyContinuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L98-L101","name":"MeasureTheory.Measure.IicSnd_le_fst","line":98,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_le_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_le_fst\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd_le_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Prod/Basic.html#MeasureTheory.Measure.fst\">MeasureTheory.Measure.fst</a> <span class=\"fn\">ρ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L91-L95","name":"MeasureTheory.Measure.IicSnd_mono","line":91,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r' : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_le : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L87-L88","name":"MeasureTheory.Measure.IicSnd_univ","line":87,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span></span></span> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Set.univ</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">r</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L80-L84","name":"MeasureTheory.Measure.IicSnd_apply","line":80,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\">MeasureTheory.Measure.IicSnd</a> <span class=\"fn\">ρ</span> <span class=\"fn\">r</span></span>)</span></span></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">ρ</span></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">r</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L76-L77","name":"MeasureTheory.Measure.IicSnd","line":76,"kind":"def","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd","doc":"Measure on `α` such that for a measurable set `s`, `ρ.Iic_snd r s = ρ (s ×ˢ Iic r)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#MeasureTheory.Measure.IicSnd\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">IicSnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mα : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L63-L66","name":"Real.iInter_Iic_rat","line":63,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#Real.iInter_Iic_rat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#Real.iInter_Iic_rat\"><span class=\"name\">Real</span>.<span class=\"name\">iInter_Iic_rat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋂ (r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Probability/Kernel/CondCdf.lean#L56-L60","name":"Real.iUnion_Iic_rat","line":56,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/CondCdf.html#Real.iUnion_Iic_rat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/CondCdf.html#Real.iUnion_Iic_rat\"><span class=\"name\">Real</span>.<span class=\"name\">iUnion_Iic_rat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋃ (r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"}]}