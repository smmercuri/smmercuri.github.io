{"name":"Mathlib.RingTheory.GradedAlgebra.HomogeneousIdeal","instances":[{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.setLike","className":"SetLike"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instPartialOrder","className":"PartialOrder"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instTop","className":"Top"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instBot","className":"Bot"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instSup","className":"Sup"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instInf","className":"Inf"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instSupSet","className":"SupSet"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instInfSet","className":"InfSet"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.completeLattice","className":"CompleteLattice"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instAdd","className":"Add"},{"typeNames":["HomogeneousIdeal"],"name":"HomogeneousIdeal.instInhabited","className":"Inhabited"},{"typeNames":["HomogeneousIdeal"],"name":"instMulHomogeneousIdeal","className":"Mul"}],"imports":["Init","Mathlib.RingTheory.Ideal.Basic","Mathlib.RingTheory.Ideal.Maps","Mathlib.LinearAlgebra.Finsupp","Mathlib.RingTheory.GradedAlgebra.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L594-L596","name":"HomogeneousIdeal.toIdeal_irrelevant","line":594,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_irrelevant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_irrelevant\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_irrelevant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Canonical/Defs.html#CanonicallyOrderedAddCommMonoid\">CanonicallyOrderedAddCommMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.irrelevant\">HomogeneousIdeal.irrelevant</a> <span class=\"fn\">𝒜</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Maps.html#RingHom.ker\">RingHom.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.projZeroRingHom\">GradedRing.projZeroRingHom</a> <span class=\"fn\">𝒜</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L589-L591","name":"HomogeneousIdeal.mem_irrelevant_iff","line":589,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mem_irrelevant_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mem_irrelevant_iff\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">mem_irrelevant_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Canonical/Defs.html#CanonicallyOrderedAddCommMonoid\">CanonicallyOrderedAddCommMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.irrelevant\">HomogeneousIdeal.irrelevant</a> <span class=\"fn\">𝒜</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L581-L586","name":"HomogeneousIdeal.irrelevant","line":581,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.irrelevant","doc":"For a graded ring `⨁ᵢ 𝒜ᵢ` graded by a `CanonicallyOrderedAddCommMonoid ι`, the irrelevant ideal\nrefers to `⨁_{i>0} 𝒜ᵢ`, or equivalently `{a | a₀ = 0}`. This definition is used in `Proj`\nconstruction where `ι` is always `ℕ` so the irrelevant ideal is simply elements with `0` as\n0-th coordinate.\n\n# Future work\nHere in the definition, `ι` is assumed to be `CanonicallyOrderedAddCommMonoid`. However, the notion\nof irrelevant ideal makes sense in a more general setting by defining it as the ideal of elements\nwith `0` as i-th coordinate for all `i ≤ 0`, i.e. `{a | ∀ (i : ι), i ≤ 0 → aᵢ = 0}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.irrelevant\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">irrelevant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Canonical/Defs.html#CanonicallyOrderedAddCommMonoid\">CanonicallyOrderedAddCommMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L556-L558","name":"Ideal.homogeneousHull_eq_sInf","line":556,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_eq_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_eq_sInf\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull_eq_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span> | <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L550-L554","name":"Ideal.homogeneousHull.gi","line":550,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull.gi","doc":"`Ideal.homogeneousHull 𝒜` and `toIdeal : HomogeneousIdeal 𝒜 → Ideal A` form a galois\ninsertion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull.gi\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull</span>.<span class=\"name\">gi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisInsertion\">GaloisInsertion</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span></span>)</span> <span class=\"fn\">HomogeneousIdeal.toIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L544-L546","name":"Ideal.homogeneousHull.gc","line":544,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull.gc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull.gc\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull</span>.<span class=\"name\">gc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span></span>)</span> <span class=\"fn\">HomogeneousIdeal.toIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L526-L533","name":"Ideal.homogeneousHull_eq_iSup","line":526,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_eq_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_eq_iSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull_eq_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">{ <span class=\"fn\">toSubmodule</span> := <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span>, <span class=\"fn\">is_homogeneous'</span> := <span class=\"fn\">⋯</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L518-L524","name":"Ideal.toIdeal_homogeneousHull_eq_iSup","line":518,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.toIdeal_homogeneousHull_eq_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.toIdeal_homogeneousHull_eq_iSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">toIdeal_homogeneousHull_eq_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L512-L514","name":"HomogeneousIdeal.homogeneousHull_toIdeal_eq_self","line":512,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.homogeneousHull_toIdeal_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.homogeneousHull_toIdeal_eq_self\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">homogeneousHull_toIdeal_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L504-L509","name":"Ideal.IsHomogeneous.toIdeal_homogeneousHull_eq_self","line":504,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.toIdeal_homogeneousHull_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.toIdeal_homogeneousHull_eq_self\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">toIdeal_homogeneousHull_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L497-L500","name":"Ideal.homogeneousHull_mono","line":497,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull_mono\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L487-L495","name":"Ideal.le_toIdeal_homogeneousHull","line":487,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.le_toIdeal_homogeneousHull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.le_toIdeal_homogeneousHull\"><span class=\"name\">Ideal</span>.<span class=\"name\">le_toIdeal_homogeneousHull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\">Ideal.homogeneousHull</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L481-L485","name":"Ideal.homogeneousHull","line":481,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull","doc":"For any `I : Ideal A`, not necessarily homogeneous, `I.homogeneousHull 𝒜` is\nthe smallest homogeneous ideal containing `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousHull\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousHull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L454-L464","name":"Ideal.homogeneousCore'_eq_sSup","line":454,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_eq_sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_eq_sSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore'_eq_sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'\">Ideal.homogeneousCore'</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">sSup</a> <span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">J</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L450-L452","name":"Ideal.homogeneousCore_eq_sSup","line":450,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore_eq_sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore_eq_sSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore_eq_sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">sSup</a> <span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L443-L448","name":"Ideal.homogeneousCore.gi","line":443,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore.gi","doc":"`toIdeal : HomogeneousIdeal 𝒜 → Ideal A` and `Ideal.homogeneousCore 𝒜` forms a galois\ncoinsertion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore.gi\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore</span>.<span class=\"name\">gi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisCoinsertion\">GaloisCoinsertion</a> <span class=\"fn\">HomogeneousIdeal.toIdeal</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L437-L439","name":"Ideal.homogeneousCore.gc","line":437,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore.gc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore.gc\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore</span>.<span class=\"name\">gc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">HomogeneousIdeal.toIdeal</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L415-L417","name":"HomogeneousIdeal.toIdeal_mul","line":415,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_mul\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">J</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L411-L412","name":"instMulHomogeneousIdeal","line":411,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#instMulHomogeneousIdeal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#instMulHomogeneousIdeal\"><span class=\"name\">instMulHomogeneousIdeal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L404-L409","name":"Ideal.IsHomogeneous.mul","line":404,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.mul\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(HI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(HJ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L391-L391","name":"HomogeneousIdeal.instInhabited","line":391,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInhabited\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L388-L389","name":"HomogeneousIdeal.toIdeal_add","line":388,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_add\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">J</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L384-L385","name":"HomogeneousIdeal.instAdd","line":384,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instAdd\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L380-L382","name":"HomogeneousIdeal.completeLattice","line":380,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.completeLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.completeLattice\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">completeLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L377-L378","name":"HomogeneousIdeal.eq_bot_iff","line":377,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.eq_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.eq_bot_iff\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">eq_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L373-L374","name":"HomogeneousIdeal.eq_top_iff","line":373,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.eq_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.eq_top_iff\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">eq_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L368-L370","name":"HomogeneousIdeal.toIdeal_iInf₂","line":368,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iInf₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iInf₂\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_iInf₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ' : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Sort</a> u_6</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨅ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨅ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span>.toIdeal</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L363-L365","name":"HomogeneousIdeal.toIdeal_iSup₂","line":363,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iSup₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iSup₂\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_iSup₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ' : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Sort</a> u_6</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨆ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨆ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span>.toIdeal</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L358-L360","name":"HomogeneousIdeal.toIdeal_iInf","line":358,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iInf\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L353-L355","name":"HomogeneousIdeal.toIdeal_iSup","line":353,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_iSup\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L349-L350","name":"HomogeneousIdeal.toIdeal_sInf","line":349,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sInf\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ℐ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">ℐ</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ <span class=\"fn\">s</span> ∈ <span class=\"fn\">ℐ</span>, <span class=\"fn\"><span class=\"fn\">s</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L345-L346","name":"HomogeneousIdeal.toIdeal_sSup","line":345,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sSup\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ℐ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">sSup</a> <span class=\"fn\">ℐ</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ <span class=\"fn\">s</span> ∈ <span class=\"fn\">ℐ</span>, <span class=\"fn\"><span class=\"fn\">s</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L341-L342","name":"HomogeneousIdeal.toIdeal_inf","line":341,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_inf\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">J</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L337-L338","name":"HomogeneousIdeal.toIdeal_sup","line":337,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_sup\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">J</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L333-L334","name":"HomogeneousIdeal.toIdeal_bot","line":333,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_bot\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L329-L330","name":"HomogeneousIdeal.toIdeal_top","line":329,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_top\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L325-L326","name":"HomogeneousIdeal.coe_inf","line":325,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_inf\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">coe_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L321-L322","name":"HomogeneousIdeal.coe_sup","line":321,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_sup\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">coe_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">J</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">J</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L317-L318","name":"HomogeneousIdeal.coe_bot","line":317,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_bot\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L313-L314","name":"HomogeneousIdeal.coe_top","line":313,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.coe_top\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">coe_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L309-L310","name":"HomogeneousIdeal.instInfSet","line":309,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInfSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInfSet\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instInfSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet\">InfSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L306-L307","name":"HomogeneousIdeal.instSupSet","line":306,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instSupSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instSupSet\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instSupSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet\">SupSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L303-L304","name":"HomogeneousIdeal.instInf","line":303,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instInf\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L300-L301","name":"HomogeneousIdeal.instSup","line":300,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instSup\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Sup\">Sup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L297-L298","name":"HomogeneousIdeal.instBot","line":297,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instBot\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L294-L295","name":"HomogeneousIdeal.instTop","line":294,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instTop\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L291-L292","name":"HomogeneousIdeal.instPartialOrder","line":291,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.instPartialOrder\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">instPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L280-L283","name":"Ideal.IsHomogeneous.sInf","line":280,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sInf\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℐ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">I</span> ∈ <span class=\"fn\">ℐ</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">ℐ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L275-L278","name":"Ideal.IsHomogeneous.sSup","line":275,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℐ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">I</span> ∈ <span class=\"fn\">ℐ</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">sSup</a> <span class=\"fn\">ℐ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L271-L273","name":"Ideal.IsHomogeneous.iInf₂","line":271,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iInf₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iInf₂\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iInf₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ' : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Sort</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨅ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L267-L269","name":"Ideal.IsHomogeneous.iSup₂","line":267,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iSup₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iSup₂\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iSup₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ' : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Sort</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\">⨆ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ'</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L261-L265","name":"Ideal.IsHomogeneous.iInf","line":261,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iInf\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L252-L259","name":"Ideal.IsHomogeneous.iSup","line":252,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iSup\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">κ</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L244-L250","name":"Ideal.IsHomogeneous.sup","line":244,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.sup\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(HI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(HJ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L240-L242","name":"Ideal.IsHomogeneous.inf","line":240,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.inf\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(HI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(HJ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L236-L236","name":"Ideal.IsHomogeneous.top","line":236,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.top\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L231-L234","name":"Ideal.IsHomogeneous.bot","line":231,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.bot\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L209-L212","name":"Ideal.IsHomogeneous.iff_exists","line":209,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iff_exists\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GradedMonoid.html#SetLike.homogeneousSubmonoid\">SetLike.homogeneousSubmonoid</a> <span class=\"fn\">𝒜</span></span>)</span></span></span>), <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Subtype.val</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">S</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L206-L207","name":"Ideal.IsHomogeneous.iff_eq","line":206,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.iff_eq\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L199-L202","name":"HomogeneousIdeal.toIdeal_homogeneousCore_eq_self","line":199,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_homogeneousCore_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_homogeneousCore_eq_self\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_homogeneousCore_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L190-L196","name":"Ideal.IsHomogeneous.toIdeal_homogeneousCore_eq_self","line":190,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.toIdeal_homogeneousCore_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.toIdeal_homogeneousCore_eq_self\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">toIdeal_homogeneousCore_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L186-L188","name":"Ideal.mem_homogeneousCore_of_homogeneous_of_mem","line":186,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.mem_homogeneousCore_of_homogeneous_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.mem_homogeneousCore_of_homogeneous_of_mem\"><span class=\"name\">Ideal</span>.<span class=\"name\">mem_homogeneousCore_of_homogeneous_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GradedMonoid.html#SetLike.Homogeneous\">SetLike.Homogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmem : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L181-L182","name":"Ideal.toIdeal_homogeneousCore_le","line":181,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.toIdeal_homogeneousCore_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.toIdeal_homogeneousCore_le\"><span class=\"name\">Ideal</span>.<span class=\"name\">toIdeal_homogeneousCore_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span>.toIdeal</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L178-L179","name":"Ideal.homogeneousCore_mono","line":178,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore_mono\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\">Ideal.homogeneousCore</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L172-L176","name":"Ideal.homogeneousCore","line":172,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore","doc":"For any `I : Ideal A`, not necessarily homogeneous, `I.homogeneousCore' 𝒜`\nis the largest homogeneous ideal of `A` contained in `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L154-L168","name":"Ideal.homogeneous_span","line":154,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneous_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneous_span\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneous_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/GradedMonoid.html#SetLike.Homogeneous\">SetLike.Homogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L140-L152","name":"Ideal.mul_homogeneous_element_mem_of_mem","line":140,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.mul_homogeneous_element_mem_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.mul_homogeneous_element_mem_of_mem\"><span class=\"name\">Ideal</span>.<span class=\"name\">mul_homogeneous_element_mem_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GradedMonoid.html#SetLike.Homogeneous\">SetLike.Homogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx₂ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L136-L138","name":"Ideal.isHomogeneous_iff_subset_iInter","line":136,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.isHomogeneous_iff_subset_iInter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.isHomogeneous_iff_subset_iInter\"><span class=\"name\">Ideal</span>.<span class=\"name\">isHomogeneous_iff_subset_iInter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋂ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L132-L134","name":"Ideal.isHomogeneous_iff_forall_subset","line":132,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.isHomogeneous_iff_forall_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.isHomogeneous_iff_forall_subset\"><span class=\"name\">Ideal</span>.<span class=\"name\">isHomogeneous_iff_forall_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing.proj\">GradedRing.proj</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L120-L121","name":"Ideal.homogeneousCore'_le","line":120,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_le\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore'_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'\">Ideal.homogeneousCore'</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L117-L118","name":"Ideal.homogeneousCore'_mono","line":117,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'_mono\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore'_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'\">Ideal.homogeneousCore'</a> <span class=\"fn\">𝒜</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L114-L115","name":"Ideal.homogeneousCore'","line":114,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'","doc":"For any `I : Ideal A`, not necessarily homogeneous, `I.homogeneousCore' 𝒜`\nis the largest homogeneous ideal of `A` contained in `I`, as an ideal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.homogeneousCore'\"><span class=\"name\">Ideal</span>.<span class=\"name\">homogeneousCore'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L101-L102","name":"HomogeneousIdeal.mem_iff","line":101,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mem_iff\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L93-L98","name":"HomogeneousIdeal.ext'","line":93,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.ext'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.ext'\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">ext'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">𝒜</span> <span class=\"fn\">i</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">J</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L90-L91","name":"HomogeneousIdeal.ext","line":90,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.ext\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">J</span>.toIdeal</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L85-L87","name":"HomogeneousIdeal.setLike","line":85,"kind":"instance","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.setLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.setLike\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">setLike</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L81-L83","name":"HomogeneousIdeal.toIdeal_injective","line":81,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal_injective\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">HomogeneousIdeal.toIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L78-L79","name":"HomogeneousIdeal.isHomogeneous","line":78,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.isHomogeneous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.isHomogeneous\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">isHomogeneous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\"><span class=\"fn\">I</span>.toIdeal</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L75-L76","name":"HomogeneousIdeal.toIdeal","line":75,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal","doc":"Converting a homogeneous ideal to an ideal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.toIdeal\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">toIdeal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L70-L70","name":"HomogeneousIdeal.is_homogeneous'","line":70,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.is_homogeneous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.is_homogeneous'\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">is_homogeneous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\"><span class=\"fn\">self</span>.toSubmodule</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L69-L69","name":"HomogeneousIdeal.mk","line":69,"kind":"ctor","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal.mk\"><span class=\"name\">HomogeneousIdeal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toSubmodule : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\">Submodule</a> <span class=\"fn\">A</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_homogeneous' : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">toSubmodule</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\">HomogeneousIdeal</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L69-L70","name":"HomogeneousIdeal","line":69,"kind":"structure","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal","doc":"For any `Semiring A`, we collect the homogeneous ideals of `A` into a type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#HomogeneousIdeal\"><span class=\"name\">HomogeneousIdeal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Submodule/Basic.html#Submodule\"><span class=\"name\">Submodule</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_4</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L61-L66","name":"Ideal.IsHomogeneous.mem_iff","line":61,"kind":"theorem","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous.mem_iff\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span>.<span class=\"name\">mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\">Ideal.IsHomogeneous</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/DirectSum/Decomposition.html#DirectSum.decompose\">DirectSum.decompose</a> <span class=\"fn\">𝒜</span></span>)</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.lean#L58-L59","name":"Ideal.IsHomogeneous","line":58,"kind":"def","docLink":"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous","doc":"An `I : Ideal A` is homogeneous if for every `r ∈ I`, all homogeneous components\nof `r` are in `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/GradedAlgebra/HomogeneousIdeal.html#Ideal.IsHomogeneous\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsHomogeneous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoidClass\">AddSubmonoidClass</a> <span class=\"fn\">σ</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝒜 : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/GradedAlgebra/Basic.html#GradedRing\">GradedRing</a> <span class=\"fn\">𝒜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}