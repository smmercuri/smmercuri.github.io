{"name":"Mathlib.RingTheory.Ideal.IsPrincipal","instances":[],"imports":["Init","Mathlib.RingTheory.PrincipalIdealDomain"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L144-L149","name":"Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal","line":144,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal","doc":"The `MulEquiv` version of `Ideal.associatesNonZeroDivisorsEquivIsPrincipal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsMulEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid\">Ideal.isPrincipalNonZeroDivisorsSubmonoid</a> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L137-L140","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one","line":137,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">1</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L129-L134","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul","line":129,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">y</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L125-L127","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe","line":125,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">associatesNonZeroDivisorsEquiv</span>.symm</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L122-L123","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply","line":122,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">Ideal.associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">{<span class=\"fn\">↑<span class=\"fn\">x</span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L109-L119","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal","line":109,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal","doc":"A version of `Ideal.associatesEquivIsPrincipal` for non-zero-divisors generators. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">{ <span class=\"fn\">I</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span> // <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L100-L105","name":"Ideal.associatesMulEquivIsPrincipal","line":100,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesMulEquivIsPrincipal","doc":"The `MulEquiv` version of `Ideal.associatesEquivIsPrincipal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesMulEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesMulEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">Ideal.isPrincipalSubmonoid</a> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L94-L96","name":"Ideal.associatesEquivIsPrincipal_map_one","line":94,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_one\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L89-L91","name":"Ideal.associatesEquivIsPrincipal_map_zero","line":89,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_zero\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L82-L86","name":"Ideal.associatesEquivIsPrincipal_mul","line":82,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_mul\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">y</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L79-L80","name":"Ideal.associatesEquivIsPrincipal_symm_apply","line":79,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_symm_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span>.symm</span> <span class=\"fn\">⟨<span class=\"fn\">I</span>, <span class=\"fn\">hI</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrincipalIdealDomain.html#Submodule.IsPrincipal.generator\">Submodule.IsPrincipal.generator</a> <span class=\"fn\">I</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L75-L76","name":"Ideal.associatesEquivIsPrincipal_apply","line":75,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">Ideal.associatesEquivIsPrincipal</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">{<span class=\"fn\">x</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L65-L72","name":"Ideal.associatesEquivIsPrincipal","line":65,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal","doc":"The equivalence between `Associates R` and the principal ideals of `R` defined by sending the\nclass of `x` to the principal ideal generated by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated/Basic.html#Associates\">Associates</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">{ <span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span> // <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L52-L58","name":"Ideal.isPrincipalNonZeroDivisorsSubmonoid","line":52,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid","doc":"The non-zero-divisors principal ideals of `R` form a submonoid of `(Ideal R)⁰`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">isPrincipalNonZeroDivisorsSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L47-L48","name":"Ideal.span_singleton_mem_isPrincipalSubmonoid","line":47,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.span_singleton_mem_isPrincipalSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.span_singleton_mem_isPrincipalSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">span_singleton_mem_isPrincipalSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">Ideal.isPrincipalSubmonoid</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L44-L45","name":"Ideal.mem_isPrincipalSubmonoid_iff","line":44,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.mem_isPrincipalSubmonoid_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.mem_isPrincipalSubmonoid_iff\"><span class=\"name\">Ideal</span>.<span class=\"name\">mem_isPrincipalSubmonoid_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">Ideal.isPrincipalSubmonoid</a> <span class=\"fn\">R</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L37-L42","name":"Ideal.isPrincipalSubmonoid","line":37,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid","doc":"The principal ideals of `R` form a submonoid of `Ideal R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">isPrincipalSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#Submonoid\">Submonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"}]}