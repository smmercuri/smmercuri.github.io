{"name":"Mathlib.RingTheory.Polynomial.Cyclotomic.Eval","instances":[],"imports":["Init","Mathlib.RingTheory.Polynomial.Cyclotomic.Roots","Mathlib.Tactic.ByContra","Mathlib.Topology.Algebra.Polynomial","Mathlib.NumberTheory.Padics.PadicVal","Mathlib.Analysis.Complex.Arg"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L301-L305","name":"Polynomial.sub_one_lt_natAbs_cyclotomic_eval","line":301,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_lt_natAbs_cyclotomic_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_lt_natAbs_cyclotomic_eval\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sub_one_lt_natAbs_cyclotomic_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.natAbs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L290-L299","name":"Polynomial.sub_one_pow_totient_lt_natAbs_cyclotomic_eval","line":290,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_lt_natAbs_cyclotomic_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_lt_natAbs_cyclotomic_eval\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sub_one_pow_totient_lt_natAbs_cyclotomic_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.totient</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>)</span>.natAbs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L283-L288","name":"Polynomial.cyclotomic_eval_le_add_one_pow_totient","line":283,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_eval_le_add_one_pow_totient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_eval_le_add_one_pow_totient\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_eval_le_add_one_pow_totient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.totient</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L217-L281","name":"Polynomial.cyclotomic_eval_lt_add_one_pow_totient","line":217,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_eval_lt_add_one_pow_totient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_eval_lt_add_one_pow_totient\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_eval_lt_add_one_pow_totient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.totient</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L211-L215","name":"Polynomial.sub_one_pow_totient_le_cyclotomic_eval","line":211,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_le_cyclotomic_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_le_cyclotomic_eval\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sub_one_pow_totient_le_cyclotomic_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.totient</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L162-L209","name":"Polynomial.sub_one_pow_totient_lt_cyclotomic_eval","line":162,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_lt_cyclotomic_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.sub_one_pow_totient_lt_cyclotomic_eval\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sub_one_pow_totient_lt_cyclotomic_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq' : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.totient</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L129-L160","name":"Polynomial.eval_one_cyclotomic_not_prime_pow","line":129,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_not_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_not_prime_pow\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eval_one_cyclotomic_not_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L125-L127","name":"Polynomial.cyclotomic_nonneg","line":125,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_nonneg","doc":"Cyclotomic polynomials are always nonnegative on inputs one or more. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_nonneg\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedCommRing\">LinearOrderedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L120-L122","name":"Polynomial.cyclotomic_pos'","line":120,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos'","doc":"Cyclotomic polynomials are always positive on inputs larger than one.\nSimilar to `cyclotomic_pos` but with the condition on the input rather than index of the\ncyclotomic polynomial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos'\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_pos'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedCommRing\">LinearOrderedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L107-L115","name":"Polynomial.cyclotomic_pos_and_nonneg","line":107,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos_and_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos_and_nonneg\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_pos_and_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedCommRing\">LinearOrderedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L64-L105","name":"Polynomial.cyclotomic_pos","line":64,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.cyclotomic_pos\"><span class=\"name\">Polynomial</span>.<span class=\"name\">cyclotomic_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedCommRing\">LinearOrderedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L43-L44","name":"Polynomial.eval₂_one_cyclotomic_prime_pow","line":43,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval₂_one_cyclotomic_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval₂_one_cyclotomic_prime_pow\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eval₂_one_cyclotomic_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L37-L40","name":"Polynomial.eval_one_cyclotomic_prime_pow","line":37,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_prime_pow\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eval_one_cyclotomic_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hn : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L33-L34","name":"Polynomial.eval₂_one_cyclotomic_prime","line":33,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval₂_one_cyclotomic_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval₂_one_cyclotomic_prime\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eval₂_one_cyclotomic_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval₂\">Polynomial.eval₂</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">p</span> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.lean#L27-L30","name":"Polynomial.eval_one_cyclotomic_prime","line":27,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Eval.html#Polynomial.eval_one_cyclotomic_prime\"><span class=\"name\">Polynomial</span>.<span class=\"name\">eval_one_cyclotomic_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hn : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Cyclotomic/Basic.html#Polynomial.cyclotomic\">Polynomial.cyclotomic</a> <span class=\"fn\">p</span> <span class=\"fn\">R</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"}]}