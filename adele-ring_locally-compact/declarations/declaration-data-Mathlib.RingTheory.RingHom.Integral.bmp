{"name":"Mathlib.RingTheory.RingHom.Integral","instances":[],"imports":["Init","Mathlib.RingTheory.RingHomProperties","Mathlib.RingTheory.IntegralClosure.IsIntegralClosure.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/RingHom/Integral.lean#L31-L37","name":"RingHom.isIntegral_stableUnderBaseChange","line":31,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_stableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_stableUnderBaseChange\"><span class=\"name\">RingHom</span>.<span class=\"name\">isIntegral_stableUnderBaseChange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderBaseChange\">RingHom.StableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span>.IsIntegral</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/RingHom/Integral.lean#L25-L29","name":"RingHom.isIntegral_respectsIso","line":25,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_respectsIso\"><span class=\"name\">RingHom</span>.<span class=\"name\">isIntegral_respectsIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RingHom.RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span>.IsIntegral</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/RingTheory/RingHom/Integral.lean#L22-L23","name":"RingHom.isIntegral_stableUnderComposition","line":22,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_stableUnderComposition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Integral.html#RingHom.isIntegral_stableUnderComposition\"><span class=\"name\">RingHom</span>.<span class=\"name\">isIntegral_stableUnderComposition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition\">RingHom.StableUnderComposition</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span>.IsIntegral</span></span></span></div></div>"}]}