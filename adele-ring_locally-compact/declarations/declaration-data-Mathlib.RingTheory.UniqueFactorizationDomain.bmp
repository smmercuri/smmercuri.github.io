{"name":"Mathlib.RingTheory.UniqueFactorizationDomain","instances":[{"typeNames":[],"name":"IsNoetherianRing.wfDvdMonoid","className":"WfDvdMonoid"},{"typeNames":["Associates"],"name":"WfDvdMonoid.wfDvdMonoid_associates","className":"WfDvdMonoid"},{"typeNames":["Associates"],"name":"Associates.ufm","className":"UniqueFactorizationMonoid"},{"typeNames":[],"name":"UniqueFactorizationMonoid.instDecompositionMonoidToSemigroupToSemigroupWithZeroToMonoidWithZeroToCommMonoidWithZero","className":"DecompositionMonoid"},{"typeNames":["Associates","Associates.FactorSet"],"name":"Associates.instMembershipAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZeroFactorSet","className":"Membership"},{"typeNames":["Associates"],"name":"Associates.instSupAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","className":"Sup"},{"typeNames":["Associates"],"name":"Associates.instInfAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","className":"Inf"},{"typeNames":["Associates"],"name":"Associates.instLatticeAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","className":"Lattice"},{"typeNames":["NormalizedGCDMonoid"],"name":"instNonemptyNormalizedGCDMonoid_1","className":"Nonempty"}],"imports":["Init","Mathlib.Algebra.BigOperators.Associated","Mathlib.Algebra.GCDMonoid.Basic","Mathlib.Data.Finsupp.Multiset","Mathlib.RingTheory.Noetherian","Mathlib.RingTheory.Multiplicity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2085-L2095","name":"Ideal.IsPrime.exists_mem_prime_of_ne_bot","line":2085,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Ideal.IsPrime.exists_mem_prime_of_ne_bot","doc":"Every non-zero prime ideal in a unique factorization domain contains a prime element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Ideal.IsPrime.exists_mem_prime_of_ne_bot\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsPrime</span>.<span class=\"name\">exists_mem_prime_of_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI₂ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ x ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2075-L2078","name":"associated_of_factorization_eq","line":2075,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#associated_of_factorization_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#associated_of_factorization_eq\"><span class=\"name\">associated_of_factorization_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2070-L2072","name":"factorization_pow","line":2070,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_pow","doc":"For any `p`, the power of `p` in `x^n` is `n` times the power in `x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_pow\"><span class=\"name\">factorization_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2064-L2066","name":"factorization_mul","line":2064,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_mul","doc":"For nonzero `a` and `b`, the power of `p` in `a * b` is the sum of the powers in `a` and `b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_mul\"><span class=\"name\">factorization_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2057-L2059","name":"support_factorization","line":2057,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#support_factorization","doc":"The support of `factorization n` is exactly the Finset of normalized factors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#support_factorization\"><span class=\"name\">support_factorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">n</span></span>)</span>.support</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Multiset.toFinset\">Multiset.toFinset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2052-L2052","name":"factorization_one","line":2052,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_one\"><span class=\"name\">factorization_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2048-L2048","name":"factorization_zero","line":2048,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_zero\"><span class=\"name\">factorization_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2043-L2044","name":"factorization_eq_count","line":2043,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_eq_count","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization_eq_count\"><span class=\"name\">factorization_eq_count</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\">factorization</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L2039-L2040","name":"factorization","line":2039,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization","doc":"This returns the multiset of irreducible factors as a `Finsupp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#factorization\"><span class=\"name\">factorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1999-L2026","name":"UniqueFactorizationMonoid.fintypeSubtypeDvd","line":1999,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.fintypeSubtypeDvd","doc":"If `y` is a nonzero element of a unique factorization monoid with finitely\nmany units (e.g. `ℤ`, `Ideal (ring_of_integers K)`), it has finitely many divisors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.fintypeSubtypeDvd\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">fintypeSubtypeDvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">M</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">y</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1988-L1991","name":"instNonemptyNormalizedGCDMonoid_1","line":1988,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#instNonemptyNormalizedGCDMonoid_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#instNonemptyNormalizedGCDMonoid_1\"><span class=\"name\">instNonemptyNormalizedGCDMonoid_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizedGCDMonoid\">NormalizedGCDMonoid</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1966-L1985","name":"UniqueFactorizationMonoid.toNormalizedGCDMonoid","line":1966,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.toNormalizedGCDMonoid","doc":"`toNormalizedGCDMonoid` constructs a GCD monoid out of a normalization on a\nunique factorization domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.toNormalizedGCDMonoid\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">toNormalizedGCDMonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizedGCDMonoid\">NormalizedGCDMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1935-L1961","name":"UniqueFactorizationMonoid.toGCDMonoid","line":1935,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.toGCDMonoid","doc":"`toGCDMonoid` constructs a GCD monoid out of a unique factorization domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.toGCDMonoid\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">toGCDMonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#GCDMonoid\">GCDMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1921-L1925","name":"Associates.eq_pow_find_of_dvd_irreducible_pow","line":1921,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_find_of_dvd_irreducible_pow","doc":"The only divisors of prime powers are prime powers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_find_of_dvd_irreducible_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_pow_find_of_dvd_irreducible_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Data/Nat/Lemmas.html#Nat.find\">Nat.find</a> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1902-L1917","name":"Associates.eq_pow_of_mul_eq_pow","line":1902,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_of_mul_eq_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_of_mul_eq_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_pow_of_mul_eq_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (d : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1887-L1899","name":"Associates.count_factors_eq_find_of_dvd_pow","line":1887,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_factors_eq_find_of_dvd_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_factors_eq_find_of_dvd_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">count_factors_eq_find_of_dvd_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Data/Nat/Lemmas.html#Nat.find\">Nat.find</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1869-L1884","name":"Associates.eq_pow_count_factors_of_dvd_pow","line":1869,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_count_factors_of_dvd_pow","doc":"The only divisors of prime powers are prime powers. See `eq_pow_find_of_dvd_irreducible_pow`\nfor an explicit expression as a p-power (without using `count`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_pow_count_factors_of_dvd_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_pow_count_factors_of_dvd_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1850-L1864","name":"Associates.is_pow_of_dvd_count","line":1850,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.is_pow_of_dvd_count","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.is_pow_of_dvd_count\"><span class=\"name\">Associates</span>.<span class=\"name\">is_pow_of_dvd_count</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1844-L1847","name":"Associates.dvd_count_pow","line":1844,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_count_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_count_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">dvd_count_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1835-L1841","name":"Associates.count_pow","line":1835,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">count_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1827-L1832","name":"Associates.pow_factors","line":1827,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.pow_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.pow_factors\"><span class=\"name\">Associates</span>.<span class=\"name\">pow_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1820-L1823","name":"Associates.factors_one","line":1820,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_one\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1807-L1816","name":"Associates.dvd_count_of_dvd_count_mul","line":1807,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_count_of_dvd_count_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_count_of_dvd_count_mul\"><span class=\"name\">Associates</span>.<span class=\"name\">dvd_count_of_dvd_count_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(habk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1792-L1804","name":"Associates.count_mul_of_coprime'","line":1792,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul_of_coprime'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul_of_coprime'\"><span class=\"name\">Associates</span>.<span class=\"name\">count_mul_of_coprime'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1782-L1789","name":"Associates.count_mul_of_coprime","line":1782,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul_of_coprime\"><span class=\"name\">Associates</span>.<span class=\"name\">count_mul_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1772-L1779","name":"Associates.count_of_coprime","line":1772,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_of_coprime\"><span class=\"name\">Associates</span>.<span class=\"name\">count_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\">∀ (<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1762-L1769","name":"Associates.count_mul","line":1762,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_mul\"><span class=\"name\">Associates</span>.<span class=\"name\">count_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1752-L1759","name":"Associates.count_eq_zero_of_ne","line":1752,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_eq_zero_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_eq_zero_of_ne\"><span class=\"name\">Associates</span>.<span class=\"name\">count_eq_zero_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1747-L1749","name":"Associates.count_self","line":1747,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_self\"><span class=\"name\">Associates</span>.<span class=\"name\">count_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1732-L1744","name":"Associates.count_ne_zero_iff_dvd","line":1732,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_ne_zero_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_ne_zero_iff_dvd\"><span class=\"name\">Associates</span>.<span class=\"name\">count_ne_zero_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1722-L1729","name":"Associates.le_of_count_ne_zero","line":1722,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.le_of_count_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.le_of_count_ne_zero\"><span class=\"name\">Associates</span>.<span class=\"name\">le_of_count_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1714-L1719","name":"Associates.prime_pow_dvd_iff_le","line":1714,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prime_pow_dvd_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prime_pow_dvd_iff_le\"><span class=\"name\">Associates</span>.<span class=\"name\">prime_pow_dvd_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">m</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1706-L1711","name":"Associates.factors_prime_pow","line":1706,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_prime_pow\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.replicate\">Multiset.replicate</a> <span class=\"fn\">k</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hp</span> }</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1700-L1703","name":"Associates.factors_self","line":1700,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_self\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hp</span> }</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1687-L1697","name":"Associates.coprime_iff_inf_one","line":1687,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.coprime_iff_inf_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.coprime_iff_inf_one\"><span class=\"name\">Associates</span>.<span class=\"name\">coprime_iff_inf_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb0 : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">d</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1665-L1684","name":"Associates.exists_prime_dvd_of_not_inf_one","line":1665,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.exists_prime_dvd_of_not_inf_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.exists_prime_dvd_of_not_inf_one\"><span class=\"name\">Associates</span>.<span class=\"name\">exists_prime_dvd_of_not_inf_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (p : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1655-L1661","name":"Associates.mem_factors_iff_dvd","line":1655,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors_iff_dvd\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factors_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1649-L1652","name":"Associates.mem_factors_of_dvd","line":1649,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors_of_dvd\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factors_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1640-L1646","name":"Associates.mem_factors'_iff_dvd","line":1640,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors'_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors'_iff_dvd\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factors'_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">p</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1633-L1637","name":"Associates.mem_factors'_of_dvd","line":1633,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors'_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factors'_of_dvd\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factors'_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">p</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1625-L1630","name":"Associates.dvd_of_mem_factors'","line":1625,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_of_mem_factors'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_of_mem_factors'\"><span class=\"name\">Associates</span>.<span class=\"name\">dvd_of_mem_factors'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hz : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mem : <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hp</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1612-L1622","name":"Associates.dvd_of_mem_factors","line":1612,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_of_mem_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.dvd_of_mem_factors\"><span class=\"name\">Associates</span>.<span class=\"name\">dvd_of_mem_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1605-L1609","name":"Associates.sup_mul_inf","line":1605,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.sup_mul_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.sup_mul_inf\"><span class=\"name\">Associates</span>.<span class=\"name\">sup_mul_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1590-L1602","name":"Associates.instLatticeAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","line":1590,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instLatticeAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instLatticeAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero\"><span class=\"name\">Associates</span>.<span class=\"name\">instLatticeAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1586-L1587","name":"Associates.instInfAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","line":1586,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instInfAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instInfAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero\"><span class=\"name\">Associates</span>.<span class=\"name\">instInfAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1582-L1583","name":"Associates.instSupAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","line":1582,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instSupAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instSupAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero\"><span class=\"name\">Associates</span>.<span class=\"name\">instSupAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Sup\">Sup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1571-L1578","name":"Associates.prod_le","line":1571,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_le\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1565-L1568","name":"Associates.count_le_count_of_le","line":1565,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_le_count_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_le_count_of_le\"><span class=\"name\">Associates</span>.<span class=\"name\">count_le_count_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1557-L1562","name":"Associates.factors_le","line":1557,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_le\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1553-L1554","name":"Associates.factors_mono","line":1553,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mono\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1546-L1550","name":"Associates.factors_mul","line":1546,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mul\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1533-L1542","name":"Associates.count_le_count_of_factors_le","line":1533,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_le_count_of_factors_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_le_count_of_factors_le\"><span class=\"name\">Associates</span>.<span class=\"name\">count_le_count_of_factors_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1528-L1530","name":"Associates.eq_of_eq_counts","line":1528,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_eq_counts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_eq_counts\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_of_eq_counts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1512-L1525","name":"Associates.eq_factors_of_eq_counts","line":1512,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_factors_of_eq_counts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_factors_of_eq_counts\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_factors_of_eq_counts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1506-L1509","name":"Associates.eq_of_prod_eq_prod","line":1506,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_prod_eq_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_prod_eq_prod\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_of_prod_eq_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1501-L1503","name":"Associates.eq_of_factors_eq_factors","line":1501,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_factors_eq_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.eq_of_factors_eq_factors\"><span class=\"name\">Associates</span>.<span class=\"name\">eq_of_factors_eq_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1495-L1498","name":"Associates.factors_eq_some_iff_ne_zero","line":1495,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_eq_some_iff_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_eq_some_iff_ne_zero\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_eq_some_iff_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> }</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">s</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1489-L1492","name":"Associates.factors_eq_none_iff_zero","line":1489,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_eq_none_iff_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_eq_none_iff_zero\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_eq_none_iff_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1485-L1486","name":"Associates.factors_subsingleton","line":1485,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_subsingleton\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1480-L1481","name":"Associates.prod_factors","line":1480,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_factors\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1469-L1476","name":"Associates.factors_prod","line":1469,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_prod\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1462-L1465","name":"Associates.factors_mk","line":1462,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_mk\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1457-L1458","name":"Associates.factors_0","line":1457,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors_0\"><span class=\"name\">Associates</span>.<span class=\"name\">factors_0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\">Associates.factors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1446-L1453","name":"Associates.factors","line":1446,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors","doc":"This returns the multiset of irreducible factors of an associate as a `FactorSet`,\na multiset of irreducible associates `WithTop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors\"><span class=\"name\">Associates</span>.<span class=\"name\">factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1429-L1441","name":"Associates.factors'_cong","line":1429,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'_cong","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'_cong\"><span class=\"name\">Associates</span>.<span class=\"name\">factors'_cong</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1424-L1426","name":"Associates.map_subtype_coe_factors'","line":1424,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.map_subtype_coe_factors'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.map_subtype_coe_factors'\"><span class=\"name\">Associates</span>.<span class=\"name\">map_subtype_coe_factors'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\">Associates.factors'</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">Associates.mk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1419-L1420","name":"Associates.factors'","line":1419,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'","doc":"This returns the multiset of irreducible factors as a `FactorSet`,\na multiset of irreducible associates `WithTop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factors'\"><span class=\"name\">Associates</span>.<span class=\"name\">factors'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1399-L1414","name":"Associates.prod_le_prod_iff_le","line":1399,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_le_prod_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_le_prod_iff_le\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_le_prod_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">q</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">q</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1386-L1396","name":"Associates.FactorSet.unique","line":1386,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.unique\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">q</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1374-L1383","name":"Associates.unique'","line":1374,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.unique'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.unique'\"><span class=\"name\">Associates</span>.<span class=\"name\">unique'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">p</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">q</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">q</span></span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1367-L1369","name":"Associates.reducible_not_mem_factorSet","line":1367,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.reducible_not_mem_factorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.reducible_not_mem_factorSet\"><span class=\"name\">Associates</span>.<span class=\"name\">reducible_not_mem_factorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1361-L1364","name":"Associates.mem_factorSet_some","line":1361,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factorSet_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factorSet_some\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factorSet_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hp</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1357-L1358","name":"Associates.mem_factorSet_top","line":1357,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factorSet_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.mem_factorSet_top\"><span class=\"name\">Associates</span>.<span class=\"name\">mem_factorSet_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1353-L1354","name":"Associates.factorSetMem_eq_mem","line":1353,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factorSetMem_eq_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.factorSetMem_eq_mem\"><span class=\"name\">Associates</span>.<span class=\"name\">factorSetMem_eq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSetMem\">Associates.FactorSetMem</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1349-L1350","name":"Associates.instMembershipAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZeroFactorSet","line":1349,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instMembershipAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZeroFactorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.instMembershipAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZeroFactorSet\"><span class=\"name\">Associates</span>.<span class=\"name\">instMembershipAssociatesToMonoidToMonoidWithZeroToCommMonoidWithZeroFactorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1345-L1346","name":"Associates.FactorSetMem","line":1345,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSetMem","doc":"`FactorSetMem p s` is the predicate that the irreducible `p` is a member of\n`s : FactorSet α`.\n\nIf `p` is not irreducible, `p` is not a member of any `FactorSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSetMem\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSetMem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1336-L1338","name":"Associates.BfactorSetMem","line":1336,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.BfactorSetMem","doc":"membership in a FactorSet (bundled version) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.BfactorSetMem\"><span class=\"name\">Associates</span>.<span class=\"name\">BfactorSetMem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1330-L1332","name":"Associates.count_reducible","line":1330,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_reducible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_reducible\"><span class=\"name\">Associates</span>.<span class=\"name\">count_reducible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1323-L1327","name":"Associates.count_zero","line":1323,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_zero\"><span class=\"name\">Associates</span>.<span class=\"name\">count_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1315-L1319","name":"Associates.count_some","line":1315,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count_some\"><span class=\"name\">Associates</span>.<span class=\"name\">count_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\">Associates.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hp</span> }</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1310-L1311","name":"Associates.count","line":1310,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count","doc":"`count p s` is the multiplicity of the irreducible `p` in the FactorSet `s`.\n\nIf `p` is not irreducible, `count p s` is defined to be `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.count\"><span class=\"name\">Associates</span>.<span class=\"name\">count</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_irr : <span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1299-L1302","name":"Associates.bcount","line":1299,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.bcount","doc":"`bcount p s` is the multiplicity of `p` in the FactorSet `s` (with bundled `p`)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.bcount\"><span class=\"name\">Associates</span>.<span class=\"name\">bcount</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1290-L1295","name":"Associates.FactorSet.prod_eq_zero_iff","line":1290,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod_eq_zero_iff\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span>.<span class=\"name\">prod_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1282-L1287","name":"Associates.prod_mono","line":1282,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_mono\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1273-L1279","name":"Associates.prod_add","line":1273,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_add\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1267-L1269","name":"Associates.prod_coe","line":1267,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_coe\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1262-L1263","name":"Associates.prod_top","line":1262,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.prod_top\"><span class=\"name\">Associates</span>.<span class=\"name\">prod_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\">Associates.FactorSet.prod</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1256-L1258","name":"Associates.FactorSet.prod","line":1256,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod","doc":"Evaluates the product of a `FactorSet` to be the product of the corresponding multiset,\nor `0` if there is none. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.prod\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1243-L1251","name":"Associates.FactorSet.sup_add_inf_eq_add","line":1243,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.sup_add_inf_eq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.sup_add_inf_eq_add\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span>.<span class=\"name\">sup_add_inf_eq_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\">Associates.FactorSet</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1239-L1240","name":"Associates.FactorSet.coe_add","line":1239,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet.coe_add\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> }</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1233-L1234","name":"Associates.FactorSet","line":1233,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet","doc":"`FactorSet α` representation elements of unique factorization domain as multisets.\n`Multiset α` produced by `normalizedFactors` are only unique up to associated elements, while the\nmultisets in `FactorSet α` are unique by equality and restricted to irreducible elements. This\ngives us a representation of each element as a unique multisets (or the added ⊤ for 0), which has a\ncomplete lattice structure. Infimum is the greatest common divisor and supremum is the least common\nmultiple.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.FactorSet\"><span class=\"name\">Associates</span>.<span class=\"name\">FactorSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1162-L1212","name":"UniqueFactorizationMonoid.multiplicative_of_coprime","line":1162,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicative_of_coprime","doc":"If `f` maps `p ^ i` to `(f p) ^ i` for primes `p`, and `f`\nis multiplicative on coprime elements, then `f` is multiplicative everywhere. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicative_of_coprime\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">multiplicative_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <span class=\"fn\">α</span>} (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcp : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1141-L1157","name":"UniqueFactorizationMonoid.multiplicative_prime_power","line":1141,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicative_prime_power","doc":"If `f` maps `p ^ i` to `(f p) ^ i` for primes `p`, and `f`\nis multiplicative on coprime elements, then `f` is multiplicative on all products of primes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicative_prime_power\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">multiplicative_prime_power</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_prime : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_coprime : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">q</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">q</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <span class=\"fn\">α</span>} (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcp : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">p</span></span></span>)</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">i</span> <span class=\"fn\">p</span></span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">j</span> <span class=\"fn\">p</span></span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1120-L1135","name":"UniqueFactorizationMonoid.induction_on_coprime","line":1120,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_coprime","doc":"If `P` holds for `0`, units and powers of primes,\nand `P x ∧ P y` for coprime `x, y` implies `P (x * y)`,\nthen `P` holds on all `a : α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_coprime\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">induction_on_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <span class=\"fn\">α</span>} (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcp : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1100-L1113","name":"UniqueFactorizationMonoid.induction_on_prime_power","line":1100,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_prime_power","doc":"If `P` holds for units and powers of primes,\nand `P x ∧ P y` for coprime `x, y` implies `P (x * y)`,\nthen `P` holds on a product of powers of distinct primes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_prime_power\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">induction_on_prime_power</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_prime : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_coprime : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">q</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">q</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpr : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <span class=\"fn\">α</span>} (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcp : <span class=\"fn\">∀ {<span class=\"fn\">x </span>y : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">i</span> <span class=\"fn\">p</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1078-L1093","name":"UniqueFactorizationMonoid.prime_pow_coprime_prod_of_coprime_insert","line":1078,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_pow_coprime_prod_of_coprime_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_pow_coprime_prod_of_coprime_insert\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">prime_pow_coprime_prod_of_coprime_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hps : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_prime : <span class=\"fn\">∀ <span class=\"fn\">q</span> ∈ <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">q</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(is_coprime : <span class=\"fn\">∀ <span class=\"fn\">q</span> ∈ <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>, <span class=\"fn\">∀ <span class=\"fn\">q'</span> ∈ <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">q'</span></span> → <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q'</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">i</span> <span class=\"fn\">p</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">p'</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">p'</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">i</span> <span class=\"fn\">p'</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1065-L1066","name":"UniqueFactorizationMonoid.max_power_factor","line":1065,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor","doc":"Deprecated. Use `WfDvdMonoid.max_power_factor` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.max_power_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">max_power_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₀ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (a : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1052-L1060","name":"UniqueFactorizationMonoid.count_normalizedFactors_eq'","line":1052,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.count_normalizedFactors_eq'","doc":"The number of times an irreducible factor `p` appears in `normalizedFactors x` is defined by\nthe number of times it divides `x`. This is a slightly more general version of\n`UniqueFactorizationMonoid.count_normalizedFactors_eq` that allows `p = 0`.\n\nSee also `multiplicity_eq_count_normalizedFactors` if `n` is given by `multiplicity p x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.count_normalizedFactors_eq'\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">count_normalizedFactors_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnorm : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hle : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlt : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1034-L1043","name":"UniqueFactorizationMonoid.count_normalizedFactors_eq","line":1034,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.count_normalizedFactors_eq","doc":"The number of times an irreducible factor `p` appears in `normalizedFactors x` is defined by\nthe number of times it divides `x`.\n\nSee also `multiplicity_eq_count_normalizedFactors` if `n` is given by `multiplicity p x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.count_normalizedFactors_eq\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">count_normalizedFactors_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnorm : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hle : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlt : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L1018-L1025","name":"UniqueFactorizationMonoid.multiplicity_eq_count_normalizedFactors","line":1018,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicity_eq_count_normalizedFactors","doc":"The multiplicity of an irreducible factor of a nonzero element is exactly the number of times\nthe normalized factor occurs in the `normalizedFactors`.\n\nSee also `count_normalizedFactors_eq` which expands the definition of `multiplicity`\nto produce a specification for `count (normalizedFactors _) _`..\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.multiplicity_eq_count_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">multiplicity_eq_count_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_dvd : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">Dvd.dvd</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Multiplicity.html#multiplicity\">multiplicity</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">b</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L993-L1009","name":"UniqueFactorizationMonoid.le_multiplicity_iff_replicate_le_normalizedFactors","line":993,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.le_multiplicity_iff_replicate_le_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.le_multiplicity_iff_replicate_le_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">le_multiplicity_iff_replicate_le_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[dec_dvd : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">Dvd.dvd</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Multiplicity.html#multiplicity\">multiplicity</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.replicate\">Multiset.replicate</a> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L982-L983","name":"UniqueFactorizationMonoid.pow_eq_pow_iff","line":982,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.pow_eq_pow_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.pow_eq_pow_iff\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">pow_eq_pow_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha1 : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L969-L979","name":"UniqueFactorizationMonoid.pow_right_injective","line":969,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.pow_right_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.pow_right_injective\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">pow_right_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha1 : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L963-L966","name":"UniqueFactorizationMonoid.exists_reduced_factors'","line":963,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_reduced_factors'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_reduced_factors'\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_reduced_factors'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (a' : <span class=\"fn\">R</span>) (b' : <span class=\"fn\">R</span>) (c' : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L933-L960","name":"UniqueFactorizationMonoid.exists_reduced_factors","line":933,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_reduced_factors","doc":"If `a ≠ 0, b` are elements of a unique factorization domain, then dividing\nout their common factor `c'` gives `a'` and `b'` with no factors in common. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_reduced_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_reduced_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">R</span>), <span class=\"fn\">∃ (a' : <span class=\"fn\">R</span>) (b' : <span class=\"fn\">R</span>) (c' : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">a'</span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L926-L928","name":"UniqueFactorizationMonoid.dvd_of_dvd_mul_right_of_no_prime_factors","line":926,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_dvd_mul_right_of_no_prime_factors","doc":"Euclid's lemma: if `a ∣ b * c` and `a` and `b` have no common prime factors, `a ∣ c`.\nCompare `IsCoprime.dvd_of_dvd_mul_right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_dvd_mul_right_of_no_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvd_of_dvd_mul_right_of_no_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(no_factors : <span class=\"fn\">∀ {<span class=\"fn\">d</span> : <span class=\"fn\">R</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L919-L921","name":"UniqueFactorizationMonoid.dvd_of_dvd_mul_left_of_no_prime_factors","line":919,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_dvd_mul_left_of_no_prime_factors","doc":"Euclid's lemma: if `a ∣ b * c` and `a` and `c` have no common prime factors, `a ∣ b`.\nCompare `IsCoprime.dvd_of_dvd_mul_left`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_dvd_mul_left_of_no_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvd_of_dvd_mul_left_of_no_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ ⦃<span class=\"fn\">d</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L911-L914","name":"UniqueFactorizationMonoid.isRelPrime_iff_no_prime_factors","line":911,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.isRelPrime_iff_no_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.isRelPrime_iff_no_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">isRelPrime_iff_no_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">d</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">d</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L875-L902","name":"UniqueFactorizationMonoid.normalizationMonoid","line":875,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizationMonoid","doc":"Noncomputably defines a `normalizationMonoid` structure on a `UniqueFactorizationMonoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizationMonoid\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizationMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L847-L862","name":"UniqueFactorizationMonoid.normalizedFactors_multiset_prod","line":847,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_multiset_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_multiset_prod\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_multiset_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">0</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">UniqueFactorizationMonoid.normalizedFactors</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L834-L844","name":"UniqueFactorizationMonoid.dvdNotUnit_iff_normalizedFactors_lt_normalizedFactors","line":834,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvdNotUnit_iff_normalizedFactors_lt_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvdNotUnit_iff_normalizedFactors_lt_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvdNotUnit_iff_normalizedFactors_lt_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Divisibility.html#DvdNotUnit\">DvdNotUnit</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L820-L831","name":"UniqueFactorizationMonoid.normalizedFactors_pos","line":820,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_pos\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L812-L816","name":"UniqueFactorizationMonoid.mem_normalizedFactors_eq_of_associated","line":812,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mem_normalizedFactors_eq_of_associated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mem_normalizedFactors_eq_of_associated\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">mem_normalizedFactors_eq_of_associated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L805-L809","name":"UniqueFactorizationMonoid.normalizedFactors_prod_of_prime","line":805,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod_of_prime\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_prod_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">α</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">m</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L798-L802","name":"UniqueFactorizationMonoid.exists_associated_prime_pow_of_unique_normalized_factor","line":798,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_associated_prime_pow_of_unique_normalized_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_associated_prime_pow_of_unique_normalized_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_associated_prime_pow_of_unique_normalized_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ {<span class=\"fn\">m</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">r</span></span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L788-L796","name":"UniqueFactorizationMonoid.mem_normalizedFactors_iff","line":788,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mem_normalizedFactors_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mem_normalizedFactors_iff\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">mem_normalizedFactors_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">α</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L781-L785","name":"UniqueFactorizationMonoid.dvd_of_mem_normalizedFactors","line":781,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_mem_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_mem_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvd_of_mem_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L777-L778","name":"UniqueFactorizationMonoid.zero_not_mem_normalizedFactors","line":777,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.zero_not_mem_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.zero_not_mem_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">zero_not_mem_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L772-L774","name":"UniqueFactorizationMonoid.normalizedFactors_of_irreducible_pow","line":772,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_of_irreducible_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_of_irreducible_pow\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_of_irreducible_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.replicate\">Multiset.replicate</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">p</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L763-L769","name":"UniqueFactorizationMonoid.associated_iff_normalizedFactors_eq_normalizedFactors","line":763,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.associated_iff_normalizedFactors_eq_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.associated_iff_normalizedFactors_eq_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">associated_iff_normalizedFactors_eq_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L753-L760","name":"UniqueFactorizationMonoid.dvd_iff_normalizedFactors_le_normalizedFactors","line":753,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_iff_normalizedFactors_le_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_iff_normalizedFactors_le_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvd_iff_normalizedFactors_le_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L738-L750","name":"UniqueFactorizationMonoid.normalizedFactors_prod_eq","line":738,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod_eq\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_prod_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">normalize</span></span>)</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L732-L735","name":"Irreducible.normalizedFactors_pow","line":732,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Irreducible.normalizedFactors_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Irreducible.normalizedFactors_pow\"><span class=\"name\">Irreducible</span>.<span class=\"name\">normalizedFactors_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.replicate\">Multiset.replicate</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">p</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L723-L729","name":"UniqueFactorizationMonoid.normalizedFactors_pow","line":723,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_pow\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L700-L719","name":"UniqueFactorizationMonoid.normalizedFactors_mul","line":700,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_mul\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L687-L696","name":"UniqueFactorizationMonoid.normalizedFactors_one","line":687,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_one\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L682-L683","name":"UniqueFactorizationMonoid.normalizedFactors_zero","line":682,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_zero\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L674-L678","name":"UniqueFactorizationMonoid.exists_mem_normalizedFactors","line":674,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_normalizedFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_mem_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (p : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L655-L671","name":"UniqueFactorizationMonoid.exists_mem_normalizedFactors_of_dvd","line":655,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_normalizedFactors_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_normalizedFactors_of_dvd\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_mem_normalizedFactors_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\">∃ q ∈ <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L646-L652","name":"UniqueFactorizationMonoid.normalizedFactors_eq_of_dvd","line":646,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_eq_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_eq_of_dvd\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_eq_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span></span> → <span class=\"fn\">∀ <span class=\"fn\">q</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">q</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L635-L643","name":"UniqueFactorizationMonoid.normalizedFactors_irreducible","line":635,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_irreducible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_irreducible\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_irreducible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">a</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L626-L632","name":"UniqueFactorizationMonoid.normalize_normalized_factor","line":626,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalize_normalized_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalize_normalized_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalize_normalized_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">normalize</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L621-L623","name":"UniqueFactorizationMonoid.irreducible_of_normalized_factor","line":621,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_of_normalized_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_of_normalized_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">irreducible_of_normalized_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L613-L618","name":"UniqueFactorizationMonoid.prime_of_normalized_factor","line":613,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_of_normalized_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_of_normalized_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">prime_of_normalized_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L602-L610","name":"UniqueFactorizationMonoid.normalizedFactors_prod","line":602,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors_prod\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ane0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L594-L599","name":"UniqueFactorizationMonoid.factors_eq_normalizedFactors","line":594,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_eq_normalizedFactors","doc":"An arbitrary choice of factors of `x : M` is exactly the (unique) normalized set of factors,\nif `M` has a trivial group of units. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_eq_normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_eq_normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L587-L588","name":"UniqueFactorizationMonoid.normalizedFactors","line":587,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors","doc":"Noncomputably determines the multiset of prime factors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.normalizedFactors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">normalizedFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizationMonoid\">NormalizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L571-L577","name":"UniqueFactorizationMonoid.factors_pow_count_prod","line":571,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pow_count_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pow_count_prod\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_pow_count_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Multiset.toFinset\">Multiset.toFinset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">α</span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.count\">Multiset.count</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span>)</span></span></span></span></span>)</span>\n  <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L558-L567","name":"UniqueFactorizationMonoid.factors_pos","line":558,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pos\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L544-L554","name":"UniqueFactorizationMonoid.factors_pow","line":544,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_pow\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L533-L541","name":"UniqueFactorizationMonoid.factors_mul","line":533,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_mul\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L526-L529","name":"UniqueFactorizationMonoid.exists_mem_factors","line":526,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_mem_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (p : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L509-L523","name":"UniqueFactorizationMonoid.exists_mem_factors_of_dvd","line":509,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_factors_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_mem_factors_of_dvd\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_mem_factors_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span> → <span class=\"fn\">∃ q ∈ <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L501-L506","name":"UniqueFactorizationMonoid.factors_one","line":501,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_one\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L496-L497","name":"UniqueFactorizationMonoid.irreducible_of_factor","line":496,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_of_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_of_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">irreducible_of_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L490-L493","name":"UniqueFactorizationMonoid.prime_of_factor","line":490,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_of_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.prime_of_factor\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">prime_of_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L486-L487","name":"UniqueFactorizationMonoid.dvd_of_mem_factors","line":486,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_mem_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.dvd_of_mem_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">dvd_of_mem_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L481-L483","name":"UniqueFactorizationMonoid.ne_zero_of_mem_factors","line":481,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.ne_zero_of_mem_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.ne_zero_of_mem_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">ne_zero_of_mem_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L478-L478","name":"UniqueFactorizationMonoid.factors_zero","line":478,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_zero\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L472-L474","name":"UniqueFactorizationMonoid.factors_prod","line":472,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_prod\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ane0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\">UniqueFactorizationMonoid.factors</a> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L468-L469","name":"UniqueFactorizationMonoid.factors","line":468,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors","doc":"Noncomputably determines the multiset of prime factors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L448-L458","name":"UniqueFactorizationMonoid.of_exists_unique_irreducible_factors","line":448,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.of_exists_unique_irreducible_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.of_exists_unique_irreducible_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">of_exists_unique_irreducible_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(eif : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(uif : <span class=\"fn\">∀ (<span class=\"fn\">f </span>g : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">g</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">g</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L408-L445","name":"irreducible_iff_prime_of_exists_unique_irreducible_factors","line":408,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#irreducible_iff_prime_of_exists_unique_irreducible_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#irreducible_iff_prime_of_exists_unique_irreducible_factors\"><span class=\"name\">irreducible_iff_prime_of_exists_unique_irreducible_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(eif : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(uif : <span class=\"fn\">∀ (<span class=\"fn\">f </span>g : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">g</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">g</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L401-L403","name":"MulEquiv.uniqueFactorizationMonoid_iff","line":401,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#MulEquiv.uniqueFactorizationMonoid_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#MulEquiv.uniqueFactorizationMonoid_iff\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">uniqueFactorizationMonoid_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L382-L398","name":"MulEquiv.uniqueFactorizationMonoid","line":382,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#MulEquiv.uniqueFactorizationMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#MulEquiv.uniqueFactorizationMonoid\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">uniqueFactorizationMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hα : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L371-L375","name":"UniqueFactorizationMonoid.iff_exists_prime_factors","line":371,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.iff_exists_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.iff_exists_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">iff_exists_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L364-L366","name":"UniqueFactorizationMonoid.of_exists_prime_factors","line":364,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.of_exists_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.of_exists_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">of_exists_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pf : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L354-L361","name":"irreducible_iff_prime_of_exists_prime_factors","line":354,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#irreducible_iff_prime_of_exists_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#irreducible_iff_prime_of_exists_prime_factors\"><span class=\"name\">irreducible_iff_prime_of_exists_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pf : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L312-L351","name":"WfDvdMonoid.of_exists_prime_factors","line":312,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_exists_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_exists_prime_factors\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">of_exists_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pf : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L285-L304","name":"prime_factors_irreducible","line":285,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#prime_factors_irreducible","doc":"If an irreducible has a prime factorization,\nthen it is an associate of one of its prime factors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#prime_factors_irreducible\"><span class=\"name\">prime_factors_irreducible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pfa : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (p : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">p</span>}</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L275-L278","name":"UniqueFactorizationMonoid.factors_unique","line":275,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.factors_unique\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">factors_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">g</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L244-L268","name":"prime_factors_unique","line":244,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#prime_factors_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#prime_factors_unique\"><span class=\"name\">prime_factors_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">g</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">g</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.Rel\">Multiset.Rel</a> <span class=\"fn\">Associated</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L236-L239","name":"UniqueFactorizationMonoid.induction_on_prime","line":236,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.induction_on_prime\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">induction_on_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₃ : <span class=\"fn\">∀ (<span class=\"fn\">a </span>p : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L229-L233","name":"UniqueFactorizationMonoid.exists_prime_iff","line":229,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_prime_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_prime_iff\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_prime_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (p : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">p</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L223-L227","name":"UniqueFactorizationMonoid.instDecompositionMonoidToSemigroupToSemigroupWithZeroToMonoidWithZeroToCommMonoidWithZero","line":223,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.instDecompositionMonoidToSemigroupToSemigroupWithZeroToMonoidWithZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.instDecompositionMonoidToSemigroupToSemigroupWithZeroToMonoidWithZeroToCommMonoidWithZero\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">instDecompositionMonoidToSemigroupToSemigroupWithZeroToMonoidWithZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L217-L220","name":"UniqueFactorizationMonoid.exists_prime_factors","line":217,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_prime_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.exists_prime_factors\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">exists_prime_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L203-L208","name":"Associates.ufm","line":203,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.ufm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#Associates.ufm\"><span class=\"name\">Associates</span>.<span class=\"name\">ufm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L201-L201","name":"ufm_of_gcd_of_wfDvdMonoid","line":201,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#ufm_of_gcd_of_wfDvdMonoid","doc":"**Alias** of `ufm_of_decomposition_of_wfDvdMonoid`.\n\n---\n\nCan't be an instance because it would cause a loop `ufm → WfDvdMonoid → ufm → ...`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#ufm_of_gcd_of_wfDvdMonoid\"><span class=\"name\">ufm_of_gcd_of_wfDvdMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L197-L199","name":"ufm_of_decomposition_of_wfDvdMonoid","line":197,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#ufm_of_decomposition_of_wfDvdMonoid","doc":"Can't be an instance because it would cause a loop `ufm → WfDvdMonoid → ufm → ...`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#ufm_of_decomposition_of_wfDvdMonoid\"><span class=\"name\">ufm_of_decomposition_of_wfDvdMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L193-L193","name":"UniqueFactorizationMonoid.irreducible_iff_prime","line":193,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.irreducible_iff_prime\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">irreducible_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L191-L191","name":"UniqueFactorizationMonoid.mk","line":191,"kind":"ctor","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid.mk\"><span class=\"name\">UniqueFactorizationMonoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toWfDvdMonoid : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(irreducible_iff_prime : <span class=\"fn\">∀ {<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Prime\">Prime</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L191-L193","name":"UniqueFactorizationMonoid","line":191,"kind":"class","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid","doc":"unique factorization monoids.\n\nThese are defined as `CancelCommMonoidWithZero`s with well-founded strict divisibility\nrelations, but this is equivalent to more familiar definitions:\n\nEach element (except zero) is uniquely represented as a multiset of irreducible factors.\nUniqueness is only up to associated elements.\n\nEach element (except zero) is non-uniquely represented as a multiset\nof prime factors.\n\nTo define a UFD using the definition in terms of multisets\nof irreducible factors, use the definition `of_exists_unique_irreducible_factors`\n\nTo define a UFD using the definition in terms of multisets\nof prime factors, use the definition `of_exists_prime_factors`\n\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#UniqueFactorizationMonoid\"><span class=\"name\">UniqueFactorizationMonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\"><span class=\"name\">WfDvdMonoid</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L163-L166","name":"multiplicity.finite_of_not_isUnit","line":163,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#multiplicity.finite_of_not_isUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#multiplicity.finite_of_not_isUnit\"><span class=\"name\">multiplicity</span>.<span class=\"name\">finite_of_not_isUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Multiplicity.html#multiplicity.Finite\">multiplicity.Finite</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L159-L161","name":"WfDvdMonoid.max_power_factor","line":159,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.max_power_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.max_power_factor\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">max_power_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₀ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L151-L157","name":"WfDvdMonoid.max_power_factor'","line":151,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.max_power_factor'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.max_power_factor'\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">max_power_factor'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₀ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (a : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">a₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L146-L148","name":"WfDvdMonoid.iff_wellFounded_associates","line":146,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.iff_wellFounded_associates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.iff_wellFounded_associates\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">iff_wellFounded_associates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L137-L143","name":"WfDvdMonoid.of_wellFounded_associates","line":137,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_wellFounded_associates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_wellFounded_associates\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">of_wellFounded_associates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L129-L133","name":"WfDvdMonoid.isRelPrime_of_no_irreducible_factors","line":129,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.isRelPrime_of_no_irreducible_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.isRelPrime_of_no_irreducible_factors\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">isRelPrime_of_no_irreducible_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nonzero : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">y</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L114-L126","name":"WfDvdMonoid.not_unit_iff_exists_factors_eq","line":114,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.not_unit_iff_exists_factors_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.not_unit_iff_exists_factors_eq\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">not_unit_iff_exists_factors_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L103-L111","name":"WfDvdMonoid.exists_factors","line":103,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.exists_factors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.exists_factors\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">exists_factors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">b</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associated\">Associated</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L88-L100","name":"WfDvdMonoid.induction_on_irreducible","line":88,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.induction_on_irreducible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.induction_on_irreducible\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">induction_on_irreducible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\">∀ (<span class=\"fn\">a </span>i : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">i</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L76-L84","name":"WfDvdMonoid.exists_irreducible_factor","line":76,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.exists_irreducible_factor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.exists_irreducible_factor\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">exists_irreducible_factor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha0 : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (i : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L69-L70","name":"WfDvdMonoid.wellFounded_associates","line":69,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wellFounded_associates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wellFounded_associates\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">wellFounded_associates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L65-L66","name":"WfDvdMonoid.wfDvdMonoid_associates","line":65,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wfDvdMonoid_associates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wfDvdMonoid_associates\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">wfDvdMonoid_associates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L59-L60","name":"WfDvdMonoid.of_wfDvdMonoid_associates","line":59,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_wfDvdMonoid_associates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.of_wfDvdMonoid_associates\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">of_wfDvdMonoid_associates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Associates\">Associates</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L45-L50","name":"IsNoetherianRing.wfDvdMonoid","line":45,"kind":"instance","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#IsNoetherianRing.wfDvdMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#IsNoetherianRing.wfDvdMonoid\"><span class=\"name\">IsNoetherianRing</span>.<span class=\"name\">wfDvdMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Noetherian.html#IsNoetherianRing\">IsNoetherianRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L39-L39","name":"WfDvdMonoid.wellFounded_dvdNotUnit","line":39,"kind":"def","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wellFounded_dvdNotUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.wellFounded_dvdNotUnit\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">wellFounded_dvdNotUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">DvdNotUnit</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L38-L38","name":"WfDvdMonoid.mk","line":38,"kind":"ctor","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid.mk\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(wellFounded_dvdNotUnit : <span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">DvdNotUnit</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/RingTheory/UniqueFactorizationDomain.lean#L38-L39","name":"WfDvdMonoid","line":38,"kind":"class","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid","doc":"Well-foundedness of the strict version of |, which is equivalent to the descending chain\ncondition on divisibility and to the ascending chain condition on\nprincipal ideals in an integral domain.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain.html#WfDvdMonoid\"><span class=\"name\">WfDvdMonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}