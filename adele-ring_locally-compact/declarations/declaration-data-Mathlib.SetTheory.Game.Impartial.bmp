{"name":"Mathlib.SetTheory.Game.Impartial","instances":[{"typeNames":["OfNat.ofNat"],"name":"SetTheory.PGame.Impartial.impartial_zero","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.star"],"name":"SetTheory.PGame.Impartial.impartial_star","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveLeft"],"name":"SetTheory.PGame.Impartial.moveLeft_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveRight"],"name":"SetTheory.PGame.Impartial.moveRight_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.Impartial.impartial_add","className":"SetTheory.PGame.Impartial"},{"typeNames":["Neg.neg"],"name":"SetTheory.PGame.Impartial.impartial_neg","className":"SetTheory.PGame.Impartial"}],"imports":["Init","Mathlib.SetTheory.Game.Basic","Mathlib.Tactic.NthRewrite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L192-L196","name":"SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","line":192,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_right_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.RightMoves</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveRight</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L186-L190","name":"SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","line":186,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_left_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.LeftMoves</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveLeft</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L179-L184","name":"SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","line":179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_rightMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.RightMoves</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveRight</span> <span class=\"fn\">j</span></span>)</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L172-L177","name":"SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","line":172,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_leftMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.LeftMoves</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveLeft</span> <span class=\"fn\">i</span></span>)</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L169-L170","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","line":169,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_gf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L166-L167","name":"SetTheory.PGame.Impartial.equiv_zero_iff_ge","line":166,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_ge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L163-L164","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_lf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.LF</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L160-L161","name":"SetTheory.PGame.Impartial.equiv_zero_iff_le","line":160,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L157-L158","name":"SetTheory.PGame.Impartial.lf_zero_iff","line":157,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">lf_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.LF</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L154-L155","name":"SetTheory.PGame.Impartial.le_zero_iff","line":154,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">le_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L149-L152","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","line":149,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L143-L146","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","line":143,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L139-L140","name":"SetTheory.PGame.Impartial.mk'_add_self","line":139,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L134-L135","name":"SetTheory.PGame.Impartial.add_self","line":134,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L131-L132","name":"SetTheory.PGame.Impartial.not_fuzzy_zero_iff","line":131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_fuzzy_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L127-L128","name":"SetTheory.PGame.Impartial.not_equiv_zero_iff","line":127,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_equiv_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L119-L124","name":"SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","line":119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","doc":"In an impartial game, either the first player always wins, or the second player always wins. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_or_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Fuzzy</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L113-L116","name":"SetTheory.PGame.Impartial.nonneg","line":113,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L108-L111","name":"SetTheory.PGame.Impartial.nonpos","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonpos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L94-L104","name":"SetTheory.PGame.Impartial.impartial_neg","line":94,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span>)</span>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L79-L92","name":"SetTheory.PGame.Impartial.impartial_add","line":79,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span></span>)</span>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L71-L77","name":"SetTheory.PGame.Impartial.impartial_congr","line":71,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Relabelling</span> <span class=\"fn\">H</span></span> → <span class=\"fn\">∀ [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>], <span class=\"fn\"><span class=\"fn\">H</span>.Impartial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L67-L69","name":"SetTheory.PGame.Impartial.moveRight_impartial","line":67,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveRight_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><span class=\"fn\">G</span>.RightMoves</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveRight</span> <span class=\"fn\">j</span></span>)</span>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L63-L65","name":"SetTheory.PGame.Impartial.moveLeft_impartial","line":63,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveLeft_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">G</span>.LeftMoves</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveLeft</span> <span class=\"fn\">i</span></span>)</span>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L60-L61","name":"SetTheory.PGame.Impartial.mk'_neg_equiv_self","line":60,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L55-L56","name":"SetTheory.PGame.Impartial.neg_equiv_self","line":55,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L52-L53","name":"SetTheory.PGame.Impartial.impartial_star","line":52,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.star\">SetTheory.PGame.star</a>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L50-L50","name":"SetTheory.PGame.Impartial.impartial_zero","line":50,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L44-L46","name":"SetTheory.PGame.impartial_def","line":44,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.LeftMoves</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveLeft</span> <span class=\"fn\">i</span></span>)</span>.Impartial</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.RightMoves</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveRight</span> <span class=\"fn\">j</span></span>)</span>.Impartial</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L41-L42","name":"SetTheory.PGame.impartial_iff_aux","line":41,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_iff_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_iff_aux\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_iff_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span>.ImpartialAux</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L39-L39","name":"SetTheory.PGame.Impartial.out","line":39,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.ImpartialAux</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L38-L38","name":"SetTheory.PGame.Impartial.mk","line":38,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\"><span class=\"fn\">G</span>.ImpartialAux</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.Impartial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L38-L39","name":"SetTheory.PGame.Impartial","line":38,"kind":"class","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial","doc":"A typeclass on impartial games. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L32-L35","name":"SetTheory.PGame.impartialAux_def","line":32,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartialAux_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartialAux_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartialAux_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.ImpartialAux</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.LeftMoves</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveLeft</span> <span class=\"fn\">i</span></span>)</span>.ImpartialAux</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">G</span>.RightMoves</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.moveRight</span> <span class=\"fn\">j</span></span>)</span>.ImpartialAux</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Game/Impartial.lean#L28-L30","name":"SetTheory.PGame.ImpartialAux","line":28,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux","doc":"The definition for an impartial game, defined using Conway induction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ImpartialAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"}]}