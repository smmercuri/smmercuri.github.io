{"name":"Mathlib.SetTheory.Game.Impartial","instances":[{"typeNames":["OfNat.ofNat"],"name":"SetTheory.PGame.Impartial.impartial_zero","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.star"],"name":"SetTheory.PGame.Impartial.impartial_star","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveLeft"],"name":"SetTheory.PGame.Impartial.moveLeft_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["SetTheory.PGame.moveRight"],"name":"SetTheory.PGame.Impartial.moveRight_impartial","className":"SetTheory.PGame.Impartial"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.Impartial.impartial_add","className":"SetTheory.PGame.Impartial"},{"typeNames":["Neg.neg"],"name":"SetTheory.PGame.Impartial.impartial_neg","className":"SetTheory.PGame.Impartial"}],"imports":["Init","Mathlib.SetTheory.Game.Basic","Mathlib.Tactic.NthRewrite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L226-L230","name":"SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","line":226,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_right_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_right_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (j : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L219-L223","name":"SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","line":219,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.exists_left_move_equiv_iff_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">exists_left_move_equiv_iff_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L211-L216","name":"SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","line":211,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_rightMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_rightMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L203-L208","name":"SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","line":203,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.forall_leftMoves_fuzzy_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">forall_leftMoves_fuzzy_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">0</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L199-L200","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","line":199,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_gf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_gf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L195-L196","name":"SetTheory.PGame.Impartial.equiv_zero_iff_ge","line":195,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_ge\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_ge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L191-L192","name":"SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","line":191,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.fuzzy_zero_iff_lf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">fuzzy_zero_iff_lf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L187-L188","name":"SetTheory.PGame.Impartial.equiv_zero_iff_le","line":187,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_zero_iff_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_zero_iff_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L183-L184","name":"SetTheory.PGame.Impartial.lf_zero_iff","line":183,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.lf_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">lf_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LF\">SetTheory.PGame.LF</a> <span class=\"fn\">0</span> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L179-L180","name":"SetTheory.PGame.Impartial.le_zero_iff","line":179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.le_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">le_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L173-L176","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","line":173,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L166-L169","name":"SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","line":166,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero","doc":"This lemma doesn't require `H` to be impartial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_iff_add_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_iff_add_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L161-L162","name":"SetTheory.PGame.Impartial.mk'_add_self","line":161,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L155-L156","name":"SetTheory.PGame.Impartial.add_self","line":155,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.add_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">add_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L151-L152","name":"SetTheory.PGame.Impartial.not_fuzzy_zero_iff","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_fuzzy_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_fuzzy_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L146-L147","name":"SetTheory.PGame.Impartial.not_equiv_zero_iff","line":146,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.not_equiv_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">not_equiv_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L137-L142","name":"SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","line":137,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero","doc":"In an impartial game, either the first player always wins, or the second player always wins. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.equiv_or_fuzzy_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">equiv_or_fuzzy_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Fuzzy\">SetTheory.PGame.Fuzzy</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L130-L133","name":"SetTheory.PGame.Impartial.nonneg","line":130,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonneg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L124-L127","name":"SetTheory.PGame.Impartial.nonpos","line":124,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.nonpos\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">nonpos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L109-L119","name":"SetTheory.PGame.Impartial.impartial_neg","line":109,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L93-L106","name":"SetTheory.PGame.Impartial.impartial_add","line":93,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L84-L90","name":"SetTheory.PGame.Impartial.impartial_congr","line":84,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_congr\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.Relabelling\">SetTheory.PGame.Relabelling</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span></span> → <span class=\"fn\">∀ [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>], <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">H</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L79-L81","name":"SetTheory.PGame.Impartial.moveRight_impartial","line":79,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveRight_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveRight_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L74-L76","name":"SetTheory.PGame.Impartial.moveLeft_impartial","line":74,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.moveLeft_impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">moveLeft_impartial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L70-L71","name":"SetTheory.PGame.Impartial.mk'_neg_equiv_self","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk'_neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk'_neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟦<span class=\"fn\">G</span>⟧</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L64-L65","name":"SetTheory.PGame.Impartial.neg_equiv_self","line":64,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.neg_equiv_self\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">neg_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L60-L61","name":"SetTheory.PGame.Impartial.impartial_star","line":60,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_star\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.star\">SetTheory.PGame.star</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L57-L57","name":"SetTheory.PGame.Impartial.impartial_zero","line":57,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.impartial_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">impartial_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L50-L52","name":"SetTheory.PGame.impartial_def","line":50,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L46-L47","name":"SetTheory.PGame.impartial_iff_aux","line":46,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_iff_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartial_iff_aux\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_iff_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L43-L43","name":"SetTheory.PGame.Impartial.out","line":43,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.out\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L42-L42","name":"SetTheory.PGame.Impartial.mk","line":42,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">SetTheory.PGame.Impartial</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L42-L43","name":"SetTheory.PGame.Impartial","line":42,"kind":"class","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial","doc":"A typeclass on impartial games. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Impartial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L35-L38","name":"SetTheory.PGame.impartialAux_def","line":35,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartialAux_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.impartialAux_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartialAux_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">G</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\">SetTheory.PGame.ImpartialAux</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">G</span> <span class=\"fn\">j</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Game/Impartial.lean#L30-L32","name":"SetTheory.PGame.ImpartialAux","line":30,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux","doc":"The definition for an impartial game, defined using Conway induction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.ImpartialAux\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ImpartialAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"}]}