{"name":"Mathlib.SetTheory.Ordinal.CantorNormalForm","instances":[],"imports":["Init","Mathlib.SetTheory.Ordinal.Arithmetic","Mathlib.SetTheory.Ordinal.Exponential"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L131-L142","name":"Ordinal.CNF_sorted","line":131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_sorted","doc":"The exponents of the Cantor normal form are decreasing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_sorted\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_sorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">x_1</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">Prod.fst</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L120-L128","name":"Ordinal.CNF_snd_lt","line":120,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_snd_lt","doc":"Every coefficient in the Cantor normal form `CNF b o` is less than `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_snd_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_snd_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L112-L117","name":"Ordinal.CNF_lt_snd","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_lt_snd","doc":"Every coefficient in a Cantor normal form is positive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_lt_snd\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_lt_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L108-L109","name":"Ordinal.CNF_fst_le","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le","doc":"Every exponent in the Cantor normal form `CNF b o` is less or equal to `o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_fst_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L97-L105","name":"Ordinal.CNF_fst_le_log","line":97,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le_log","doc":"Every exponent in the Cantor normal form `CNF b o` is less or equal to `log b o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_fst_le_log\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_fst_le_log</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L92-L94","name":"Ordinal.CNF_foldr","line":92,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_foldr","doc":"Evaluating the Cantor normal form of an ordinal returns the ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_foldr\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_foldr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">List.foldr</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>) (<span class=\"fn\">r</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span></span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L88-L89","name":"Ordinal.CNF_of_lt","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L83-L86","name":"Ordinal.CNF_of_le_one","line":83,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_of_le_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_of_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L81-L81","name":"Ordinal.one_CNF","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.one_CNF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.one_CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">one_CNF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">1</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L79-L79","name":"Ordinal.zero_CNF","line":79,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.zero_CNF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.zero_CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">zero_CNF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">0</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">o</span>)</span>]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L75-L77","name":"Ordinal.CNF_ne_zero","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_ne_zero","doc":"Recursive definition for the Cantor normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span>, <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L71-L72","name":"Ordinal.CNF_zero","line":71,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\">Ordinal.CNF</a> <span class=\"fn\">b</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L67-L68","name":"Ordinal.CNF","line":67,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF","doc":"The Cantor normal form of an ordinal `o` is the list of coefficients and exponents in the\nbase-`b` expansion of `o`.\n\nWe special-case `CNF 0 o = CNF 1 o = [(0, o)]` for `o ≠ 0`.\n\n`CNF b (b ^ u₁ * v₁ + b ^ u₂ * v₂) = [(u₁, v₁), (u₂, v₂)]` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNF\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L56-L58","name":"Ordinal.CNFRec_pos","line":56,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.CNFRec</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">o</span> <span class=\"fn\">ho</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.CNFRec</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L51-L54","name":"Ordinal.CNFRec_zero","line":51,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.CNFRec</span> <span class=\"fn\">H0</span> <span class=\"fn\">H</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">H0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/SetTheory/Ordinal/CantorNormalForm.lean#L42-L48","name":"Ordinal.CNFRec","line":42,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec","doc":"Inducts on the base `b` expansion of an ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/CantorNormalForm.html#Ordinal.CNFRec\"><span class=\"name\">Ordinal</span>.<span class=\"name\">CNFRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H0 : <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Exponential.html#Ordinal.log\">Ordinal.log</a> <span class=\"fn\">b</span> <span class=\"fn\">o</span></span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">o</span></span></div></div>"}]}